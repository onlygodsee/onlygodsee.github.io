<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Git Pages + Hexo 搭建个人博客记录</title>
    <url>/2020/04/26/article-1/</url>
    <content><![CDATA[<p>首先交代一下为什么使用Hexo而不是Jekyll。因为电脑环境有问题导致第一次安装Ruby失败了，然后懒得弄了。</p>
<p>开发环境：Mac</p>
<p>感谢 <strong><a href="https://blog.csdn.net/muzilanlan/article/details/81542917" target="_blank" rel="noopener">muzilan</a></strong> 兄台的分享</p>
<h3 id="设置Git-Pages"><a href="#设置Git-Pages" class="headerlink" title="设置Git Pages"></a>设置Git Pages</h3><p> 创建一个新仓库，命名规则为 <strong>{*username*}.github.io</strong></p>
<p> 注意这里的 <strong>“*username*”</strong> 是 Github 的用户名</p>
<p> 创建成功后创建 <strong><em>index.html\</em></strong> 文件，内容随意</p>
<p> 之后使用浏览器打开pages页面查看是否创建成功</p>
<h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p> <a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo模版地址</a></p>
<p> <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo中文文档</a></p>
<p> <a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">Next主题文档</a></p>
<p> Hexo 依赖 Node.js 环境，我这里已经安装过了便不再叙述。</p>
<h4 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p> 初始化 Hexo 目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir hexofolder</span><br><span class="line">hexo init hexofolder</span><br><span class="line">cd hexofolder</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<h4 id="Hexo-常用命令"><a href="#Hexo-常用命令" class="headerlink" title="Hexo 常用命令"></a>Hexo 常用命令</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g # 生成模版</span><br><span class="line">hexo s # 启动本地服务 http://localhost:4000</span><br><span class="line">hexo d # 部署</span><br><span class="line">hexo new post [postname] # 创建指定名称的文章文件,md格式</span><br><span class="line">hexo new page [pagename] # 创建新的页面，eg：tags， categories</span><br><span class="line">hexo d -g # 生成部署</span><br><span class="line">hexo s -g # 生成预览</span><br></pre></td></tr></table></figure>

<h4 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">cd hexofolder/themes</span><br><span class="line">git clone [theme地址] [themename] # 将theme模版以自定义name保存到本地</span><br></pre></td></tr></table></figure>

<h4 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd hexofolder/themes/[themename] # 进入主题目录</span><br><span class="line">git pull</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<h4 id="部署至-Git-Pages"><a href="#部署至-Git-Pages" class="headerlink" title="部署至 Git Pages"></a>部署至 Git Pages</h4><p> 安装插件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p> 修改 <strong><em>站点配置文件\</em></strong> <strong><em>_config.yml\</em></strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: [Git Pages 地址]</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p> 在 Hexo 中执行部署命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>至此 模版部署完成</p>
<h3 id="Hexo-添加分类、标签"><a href="#Hexo-添加分类、标签" class="headerlink" title="Hexo 添加分类、标签"></a>Hexo 添加分类、标签</h3><h4 id="新建分类页面"><a href="#新建分类页面" class="headerlink" title="新建分类页面"></a>新建分类页面</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>

<p>此时会在 <strong><em>source/categories\</em></strong> 下生成一个 <strong><em>index.md\</em></strong> 文件,对他进行编辑</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2020-04-26 12:11:21</span><br><span class="line">type: "categories"</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p><strong><em>comments\</em></strong> 为评论开关</p>
<p>修改 <strong><em>主题配置文件 _config.yml\</em></strong> ，将分类与标签的注释打开</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home</span><br><span class="line"><span class="meta">  #</span><span class="bash">about: /about/ || fa fa-user</span></span><br><span class="line">  tags: /tags/ || fa fa-tags</span><br><span class="line">  categories: /categories/ || fa fa-th</span><br><span class="line">  archives: /archives/ || fa fa-archive</span><br><span class="line"><span class="meta">  #</span><span class="bash">schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure>

<p>标签的设置方式同分类</p>
<h4 id="文章中添加标签和分类等"><a href="#文章中添加标签和分类等" class="headerlink" title="文章中添加标签和分类等"></a>文章中添加标签和分类等</h4><p>新建文章</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new post [articlename]</span><br></pre></td></tr></table></figure>

<p>修改文章头部信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: [标题名称]</span><br><span class="line">catalog: true</span><br><span class="line">date: 2018-09-29 14:23:53</span><br><span class="line">subtitle: "[子标题]"</span><br><span class="line">header-img: "[imgpath]"</span><br><span class="line">tags:</span><br><span class="line">- [tag1]</span><br><span class="line">- [tag2]</span><br><span class="line">categories:</span><br><span class="line">- [categorie1]</span><br><span class="line">- [categorie2]</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h3 id="装饰博客"><a href="#装饰博客" class="headerlink" title="装饰博客"></a>装饰博客</h3><h4 id="配置网站"><a href="#配置网站" class="headerlink" title="配置网站"></a>配置网站</h4><p>打开 <strong><em>站点配置文件 _config.yml\</em></strong>, 修改参数</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Site</span></span><br><span class="line">title: 太液池 # 网站标题</span><br><span class="line">subtitle: ‘’ # 网站副标题</span><br><span class="line">description: ''</span><br><span class="line">keywords:</span><br><span class="line">author: 青桑 # 您的名字</span><br><span class="line">language: zh-CN # 网站使用的语言。参考你的主题的文档自行设置，常见的有 zh-Hans和 zh-CN</span><br><span class="line">timezone: ''</span><br></pre></td></tr></table></figure>

<h4 id="设置网站的图标Favicon-ico和头像"><a href="#设置网站的图标Favicon-ico和头像" class="headerlink" title="设置网站的图标Favicon.ico和头像"></a>设置网站的图标Favicon.ico和头像</h4><p>在 <strong>source</strong> 下创建文件夹 <strong>images</strong>， 将图片文件保存在 <strong>images</strong> 目录下，然后修改 <strong><em>主题配置文件 _config.yml\</em></strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: /images/favicon-16x16-next.png</span><br><span class="line">  medium: /images/favicon.ico # 这里修改要生效的图标</span><br><span class="line">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">  safari_pinned_tab: /images/logo.svg</span><br><span class="line"><span class="meta">  #</span><span class="bash">android_manifest: /images/manifest.json</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">ms_browserconfig: /images/browserconfig.xml</span></span><br><span class="line">avatar:</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Replace the default image and <span class="built_in">set</span> the url here.</span></span><br><span class="line">  url: /images/blog_head.png # 这里修改为要生效的头像</span><br><span class="line"><span class="meta">  #</span><span class="bash"> If <span class="literal">true</span>, the avatar will be dispalyed <span class="keyword">in</span> circle.</span></span><br><span class="line">  rounded: false</span><br><span class="line"><span class="meta">  #</span><span class="bash"> If <span class="literal">true</span>, the avatar will be rotated with the cursor.</span></span><br><span class="line">  rotated: false</span><br></pre></td></tr></table></figure>

<h4 id="配置站内搜索"><a href="#配置站内搜索" class="headerlink" title="配置站内搜索"></a>配置站内搜索</h4><p>采用 <strong>Local Search</strong> 方式，添加百度/谷歌/本地 自定义站点内容搜索</p>
<p>安装 <code>hexo-generator-searchdb</code> ，在站点的根目录下执行以下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>在 <strong><em>站点配置文件\</em></strong> <strong><em>_config.yml\</em></strong> 末尾添加如下信息：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure>

<p>在 <strong><em>主题配置文件\</em></strong> <strong><em>_config.yml\</em></strong> 中启用本地搜索：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Local search</span></span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>

<h4 id="统计"><a href="#统计" class="headerlink" title="统计"></a>统计</h4><p><strong>不蒜子统计</strong></p>
<p>修改 <strong><em>主题配置文件\</em></strong> <strong><em>_config.yml\</em></strong> 中 <strong><em>busuanzi_count\</em></strong> 配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  enable: true # true 为启用状态</span><br><span class="line">  total_visitors: true # 统计访客数</span><br><span class="line">  total_visitors_icon: fa fa-user</span><br><span class="line">  total_views: true # 统计访问量</span><br><span class="line">  total_views_icon: fa fa-eye</span><br><span class="line">  post_views: true # 统计阅读数</span><br><span class="line">  post_views_icon: fa fa-eye</span><br></pre></td></tr></table></figure>

<h3 id="利用Shell脚本按序号递增创建文章"><a href="#利用Shell脚本按序号递增创建文章" class="headerlink" title="利用Shell脚本按序号递增创建文章"></a>利用Shell脚本按序号递增创建文章</h3><p>创建shell脚本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim crt_hexo_article.sh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 文件名命名示例 article-1.md<span class="string">"</span></span></span><br><span class="line">NEW_FILE=`ls Hexo文章目录 | sed '/sh/d' | tail -n1`</span><br><span class="line">echo $NEW_FILE</span><br><span class="line">var=`echo $&#123;NEW_FILE&#125;|awk -F '-' '&#123;print $2&#125;'|awk -F '.' '&#123;print $1&#125;'`</span><br><span class="line">echo "max index now -&gt; $var"</span><br><span class="line"></span><br><span class="line">let var+=1</span><br><span class="line">echo "create article index -&gt; $var"</span><br><span class="line">hexo new post article-$&#123;var&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用 typora 打开刚刚创建的md文件</span></span><br><span class="line">open -a typora Hexo文章路径</span><br></pre></td></tr></table></figure>

<p>在 <strong><em>.bash_profile\</em></strong> 中添加别名</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> shell 脚本别名</span></span><br><span class="line">alias crtart="/bin/bash /Users/woo/crt_hexo_article.sh" </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> typora 打开文件别名</span></span><br><span class="line">alias typora="open -a typora"</span><br></pre></td></tr></table></figure>

<p>保存退出后执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source .bash_profile</span><br></pre></td></tr></table></figure>

<p>进入站点目录输入别名 <strong><em>crtart\</em></strong></p>
<h3 id="文章图片"><a href="#文章图片" class="headerlink" title="文章图片"></a>文章图片</h3><h3 id="Github-图床"><a href="#Github-图床" class="headerlink" title="Github 图床"></a>Github 图床</h3><p>在Github中新建了一个图床仓库，将图片push到仓库中，然后在文本中引用图片的地址就可以</p>
<h4 id="本地图片"><a href="#本地图片" class="headerlink" title="本地图片"></a>本地图片</h4><p>将图片保存至站点目录下的 <strong>source/images/[articlename]</strong> 中，然后在文本中引用如下链接：</p>
<p><strong><a href="http://onlygodsee.top/images/[articlename]/img.png" target="_blank" rel="noopener">http://onlygodsee.top/images/[articlename]/img.png</a></strong></p>
<h4 id="hexo-asset-image-插件"><a href="#hexo-asset-image-插件" class="headerlink" title="hexo-asset-image 插件"></a>hexo-asset-image 插件</h4><p>安装 hexo-asset-image</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>

<p>修改 <strong><em>站点配置文件\</em></strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure>

<p>之后每次new命令创建文章的时候就会生成同名的资源文件夹，部署的时候就会把资源文件同步上传到文章目录下</p>
<p>在发布文章时，先把我们要用到的图片放到文章目录下面的同名目录中</p>
<p>然后markdown中的图片链接直接填入图片名称即可</p>
<h4 id="图片预览"><a href="#图片预览" class="headerlink" title="图片预览"></a>图片预览</h4><p>想要让博文中的图片有放大预览功能需要借助插件 <strong>fancybox</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd theme/next/source/lib</span><br><span class="line"></span><br><span class="line">git clone https://github.com/theme-next/theme-next-fancybox3 fancybox</span><br></pre></td></tr></table></figure>

<p>修改 <strong><em>主题配置文件\</em></strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fancybox: true</span><br></pre></td></tr></table></figure>

<p>重新部署后就可以看到效果了</p>
<h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><h4 id="部署后没有更新"><a href="#部署后没有更新" class="headerlink" title="部署后没有更新"></a>部署后没有更新</h4><p>解决方案：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/nzjdsds/article/details/81194116" target="_blank" rel="noopener">参考地址</a></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Hexo</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Python环境管理--pipenv</title>
    <url>/2020/04/28/article-3/</url>
    <content><![CDATA[<h2 id="安装pipenv"><a href="#安装pipenv" class="headerlink" title="安装pipenv"></a>安装pipenv</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 install pipenv</span><br></pre></td></tr></table></figure>

<p>初始化</p>
<p>安装到项目目录里</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export PIPENV_VENV_IN_PROJECT=1</span><br></pre></td></tr></table></figure>

<p>使用 Python 3.7.3</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pipenv --python $(pyenv root)/versions/3.7.3/bin/python</span><br></pre></td></tr></table></figure>

<p>设置源</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">PIPENV_PYPI_MIRROR=http://mirrors.aliyun.com/pypi/simple</span><br><span class="line">或</span><br><span class="line">pipenv install --pypi-mirror http://mirrors.aliyun.com/pypi/simple</span><br></pre></td></tr></table></figure>

<h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip uninstall pipenv</span><br></pre></td></tr></table></figure>

<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><h3 id="pipenv-可以触发-pyenv-安装-Python-版本"><a href="#pipenv-可以触发-pyenv-安装-Python-版本" class="headerlink" title="pipenv 可以触发 pyenv 安装 Python 版本"></a>pipenv 可以触发 pyenv 安装 Python 版本</h3><p>.python-version</p>
<h3 id="pipenv-可以打开依赖的包"><a href="#pipenv-可以打开依赖的包" class="headerlink" title="pipenv 可以打开依赖的包"></a>pipenv 可以打开依赖的包</h3><p>export EDITOR=subl # 设置 pipenv open 的 默认编辑器<br>pipenv open fabric</p>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>删除在 /usr/local/bin/pipenv 目录的pipenv<br>建议用 pip3 安装 pipenv</p>
]]></content>
      <categories>
        <category>技术</category>
        <category>环境管理</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>环境管理</tag>
        <tag>pipenv</tag>
      </tags>
  </entry>
  <entry>
    <title>Python环境管理--pyenv</title>
    <url>/2020/04/28/article-2/</url>
    <content><![CDATA[<h2 id="安装pyenv"><a href="#安装pyenv" class="headerlink" title="安装pyenv"></a>安装pyenv</h2><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><h4 id="pyenv-installer-安装"><a href="#pyenv-installer-安装" class="headerlink" title="pyenv-installer 安装"></a>pyenv-installer 安装</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl https://pyenv.run | bash</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash</span><br></pre></td></tr></table></figure>

<p>以上命令会弹出提示 把以下内容加入 ~/.bashrc 中</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export PATH="~/.pyenv/bin:$PATH"</span><br><span class="line">eval "$(pyenv init -)"</span><br><span class="line">eval "$(pyenv virtualenv-init -)"</span><br></pre></td></tr></table></figure>

<h3 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h3><h4 id="homebrew-安装"><a href="#homebrew-安装" class="headerlink" title="homebrew 安装"></a>homebrew 安装</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install pyenv</span><br></pre></td></tr></table></figure>

<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><h3 id="Linux-1"><a href="#Linux-1" class="headerlink" title="Linux"></a>Linux</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pyenv update</span><br></pre></td></tr></table></figure>

<h3 id="Mac-1"><a href="#Mac-1" class="headerlink" title="Mac"></a>Mac</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew upgrade pyenv</span><br></pre></td></tr></table></figure>

<h2 id="安装-Python-3-7-3"><a href="#安装-Python-3-7-3" class="headerlink" title="安装 Python 3.7.3"></a>安装 Python 3.7.3</h2><h3 id="Linux-2"><a href="#Linux-2" class="headerlink" title="Linux"></a>Linux</h3><p>安装依赖<br>sudo apt-get update<br>sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev</p>
<p>下载源码包到 pyenv 的 缓存目录里，加快安装速度</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tar.xz -P $(pyenv root)/cache</span><br></pre></td></tr></table></figure>

<p>安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pyenv install 3.7.3</span><br></pre></td></tr></table></figure>

<h3 id="Mac-2"><a href="#Mac-2" class="headerlink" title="Mac"></a>Mac</h3><p>下载源码包到 pyenv 的 缓存目录里，加快安装速度</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tar.xz -P $(pyenv root)/cache</span><br></pre></td></tr></table></figure>

<p>安装依赖及设置环境变量</p>
<p>如果缺少 zlib 报错，则需要安装 zlib<br>zipimport.ZipImportError: can’t decompress data; zlib not available</p>
<p>安装 zlib<br>brew install zlib</p>
<p>设置zlib环境变量</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export LDFLAGS="-L/usr/local/opt/zlib/lib"</span><br><span class="line">export CPPFLAGS="-I/usr/local/opt/zlib/include"</span><br></pre></td></tr></table></figure>

<p>如果缺少 SQLite3 警告，则需要设置sqlite 环境变量</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">The Python sqlite3 extension was not compiled. Missing the SQLite3 lib?</span><br><span class="line">Installed Python-3.7.3 to /Users/slipper/.pyenv/versions/3.7.3</span><br></pre></td></tr></table></figure>

<p>设置 sqlite 环境变量</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export LDFLAGS="-L/usr/local/opt/zlib/lib -L/usr/local/opt/sqlite/lib"</span><br><span class="line">export CPPFLAGS="-I/usr/local/opt/zlib/include -I/usr/local/opt/sqlite/include"</span><br></pre></td></tr></table></figure>

<p>安装 python<br>pyenv install 3.7.3</p>
<h2 id="卸载-python"><a href="#卸载-python" class="headerlink" title="卸载 python"></a>卸载 python</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pyenv uninstall 3.7.3</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>环境管理</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>环境管理</tag>
        <tag>pyenv</tag>
      </tags>
  </entry>
  <entry>
    <title>JS逆向学习-某DJ音乐网</title>
    <url>/2020/04/30/article-4/</url>
    <content><![CDATA[<p>网站地址：aHR0cDovL3d3dy52dnZkai5jb20v</p>
<h3 id="网站分析"><a href="#网站分析" class="headerlink" title="网站分析"></a>网站分析</h3><h4 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h4><p>随便点击一首音乐的链接，并进行抓包，发现了这样的几个请求：</p>
<p><img src="/2020/04/30/article-4/image-20200430111802994.png" alt></p>
<p>再看下m3u8请求的响应体：</p>
<p><img src="/2020/04/30/article-4/image-20200429185725469.png" alt></p>
<p>发现上面标出的ts流请求出现在了m3u8请求的响应体中，关于对m3u8的介绍看这里 <a href="https://www.jianshu.com/p/e97f6555a070" target="_blank" rel="noopener">m3u8 文件格式详解</a></p>
<p>由此可以得出只要找到m3u8地址就可以获取到音频资源</p>
<h4 id="逆向"><a href="#逆向" class="headerlink" title="逆向"></a>逆向</h4><p>这是最关键的一步，查看详情页源代码会发现如下图一段代码：</p>
<p><img src="/2020/04/30/article-4/image-20200430102253924.png" alt></p>
<p>进行断点调试</p>
<p><img src="/2020/04/30/article-4/image-20200430102841176.png" alt></p>
<p>发现这就是目标m3u8地址</p>
<h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><h4 id="根据上面的逆向结果获取ts流地址"><a href="#根据上面的逆向结果获取ts流地址" class="headerlink" title="根据上面的逆向结果获取ts流地址"></a>根据上面的逆向结果获取ts流地址</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> execjs</span><br><span class="line"><span class="keyword">import</span> aiohttp</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">get_indexPage</span><span class="params">(musicId)</span>:</span></span><br><span class="line">    url = <span class="string">f'aHR0cDovL3d3dy52dnZkai5jb20v/play/<span class="subst">&#123;musicId&#125;</span>.html'</span></span><br><span class="line">    ts_file = <span class="string">f"mp4/<span class="subst">&#123;musicId&#125;</span>/ts/"</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> aiohttp.ClientSession() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> session.get(url, proxy=proxy) <span class="keyword">as</span> resp:</span><br><span class="line">            <span class="keyword">if</span> resp.status:</span><br><span class="line">                page_info = <span class="keyword">await</span> resp.text()</span><br><span class="line">                arg1, arg2 = re.search(<span class="string">"playurl=x.*?\('(.*?)'\);"</span>, page_info).group(<span class="number">1</span>).split(<span class="string">"','"</span>)</span><br><span class="line">                <span class="keyword">with</span> open(<span class="string">'qingfeng_new.js'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    ctx = execjs.compile(f.read())</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 解密m3u8地址</span></span><br><span class="line">                playurl = ctx.call(<span class="string">'get_url'</span>, arg1, arg2)</span><br><span class="line"></span><br><span class="line">                base_url = playurl.split(<span class="string">f"<span class="subst">&#123;musicId&#125;</span>.m3u8"</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">                resp_ts = <span class="keyword">await</span> get_m3u8list(playurl)</span><br><span class="line"></span><br><span class="line">                 <span class="comment"># 根据m3u8文件构造获取ts流对象列表</span></span><br><span class="line">                ts_lists = [download_ts(base_url + i, ts_file, musicId) <span class="keyword">for</span> i <span class="keyword">in</span> re.findall(<span class="string">"(&#123;&#125;.*?)\n"</span>.format(musicId), resp_ts)]</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 并发获取ts流</span></span><br><span class="line">                <span class="keyword">await</span> asyncio.gather(*ts_lists)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">await</span> save_mp4(ts_file, musicId)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">get_m3u8list</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    读取 m3u8 文件</span></span><br><span class="line"><span class="string">    :param url:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> aiohttp.ClientSession() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> session.get(url, proxy=proxy) <span class="keyword">as</span> resp:</span><br><span class="line">            <span class="keyword">if</span> resp.status:</span><br><span class="line">                resp = <span class="keyword">await</span> resp.text()</span><br><span class="line">                <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">download_ts</span><span class="params">(url, ts_file, musicId)</span>:</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> aiohttp.ClientSession() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> session.get(url, proxy=proxy) <span class="keyword">as</span> resp:</span><br><span class="line">            <span class="keyword">if</span> resp.status:</span><br><span class="line">                num = re.search(<span class="string">'&#123;&#125;-(\d\d\d?)\.ts'</span>.format(musicId), url).group(<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(ts_file):</span><br><span class="line">                    os.makedirs(ts_file)</span><br><span class="line">                r = <span class="keyword">await</span> resp.read()</span><br><span class="line">                <span class="keyword">with</span> open(<span class="string">f'<span class="subst">&#123;ts_file&#125;</span>/<span class="subst">&#123;num&#125;</span>.ts'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    f.write(r)</span><br></pre></td></tr></table></figure>

<p>得到ts流内容后还需要将其整合为mp4格式，如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">save_mp4</span><span class="params">(ts_file, musicId)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    利用 ffmpeg 整合 ts流文件</span></span><br><span class="line"><span class="string">    :param ts_file: </span></span><br><span class="line"><span class="string">    :param musicId: </span></span><br><span class="line"><span class="string">    :return: </span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    path_lists = os.listdir(ts_file)</span><br><span class="line">    path_lists.sort()</span><br><span class="line">    li = [os.path.join(ts_file,filename) <span class="keyword">for</span> filename <span class="keyword">in</span> path_lists]</span><br><span class="line">    tsfiles = <span class="string">'|'</span>.join(li)</span><br><span class="line">    save_path = <span class="string">f'mp4/<span class="subst">&#123;musicId&#125;</span>/<span class="subst">&#123;musicId&#125;</span>.mp4'</span></span><br><span class="line"></span><br><span class="line">    cmd = <span class="string">'ffmpeg -i "concat:%s" -acodec copy -vcodec copy -absf aac_adtstoasc %s'</span>%    (tsfiles, save_path)</span><br><span class="line">    os.system(cmd)</span><br></pre></td></tr></table></figure>

<p>然后运行该代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">event_loop = asyncio.get_event_loop()</span><br><span class="line">tasks = [get_indexPage(musicId) <span class="keyword">for</span> musicId <span class="keyword">in</span> [<span class="string">'193270'</span>]]</span><br><span class="line">event_loop.run_until_complete(asyncio.wait(tasks))</span><br><span class="line">event_loop.close()</span><br></pre></td></tr></table></figure>

<p>调用的js文件内容：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">DeCode</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">       <span class="keyword">this</span>.OO0O00OO00OO = <span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">return</span> b &gt; <span class="number">0</span> ? a.substring(<span class="number">0</span>, b) : <span class="literal">null</span>;</span><br><span class="line">       &#125;, <span class="keyword">this</span>.OO00OO0O00O0 = <span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">return</span> a.length - b &gt;= <span class="number">0</span> &amp;&amp; a.length &gt;= <span class="number">0</span> &amp;&amp; a.length - b &lt;= a.length ? a.substring(a.length - b, a.length) : <span class="literal">null</span>;</span><br><span class="line">       &#125;, <span class="keyword">this</span>.O0000OO0OO00O0 = <span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">var</span> c, d, e, f, g, h, i, j, k = <span class="string">""</span>;</span><br><span class="line">           <span class="keyword">for</span> (c = <span class="number">0</span>; c &lt; b.length; c++) &#123;</span><br><span class="line">               k += b.charCodeAt(c).toString();</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">for</span> (d = <span class="built_in">Math</span>.floor(k.length / <span class="number">5</span>), e = <span class="built_in">parseInt</span>(k.charAt(d) + k.charAt(<span class="number">2</span> * d) + k.charAt(<span class="number">3</span> * d) + k.charAt(<span class="number">4</span> * d) + k.charAt(<span class="number">5</span> * d)),</span><br><span class="line">                    f = <span class="built_in">Math</span>.round(b.length / <span class="number">2</span>), g = <span class="built_in">Math</span>.pow(<span class="number">2</span>, <span class="number">31</span>) - <span class="number">1</span>, h = <span class="built_in">parseInt</span>(a.substring(a.length - <span class="number">8</span>, a.length), <span class="number">16</span>),</span><br><span class="line">                    a = a.substring(<span class="number">0</span>, a.length - <span class="number">8</span>), k += h; k.length &gt; <span class="number">10</span>; ) &#123;</span><br><span class="line">               k = (<span class="built_in">parseInt</span>(k.substring(<span class="number">0</span>, <span class="number">10</span>)) + <span class="built_in">parseInt</span>(k.substring(<span class="number">10</span>, k.length))).toString();</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">for</span> (k = (e * k + f) % g, i = <span class="string">""</span>, j = <span class="string">""</span>, c = <span class="number">0</span>; c &lt; a.length; c += <span class="number">2</span>) &#123;</span><br><span class="line">               i = <span class="built_in">parseInt</span>(<span class="built_in">parseInt</span>(a.substring(c, c + <span class="number">2</span>), <span class="number">16</span>) ^ <span class="built_in">Math</span>.floor(<span class="number">255</span> * (k / g))), j += <span class="built_in">String</span>.fromCharCode(i),</span><br><span class="line">                   k = (e * k + f) % g;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> j;</span><br><span class="line">       &#125;, <span class="keyword">this</span>.O0000OO0OO00O = <span class="function"><span class="keyword">function</span> (<span class="params">a, b, c</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">return</span> a.length &gt;= <span class="number">0</span> ? a.substr(b, c) : <span class="literal">null</span>;</span><br><span class="line">       &#125;, <span class="keyword">this</span>.O0O000000O0O0 = <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">return</span> a.length;</span><br><span class="line">       &#125;, <span class="keyword">this</span>.O000O0OO0O0OO = <span class="function"><span class="keyword">function</span> (<span class="params">a,b</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">var</span> h, i, j, k, l, m, n, o, p, c = b, d = <span class="keyword">this</span>.O0O000000O0O0(c), e = d, f = <span class="keyword">new</span> <span class="built_in">Array</span>(), g = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">           <span class="keyword">for</span> (l = <span class="number">1</span>; d &gt;= l; l++) &#123;</span><br><span class="line">               f[l] = <span class="keyword">this</span>.O0000OO0OO00O(c, l - <span class="number">1</span>, <span class="number">1</span>).charCodeAt(<span class="number">0</span>), g[e] = f[l], e -= <span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">for</span> (h = <span class="string">""</span>, i = a, m = <span class="keyword">this</span>.OO0O00OO00OO(i, <span class="number">2</span>), i = <span class="keyword">this</span>.OO00OO0O00O0(i, <span class="keyword">this</span>.O0O000000O0O0(i) - <span class="number">2</span>),</span><br><span class="line">                    l = <span class="number">0</span>; l &lt; <span class="keyword">this</span>.O0O000000O0O0(i); l += <span class="number">4</span>) &#123;</span><br><span class="line">               j = <span class="keyword">this</span>.O0000OO0OO00O(i, l, <span class="number">4</span>), <span class="string">""</span> != j &amp;&amp; (b = <span class="keyword">this</span>.OO0O00OO00OO(j, <span class="number">1</span>), k = (<span class="built_in">parseInt</span>(<span class="keyword">this</span>.OO00OO0O00O0(j, <span class="number">3</span>)) - <span class="number">100</span>) / <span class="number">3</span>,</span><br><span class="line">                   m == <span class="keyword">this</span>.O0000OO0OO00O0(<span class="string">"a9ab044c634a"</span>, <span class="string">"O0000OO0OO00O"</span>) ? (n = <span class="number">2</span> * <span class="built_in">parseInt</span>(b.charCodeAt(<span class="number">0</span>)),</span><br><span class="line">                       o = <span class="built_in">parseInt</span>(f[k]), p = n - o, h += <span class="built_in">String</span>.fromCharCode(p)) : (n = <span class="number">2</span> * <span class="built_in">parseInt</span>(b.charCodeAt(<span class="number">0</span>)),</span><br><span class="line">                       o = <span class="built_in">parseInt</span>(g[k]), p = n - o, h += <span class="built_in">String</span>.fromCharCode(p)));</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> h;</span><br><span class="line">       &#125;;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> x=<span class="keyword">new</span> DeCode();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_url</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.O000O0OO0O0OO(a, b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术</category>
        <category>JS逆向</category>
      </categories>
      <tags>
        <tag>JS逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>hello-world</title>
    <url>/2020/04/23/hello-world/</url>
    <content><![CDATA[<p>Hello world, this is my first blog.</p>
<p>Everything is ok.</p>
]]></content>
  </entry>
  <entry>
    <title>JS逆向学习-淘**</title>
    <url>/2020/05/11/article-5/</url>
    <content><![CDATA[<p>懂得都懂：aHR0cHM6Ly90YW9kYXhpYW5nLmNvbS9jcmVkaXQy</p>
<h3 id="网站分析"><a href="#网站分析" class="headerlink" title="网站分析"></a>网站分析</h3><h4 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h4><p>打开网站按F12开始调试，发现该网站有无限debugger：</p>
<p><img src="/2020/05/11/article-5/WX20200511-121718.png" alt></p>
<p>在对应行右键选择 “Never pause here”, 然后点击屏幕上的箭头便可绕过</p>
<p>然后查看请求，在XHR中发现了目标信息和加密参数：</p>
<p><img src="/2020/05/11/article-5/WX20200511-122949.png" alt></p>
<h4 id="定位加密位置"><a href="#定位加密位置" class="headerlink" title="定位加密位置"></a>定位加密位置</h4><p>通过搜索关键字“sign”可以发现这几个位置：</p>
<p><img src="/2020/05/11/article-5/WX20200511-123230.png" alt></p>
<p>再搜索 <strong><em>_0x5b56f8</em></strong> 便可定位到加密位置，打上断点进行调试：</p>
<p><img src="/2020/05/11/article-5/WX20200511-123557.png" alt></p>
<p><img src="/2020/05/11/article-5/WX20200511-124307.png" alt></p>
<p><em>由此可知最终的加密操作是在 <strong>case 0</strong> 中完成的，通过断点调试会发现是对</em> <strong><em>一个特殊字符串</em></strong> 进行了md5加密，接下来我们分析这个字符串是怎么得出的</p>
<p>在 <strong><em>case 5</em></strong> 中同样对 <strong><em>_0x5b56f8</em></strong> 进行了操作，并且确定这里就是生成被加密字符串的位置</p>
<p><img src="/2020/05/11/article-5/WX20200511-140037.png" alt></p>
<p>在分析这段代可知是对 <strong><em>_0x8c9894</em></strong> 和 <strong><em>_0x4ea2ce</em></strong>进行了一些列算数操作，接下来我们在分析这两个参数</p>
<p>分析 <strong><em>case 3</em></strong> 中发现 <strong><em>_0x4ea2ce</em></strong> 是固定值</p>
<p><img src="/2020/05/11/article-5/WX20200511-140550.png" alt></p>
<p>分析 <strong><em>case 2</em></strong> 可知这里又做了一个md5加密，被加密字符串的组成结构是 account +  <strong><em>_0x4ea2ce</em></strong> + account + type值</p>
<p><img src="/2020/05/11/article-5/WX20200511-140843.png" alt></p>
<p>至此我们已经找到获取加密参数的所有元素</p>
<h3 id="逆向"><a href="#逆向" class="headerlink" title="逆向"></a>逆向</h3><p>结合上面的逻辑，我们开始进行逆向测试</p>
<p>首先获取 <strong><em>_0x8c9894</em></strong> 的值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line">_0x4ea2ce= <span class="string">'7176a337dffebf0ff2d30d65fda5af78'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5value</span><span class="params">(s)</span>:</span></span><br><span class="line">    a = md5(s.encode()).hexdigest()</span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line">s = <span class="string">'%s%s%s0'</span> %(<span class="string">'这个帐号只是传说'</span>, _0x4ea2ce, <span class="string">'这个帐号只是传说'</span>)</span><br><span class="line"></span><br><span class="line">_0x8c9894 = md5value(s) + <span class="string">' '</span></span><br><span class="line">print(_0x8c9894)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f81765c208bcc1a6892863af77bb4fae</span><br></pre></td></tr></table></figure>

<p>这里要注意 <strong>最后的结果还要加一个空格</strong> 应该是 <strong><em>“f81765c208bcc1a6892863af77bb4fae ”</em></strong></p>
<p>接下来获取 <strong><em>_0x5b56f8</em></strong> 的值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法映射</span></span><br><span class="line">_0x36294a = &#123;</span><br><span class="line">    <span class="string">"VIRpO"</span>: <span class="keyword">lambda</span> a, b: a &lt; b,</span><br><span class="line">    <span class="string">"PRedm"</span>: <span class="keyword">lambda</span> a, b: a % b,</span><br><span class="line">    <span class="string">"TTSVu"</span>: <span class="keyword">lambda</span> a, b: a + b,</span><br><span class="line">    <span class="string">"rOuyL"</span>: <span class="keyword">lambda</span> a, b: a % b,</span><br><span class="line">    <span class="string">"YJYZC"</span>: <span class="keyword">lambda</span> a, b: a * b,</span><br><span class="line">    <span class="string">"LrwDB"</span>: <span class="keyword">lambda</span> a, b: a * b,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_0x5b56f8 = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _0x1af38d <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">    _0x5b56f8 += str(_0x36294a[<span class="string">"PRedm"</span>](_0x36294a[<span class="string">"TTSVu"</span>](_0x36294a[<span class="string">"TTSVu"</span>](_0x36294a[<span class="string">"TTSVu"</span>](ord(_0x4ea2ce[_0x1af38d]), _0x36294a[<span class="string">"rOuyL"</span>](_0x36294a[<span class="string">"YJYZC"</span>](ord(_0x4ea2ce[_0x1af38d]), ord(_0x4ea2ce[_0x1af38d])), <span class="number">0x20</span>)), ord(_0x8c9894[_0x1af38d])), _0x36294a[<span class="string">"LrwDB"</span>](_0x1af38d, _0x1af38d)), <span class="number">0x9</span>))</span><br><span class="line"></span><br><span class="line">print(_0x5b56f8)</span><br><span class="line">&gt;&gt;&gt;<span class="number">38856360307430874440750784857572</span></span><br></pre></td></tr></table></figure>

<p>这里看到已经成功获取了md5加密前的字符串，然后我们对其加密并进行比对</p>
<p><img src="/2020/05/11/article-5/WX20200511-151435.png" alt></p>
<p>发现与前面目标请求的 <strong><em>sign</em></strong> 相同，至此已经成功获取了加密参数</p>
<h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> aiohttp</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line">url = <span class="string">'aHR0cHM6Ly90YW9kYXhpYW5nLmNvbS9jcmVkaXQy'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 固定加密字符串</span></span><br><span class="line">_0x4ea2ce= <span class="string">'7176a337dffebf0ff2d30d65fda5af78'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sign 加密要用到的方法映射（模拟网站JS代码）</span></span><br><span class="line">_0x36294a = &#123;</span><br><span class="line">    <span class="string">"VIRpO"</span>: <span class="keyword">lambda</span> a, b: a &lt; b,</span><br><span class="line">    <span class="string">"PRedm"</span>: <span class="keyword">lambda</span> a, b: a % b,</span><br><span class="line">    <span class="string">"TTSVu"</span>: <span class="keyword">lambda</span> a, b: a + b,</span><br><span class="line">    <span class="string">"rOuyL"</span>: <span class="keyword">lambda</span> a, b: a % b,</span><br><span class="line">    <span class="string">"YJYZC"</span>: <span class="keyword">lambda</span> a, b: a * b,</span><br><span class="line">    <span class="string">"LrwDB"</span>: <span class="keyword">lambda</span> a, b: a * b,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_md5</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    md5 加密</span></span><br><span class="line"><span class="string">    :param s:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    result = md5(s.encode()).hexdigest()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_data</span><span class="params">(account, typ)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    构造请求参数</span></span><br><span class="line"><span class="string">    :param account:</span></span><br><span class="line"><span class="string">    :param typ:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 设置 _0x8c9894 加密规则</span></span><br><span class="line">    s = <span class="string">f"<span class="subst">&#123;account&#125;</span><span class="subst">&#123;_0x4ea2ce&#125;</span><span class="subst">&#123;account&#125;</span><span class="subst">&#123;typ&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">    _0x8c9894 = get_md5(s) + <span class="string">' '</span></span><br><span class="line"></span><br><span class="line">    _0x5b56f8 = <span class="string">''</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取 sign 值</span></span><br><span class="line">    <span class="keyword">for</span> _0x1af38d <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">        _0x5b56f8 += str(_0x36294a[<span class="string">"PRedm"</span>](_0x36294a[<span class="string">"TTSVu"</span>](_0x36294a[<span class="string">"TTSVu"</span>](</span><br><span class="line">            _0x36294a[<span class="string">"TTSVu"</span>](ord(_0x4ea2ce[_0x1af38d]), _0x36294a[<span class="string">"rOuyL"</span>](</span><br><span class="line">                _0x36294a[<span class="string">"YJYZC"</span>](ord(_0x4ea2ce[_0x1af38d]), ord(_0x4ea2ce[_0x1af38d])), <span class="number">0x20</span>)),</span><br><span class="line">            ord(_0x8c9894[_0x1af38d])), _0x36294a[<span class="string">"LrwDB"</span>](_0x1af38d, _0x1af38d)), <span class="number">0x9</span>))</span><br><span class="line"></span><br><span class="line">    output = &#123;</span><br><span class="line">        <span class="string">"account"</span>: account,</span><br><span class="line">        <span class="string">"type"</span>: <span class="string">"0"</span>,</span><br><span class="line">        <span class="string">"sign"</span>: _0x5b56f8</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">get_info</span><span class="params">(url, data)</span>:</span></span><br><span class="line">    <span class="comment"># ssl证书设置</span></span><br><span class="line">    conn = aiohttp.TCPConnector(ssl=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> aiohttp.ClientSession(connector=conn) <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> session.post(url, data=data, proxy=proxy) <span class="keyword">as</span> resp:</span><br><span class="line">            <span class="keyword">if</span> resp.status:</span><br><span class="line">                info = <span class="keyword">await</span> resp.json(content_type=<span class="string">'text/html'</span>,encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">                <span class="keyword">return</span> info</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    accounts = [account1, account2]</span><br><span class="line">    event_loop = asyncio.get_event_loop()</span><br><span class="line">    tasks = [get_info(url, set_data(account, <span class="string">'0'</span>)) <span class="keyword">for</span> account <span class="keyword">in</span> accounts]</span><br><span class="line">    event_loop.run_until_complete(asyncio.wait(tasks))</span><br><span class="line">    event_loop.close()</span><br></pre></td></tr></table></figure>



<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>该网站的逆向并不难，通过全局搜索关键字就可以定位到加密位置，关键在于绕过无限Debugger和对混淆代码的分析</p>
]]></content>
      <categories>
        <category>技术</category>
        <category>JS逆向</category>
      </categories>
      <tags>
        <tag>JS逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>JS逆向学习-某厂藏某阁</title>
    <url>/2020/05/12/article-6/</url>
    <content><![CDATA[<p>首先感谢咸鱼大佬的分享 <a href="https://mp.weixin.qq.com/s/5pp1vd00O-JHeAf6loaYfg" target="_blank" rel="noopener">文章地址</a></p>
<p>懂得都懂：aHR0cHM6Ly9kd3ouY24vS0VGT01qOGg=</p>
<h3 id="网站分析"><a href="#网站分析" class="headerlink" title="网站分析"></a>网站分析</h3><h4 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h4><p><img src="/2020/05/12/article-6/WX20200512-095031.png" alt></p>
<p>通过查看html页面发现目标信息在id为 <strong><em>equip_desc_panel</em></strong> 的标签下，然后全局搜索这个id</p>
<p><img src="/2020/05/12/article-6/WX20200512-095918.png" alt></p>
<p>发现这里是空的，但发现了另外一个有意思的点，下面 <strong><em>textarea</em></strong> 标签中的内容像极了加密内容，然后再查看其他位置</p>
<p><img src="/2020/05/12/article-6/WX20200511-185128.png" alt></p>
<p>柳暗花明又一村，继续查找 <strong><em>get_equip_desc</em></strong></p>
<p><img src="/2020/05/12/article-6/WX20200511-185217.png" alt></p>
<p>看来是在 <strong><em>decode_desc</em></strong> 中执行的加密，但是这个函数就搜不到了，然后在这里打断点</p>
<p><img src="/2020/05/12/article-6/WX20200511-190108.png" alt></p>
<p>成功断点并跟进调试后发现是通过这样的方式设置了 <strong><em>decode_desc</em></strong> 函数，并且确认这里就是解密的位置</p>
<h4 id="逆向"><a href="#逆向" class="headerlink" title="逆向"></a>逆向</h4><p>然后就到了扣代码的环节</p>
<p>通过前面的断点调试得知只需要 <strong><em>function g()</em></strong> 的流程，通过node.js运行发现运行结果不符合预期，那就开始补坑</p>
<p><img src="/2020/05/12/article-6/WX20200511-191211.png" alt></p>
<p><img src="/2020/05/12/article-6/WX20200511-191030.png" alt></p>
<p><img src="/2020/05/12/article-6/WX20200511-191007.png" alt></p>
<p><img src="/2020/05/12/article-6/WX20200511-191101.png" alt></p>
<p><img src="/2020/05/12/article-6/WX20200511-191116.png" alt></p>
<p>上面截图中标注的内容都是需要去替换的，但要注意的是 <strong>window.atob</strong> 在 <strong>node</strong> 中不可用，要这样写：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">Buffer.from(_0x1c0cdf,<span class="string">"base64"</span>).toString()</span><br></pre></td></tr></table></figure>



<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>修改后的js代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _0x3a8e = <span class="function"><span class="keyword">function</span>(<span class="params">_0xc40c11, _0x32bbb2</span>) </span>&#123;</span><br><span class="line">    _0xc40c11 = _0xc40c11 - <span class="number">0x0</span>;</span><br><span class="line">    <span class="keyword">var</span> _0x4e269a = _0x3012[_0xc40c11];</span><br><span class="line">    <span class="keyword">return</span> _0x4e269a;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> _0x3012 = [<span class="string">'\x73\x75\x62\x73\x74\x72\x69\x6e\x67'</span>, <span class="string">'\x61\x74\x6f\x62'</span>, <span class="string">'\x63\x68\x61\x72\x43\x6f\x64\x65\x41\x74'</span>, <span class="string">'\x70\x75\x73\x68'</span>, <span class="string">'\x74\x65\x73\x74'</span>];</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">_0x3ed35c, _0x48b8fe</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _0x1ad9d9 = <span class="function"><span class="keyword">function</span>(<span class="params">_0x8eeda7</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (--_0x8eeda7) &#123;</span><br><span class="line">            _0x3ed35c[<span class="string">'push'</span>](_0x3ed35c[<span class="string">'shift'</span>]());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    _0x1ad9d9(++_0x48b8fe);</span><br><span class="line">&#125;(_0x3012, <span class="number">0x153</span>));</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">g</span>(<span class="params">_0x1c0cdf</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (_0x1c0cdf = _0x1c0cdf[<span class="string">'\x72\x65\x70\x6c\x61\x63\x65'</span>](<span class="regexp">/^\s+|\s+$/g</span>, <span class="string">''</span>),</span><br><span class="line">        !<span class="regexp">/^@[\s\S]*@$/</span>[_0x3a8e(<span class="string">'0x0'</span>)](_0x1c0cdf))</span><br><span class="line">        <span class="keyword">return</span> _0x1c0cdf;</span><br><span class="line">    <span class="keyword">var</span> _0x36ab38 = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">if</span> (_0x1c0cdf = _0x1c0cdf[<span class="string">'\x72\x65\x70\x6c\x61\x63\x65'</span>](<span class="regexp">/^@|@$/g</span>, <span class="string">''</span>),</span><br><span class="line">        /^[^@]+@[\s\S]+<span class="regexp">/['\x74\x65\x73\x74'](_0x1c0cdf)) &#123;</span></span><br><span class="line"><span class="regexp">        var _0x33c80e = _0x1c0cdf['\x69\x6e\x64\x65\x78\x4f\x66']('\x40');</span></span><br><span class="line"><span class="regexp">        _0x36ab38 = _0x1c0cdf[_0x3a8e('0x1')](0x0, _0x33c80e),</span></span><br><span class="line"><span class="regexp">            _0x1c0cdf = _0x1c0cdf['\x73\x75\x62\x73\x74\x72\x69\x6e\x67'](_0x33c80e + 0x1);</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">    var _0x1b3f48 = function s(_0x1c0cdf) &#123;</span></span><br><span class="line"><span class="regexp">        try &#123;</span></span><br><span class="line"><span class="regexp">            return eval('\x28' + _0x1c0cdf + '\x29');</span></span><br><span class="line"><span class="regexp">        &#125; catch (_0x40b9c3) &#123;</span></span><br><span class="line"><span class="regexp">            return null;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">    &#125;(_0x1c0cdf = Buffer.from(_0x1c0cdf,"base64").toString());</span></span><br><span class="line"><span class="regexp">    _0x1b3f48 &amp;&amp; '\x6f\x62\x6a\x65\x63\x74' == typeof _0x1b3f48 &amp;&amp; _0x1b3f48['\x64'] &amp;&amp; (_0x1b3f48 = _0x1b3f48['\x64']);</span></span><br><span class="line"><span class="regexp">    for (var _0x20b9fa = [], _0x10503c = 0x0, _0x1a524d = 0x0; _0x1a524d &lt; _0x1b3f48['\x6c\x65\x6e\x67\x74\x68']; _0x1a524d++) &#123;</span></span><br><span class="line"><span class="regexp">        var _0x3641ed = _0x1b3f48['\x63\x68\x61\x72\x43\x6f\x64\x65\x41\x74'](_0x1a524d)</span></span><br><span class="line"><span class="regexp">            , _0x341952 = _0x36ab38[_0x3a8e('0x3')](_0x10503c % _0x36ab38['\x6c\x65\x6e\x67\x74\x68']);</span></span><br><span class="line"><span class="regexp">        _0x10503c += 0x1,</span></span><br><span class="line"><span class="regexp">            _0x3641ed = 0x1 * _0x3641ed ^ _0x341952,</span></span><br><span class="line"><span class="regexp">            _0x20b9fa[_0x3a8e('0x4')](_0x3641ed['\x74\x6f\x53\x74\x72\x69\x6e\x67'](0x2));</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">    return function d(_0x1c0cdf) &#123;</span></span><br><span class="line"><span class="regexp">        for (var _0x36ab38 = [], _0x33c80e = 0x0; _0x33c80e &lt; _0x1c0cdf['\x6c\x65\x6e\x67\x74\x68']; _0x33c80e++)</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/ _0x36ab38['\x70\x75\x73\x68'](_0xcbc80b['\x53\x74\x72\x69\x6e\x67']['\x66\x72\x6f\x6d\x43\x68\x61\x72\x43\x6f\x64\x65'](_0xcbc80b['\x70\x61\x72\x73\x65\x49\x6e\x74'](_0x1c0cdf[_0x33c80e], 0x2)));</span></span><br><span class="line"><span class="regexp">            _0x36ab38['\x70\x75\x73\x68'](String.fromCharCode(parseInt(_0x1c0cdf[_0x33c80e], 0x2)));</span></span><br><span class="line"><span class="regexp">        return _0x36ab38['\x6a\x6f\x69\x6e']('');</span></span><br><span class="line"><span class="regexp">    &#125;(_0x20b9fa);</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">var a = "@ggRp9MYui9tDX6Fq@eyJkIjogIkRcdTAwMTVcdTdiMWJcdTdlZDdcdTAwMTl8a0VJXHUwMDE5XHU0ZWUwXHU4ODA4eFx1NmMwMmVcdTAwMDNEXHUwMDE1XHU0Zjc2XHU1YmMzXHUwMDE5ZmpMX1x1MDAxOVx1NTQwOVx1NGU2OXhcdTAwMWRwSVdEIFx1ODA2MFx1NGU3Y1x1NWVlYnlHWVx1MDAwZVRkXHU0ZmI2XHU3NDMwXHU1OTc3XHU4ZDU0R1ZcdTZiNzNTS1x1OTU3Nlx1NzBlNVx1N2IzY1x1N2VjZVx1MDAxOUV1eFx1MDAxNlx1OTUzMFx1NWQzZFx1NWJmYVx1Nzc5NHJcdTU5NWFcdTk2MGFcdTc3YmVcdTMwNThVXHU3ZWNiXHU3M2EyXHU3NDJkZ1x1MDAwMVx1MDAxNTRSXHUwMDA0U1x1MDAxNjJ4XHUwMDBibVx1NzIwY1x1NjUyMVx1ZmYyM1cnbHJcdTAwMDQwIVNcdTY1YjJcdTdlZDdcdTUyMTJcdTk2MWRcdTUyNmZWMFx1MDAxYVx1MDAwNmdcdTAwMWZcdTVmMzZcdThmOTZcdTViMjVcdTY1MTdcdWZmN2RmXHU1YjI0XHUwMDE2eVx1NWIwZFVBXHU1M2Y1QFx1NWIxMHFcdTAwMTVcdTAwMDFSXHUwMDE1XHU3YjQxXHU3N2ExSlx1MDAxOVx1NGYxZVx1OGQ3MVVCXGJUXHU0ZjYwXHU1YmViXHUwMDE2bUBJUnFcdTAwMWVcdTAwMWFcbnpcdTAwMDdcdTdiNGZcdTc3Y2FOZFx1NTJjM1x1OTFmOWZaVkdcdTZjNDZcdTg4MzBcdTAwMTlmaEVKV1dcdTAwMDN7RFx1N2I2MFx1Nzc4Ml1HXHU1MmM5XHU5MWJmXHUwMDE5ZmhVXHU2YzdkXHU4ODc5VG9pXHUwMDA2ZVx1MDAxZkQgcVx1MDAwMlx1N2IxZlx1NzdiZWNVXHU2YzdkXHU4ODc5VG9pXHUwMDAzZlx1OTA2ZVx1NWVjMUd5QVx1MDAxN3h6XHUwMDFiSn5XNlx1NjY0N1x1NGY3Ylx1ZmY1Y1x1OTA2ZVx1NWVjMUd5Qlx1MDAxYSN6MkpLXHU2NjZiXHU3NmJjXHU0ZWNhXHU1NDNlXHVmZjVjXHU0ZjIyXHU4ZDRmR3lCXHUwMDFhP3pcdTAwMTYsfEx2XHUwMDFkc1x1N2I2MFx1Nzc4Mlx1N2VhM1x1NTQ2ZmhQXHU1OWJiXHU2MTQyXHU5MTg4XHU3YmY4XHU3YjRmXHU3N2NhVzZcdTk1YjBcdTZkMDhcdTY3MjdcdTRlODdcdWZmN2RcdTgyZDZcdTY3Y2VcdTVjMDFcdTAwMTluK1x1OTA5ZFx1NGYyNFx1Njc1OFx1NGU4Mlx1ZmY1ZVx1NmIzZVx1NTY1ZWZSXHUwMDE1XHU1OGY5XHU1MmYyXHU5NTk4XHU2ZDA3XHU2MmNkXHU4MGE0XHU1OWY3XHU2MTY2XHU5MWU4XHU3YmY5XHU3YjBkXHU3ZWZmXHUwMDAyXHU3ZWUxUj5EIFNuXHU1MjdiXHU5MDc5XHU4MDcwXHVmZjczXHUzMDY5XHU2MzZlXHU2MDgxXHU4ZDQ1XHU4YmNjXHUwMGY2Uj5HciJ9@";</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">console.log(g(a))</span></span><br></pre></td></tr></table></figure>

<p>运行这个文件查看结果</p>
<p><img src="/2020/05/12/article-6/WX20200512-102800.png" alt></p>
<p>我们得到了想要的一切</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这次逆向的重点是修改原来的js内容，其中有很多坑，比如base64实现的差异以及对混淆的处理，需要耐心调试才行。</p>
]]></content>
      <categories>
        <category>技术</category>
        <category>JS逆向</category>
      </categories>
      <tags>
        <tag>JS逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL基本操作</title>
    <url>/2020/05/19/article-7/</url>
    <content><![CDATA[<p>version：8.0.17</p>
<h2 id="常用基础命令"><a href="#常用基础命令" class="headerlink" title="常用基础命令"></a>常用基础命令</h2><h3 id="使用帮助"><a href="#使用帮助" class="headerlink" title="使用帮助"></a>使用帮助</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">help create</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Many <span class="built_in">help</span> items <span class="keyword">for</span> your request exist.</span><br><span class="line">To make a more specific request, please <span class="built_in">type</span> <span class="string">'help &lt;item&gt;'</span>,</span><br><span class="line"><span class="built_in">where</span> &lt;item&gt; is one of the following</span><br><span class="line">topics:</span><br><span class="line">   CREATE DATABASE</span><br><span class="line">   CREATE EVENT</span><br><span class="line">   CREATE FUNCTION</span><br><span class="line">   CREATE FUNCTION UDF</span><br><span class="line">   CREATE INDEX</span><br><span class="line">   CREATE LOGFILE GROUP</span><br><span class="line">   CREATE PROCEDURE</span><br><span class="line">   CREATE RESOURCE GROUP</span><br><span class="line">   CREATE ROLE</span><br><span class="line">   CREATE SCHEMA</span><br><span class="line">   CREATE SERVER</span><br><span class="line">   CREATE SPATIAL REFERENCE SYSTEM</span><br><span class="line">   CREATE TABLE</span><br><span class="line">   CREATE TABLESPACE</span><br><span class="line">   CREATE TRIGGER</span><br><span class="line">   CREATE USER</span><br><span class="line">   CREATE VIEW</span><br><span class="line">   SHOW</span><br><span class="line">   SHOW CREATE DATABASE</span><br><span class="line">   SHOW CREATE EVENT</span><br><span class="line">   SHOW CREATE FUNCTION</span><br><span class="line">   SHOW CREATE PROCEDURE</span><br><span class="line">   SHOW CREATE SCHEMA</span><br><span class="line">   SHOW CREATE TABLE</span><br><span class="line">   SHOW CREATE USER</span><br><span class="line">   SPATIAL INDEXES</span><br></pre></td></tr></table></figure>



<h3 id="创建、删除、查看数据库"><a href="#创建、删除、查看数据库" class="headerlink" title="创建、删除、查看数据库"></a><strong>创建、删除、查看数据库</strong></h3><h4 id="创建默认字符集的数据库（默认是拉丁字符集）"><a href="#创建默认字符集的数据库（默认是拉丁字符集）" class="headerlink" title="创建默认字符集的数据库（默认是拉丁字符集）"></a>创建默认字符集的数据库（默认是拉丁字符集）</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create database test_data;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show databases like &quot;test%&quot;;</span><br></pre></td></tr></table></figure>

<h4 id="创建gbk字符集的数据库"><a href="#创建gbk字符集的数据库" class="headerlink" title="创建gbk字符集的数据库"></a><strong>创建gbk字符集的数据库</strong></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create database test_gbk DEFAULT CHARACTER SET gbk COLLATE gbk_chinese_ci;</span><br></pre></td></tr></table></figure>

<h4 id="查看创建数据库的语句"><a href="#查看创建数据库的语句" class="headerlink" title="查看创建数据库的语句"></a>查看创建数据库的语句</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show create database test_gbk;</span><br></pre></td></tr></table></figure>

<h4 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">drop database test_data;</span><br></pre></td></tr></table></figure>

<h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><h4 id="进入指定数据库操作"><a href="#进入指定数据库操作" class="headerlink" title="进入指定数据库操作"></a>进入指定数据库操作</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use test_gbk;</span><br></pre></td></tr></table></figure>

<h4 id="查看当前连接的数据库"><a href="#查看当前连接的数据库" class="headerlink" title="查看当前连接的数据库"></a><strong>查看当前连接的数据库</strong></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select database();</span><br></pre></td></tr></table></figure>

<h4 id="查看当前连接数据库的用户"><a href="#查看当前连接数据库的用户" class="headerlink" title="查看当前连接数据库的用户"></a><strong>查看当前连接数据库的用户</strong></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select user();</span><br></pre></td></tr></table></figure>

<h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create user if not exists &#39;testuser&#39;@&#39;localhost&#39; identified by &#39;123456&#39;;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create user if not exists &#39;company_read_only&#39;@&#39;localhost&#39; identified with mysql_native_password by &#39;company_pass&#39; with max_queries_per_hour 500 max_updates_per_hour 100;</span><br></pre></td></tr></table></figure>

<p>上述声明将为用户创建以下内容:</p>
<ul>
<li>用户名 : company read only</li>
<li>仅从localhost访问</li>
<li>可以限制对 IP范围的访问，例如 10.148.%.%。 通过给出%，用户可以从任何主机访问</li>
<li>密码：company_pass</li>
<li>使用 mysql_native_password（默认）身份验证</li>
<li>还可以指定任何可选的身份验证，例如 sha256_password、LDAP 或 Kerberos</li>
<li>用户可以在一小时内执行的最大查询数为 500</li>
<li>用户可以在一小时内执行的最大更新次数为 100次</li>
</ul>
<h3 id="授予和撤销用户的访问权限"><a href="#授予和撤销用户的访问权限" class="headerlink" title="授予和撤销用户的访问权限"></a>授予和撤销用户的访问权限</h3><p>你可以限制用户访问特定数据库或表，或限制特定操作，如 SELECT 、 INSERT 和UPDATE。 你需要拥有 GRANT 权限，才能为其他用户授予权限 。</p>
<h4 id="授予权限"><a href="#授予权限" class="headerlink" title="授予权限"></a>授予权限</h4><ul>
<li>将READ ONLY (SELECT)权限授予testuser用户</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grant select on company.* to &#39;testuser&#39;@&#39;localhost&#39;;</span><br></pre></td></tr></table></figure>

<ul>
<li>限制查询指定的表。 将testuser用户限制为仅能查询employees 表 </li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grant select on employees.employees to &#39;testuser&#39;@&#39;localhost&#39;;</span><br></pre></td></tr></table></figure>

<ul>
<li>将访问权限限制为仅能查询指定列。限制testuser用户仅能访问employees表的first_name列和last_name列</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grant select(first_name, last_name) on employees.employees to &#39;testuser&#39;@&#39;localhost&#39;;</span><br></pre></td></tr></table></figure>

<ul>
<li>扩展授权。可以通过执行新授权来扩展授权。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grant select(salary) on employees.salaries to &#39;company_read_only&#39;@&#39;localhost&#39;;</span><br></pre></td></tr></table></figure>

<ul>
<li>创建 SUPER 用户 。 需要一个管理员账户来管理该服务器 。 ALL 表示除 GRANT 权限之外的所有权限 。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create user &#39;super_admin&#39;@&#39;%&#39; identified with mysql_native_password by &#39;super@admin&#39;;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grant all on *.* to &#39;super_admin&#39;@&#39;%&#39;;</span><br></pre></td></tr></table></figure>

<ul>
<li>授予 GRANT特权。 用户拥有 GRANT OPTION权限才能授予其他用户权限。 可以将 GRANT 特权扩展到 super_admin 超级用户</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grant grant option on *.* to &#39;super_admin&#39;@&#39;%&#39;;</span><br></pre></td></tr></table></figure>

<h4 id="检查授权"><a href="#检查授权" class="headerlink" title="检查授权"></a><strong>检查授权</strong></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show grants for &#39;super_admin&#39;@&#39;%&#39;;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show grants for &#39;company_read_only&#39;@&#39;localhost&#39;;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show grants for &#39;testuser&#39;@&#39;localhost&#39;;</span><br></pre></td></tr></table></figure>

<h4 id="撤销权限"><a href="#撤销权限" class="headerlink" title="撤销权限"></a>撤销权限</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">revoke insert,update,select,delete on test_gbk.* from &#39;testuser&#39;@&#39;localhost&#39;;</span><br><span class="line"></span><br><span class="line"># 回收后查看权限</span><br><span class="line">mysql&gt; show grants for &#39;testuser&#39;@&#39;localhost&#39;;</span><br><span class="line">+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| Grants for testuser@localhost                                                                                                                                                                                |</span><br><span class="line">+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| GRANT USAGE ON *.* TO &#96;testuser&#96;@&#96;localhost&#96;                                                                                                                                                                 |</span><br><span class="line">| GRANT CREATE, DROP, REFERENCES, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, EVENT, TRIGGER ON &#96;test_gbk&#96;.* TO &#96;testuser&#96;@&#96;localhost&#96; |</span><br><span class="line">+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>撤销 company_read_only 用户对薪水列的访问权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">revoke select(salary) on employees.salaries from &#39;company_read_only&#39;@&#39;localhost&#39;;</span><br></pre></td></tr></table></figure>

<h4 id="修改-mysql-user-表"><a href="#修改-mysql-user-表" class="headerlink" title="修改 mysql.user 表"></a>修改 mysql.user 表</h4><p>所有用户信息及权限都存储在 mysql.user表中 。如果你有权访问 mysql.user表， 则可以直接通过修改 mysql.user 表来创建用户并授予权限 。</p>
<p>如果你使用 GRANT 、 REVOKE 、 SET PASSWORD 或 RENAME USER 等账户管理语句间 接修改授权表， 则 服务器会通知这些更改，并立即再次将授权表加载到内存中 。</p>
<p>如果使用 INSERT、 UPDATE 或 DELETE 等语句直接修改授权表，则更改不会影响权限检查，除非你重新启动服务器或指示其重新加载表 。 如果直接更改授权表，但忘记了重新加载表，那么在重新启动服务器之前，这些更改无效 。</p>
<p>可以通过执行 FLUSH PRIVILEGES 语句来完成 GRANT 表的重新加载 。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">update mysql.user set host&#x3D;&#39;localhost&#39; where user&#x3D;&#39;super_admin&#39;;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>

<h4 id="锁定用户"><a href="#锁定用户" class="headerlink" title="锁定用户"></a>锁定用户</h4><p>MySQL支持使用 CREATE USER或 ALTER USER 锁定用户</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alter user &#39;company_read_only&#39;@&#39;localhost&#39; account lock;</span><br></pre></td></tr></table></figure>

<p>解锁</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alter user &#39;company_read_only&#39;@&#39;localhost&#39; account unlock;</span><br></pre></td></tr></table></figure>

<h4 id="为用户创建角色"><a href="#为用户创建角色" class="headerlink" title="为用户创建角色"></a>为用户创建角色</h4><p>MySQL 的角色是一个权限的集合。 与用户账户一样，角色的权限可以被授予和撤销。 用户账户被授予角色后， 该角色就会将其拥有的权限授予该账户 。 之前，我们为不同的用 户创建了读取 、写入和管理权限。对于写入权限，我们已授予用户 INSERT、 DELETE 和 UPDATE 权限 。 现在你可以将这些权限授予某个角色， 然后为用户分配该角色。通过这种方式，可以避免为许多用户账户单独授予权限的麻烦。</p>
<ul>
<li>创建角色</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create role &#39;app_read_only&#39;, &#39;app_writes&#39;, &#39;app_developer&#39;;</span><br></pre></td></tr></table></figure>

<ul>
<li>使用 GRANT 语句为角色分自己权限</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grant select on employees.* to &#39;app_read_only&#39;;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grant insert, update, delete on employees.* to &#39;app_writes&#39;;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grant all on employees.* to &#39;app_developer&#39;;</span><br></pre></td></tr></table></figure>

<ul>
<li>创建用户。如果你不指定主机，则将采用 %(任意主机):</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create user emp_read_only identified by &#39;123&#39;;</span><br><span class="line">create user emp_write identified by &#39;123&#39;;</span><br><span class="line">create user emp_develpoer identified by &#39;123&#39;;</span><br><span class="line">create user emp_read_write identified by &#39;123&#39;;</span><br></pre></td></tr></table></figure>

<ul>
<li>使用 GRANT 语句为用户分配角色 。你可以为用户分配多个角色 。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grant &#39;app_read_only&#39; to emp_read_only;</span><br><span class="line">grant &#39;app_writes&#39; to emp_write;</span><br><span class="line">grant &#39;app_developer&#39; to emp_develpoer;</span><br><span class="line">grant &#39;app_read_only&#39;, &#39;app_writes&#39; to emp_read_write;</span><br></pre></td></tr></table></figure>

<h3 id="创建、删除表"><a href="#创建、删除表" class="headerlink" title="创建、删除表"></a>创建、删除表</h3><p>在表中定义列时，应该指定列的名称、数据类型(整型、浮点型、字符串等)和默认 值(如果有的话) 。 MySQL 支持各种数据类型。更多有关信息请参阅MySQL文档(<a href="https://dev.mysql.com/doc/refman/8.0/en/spatial-extensions.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/8.0/en/spatial-extensions.html</a> )。下面是所有数据类型的概述，其中 JSON 数据类型是一个新的扩展类型  。</p>
<ol>
<li><p>数字 : TINYINT 、 SMALLINT 、 MEDIUMINT 、 INT 、 BIGINT 和 BIT。</p>
</li>
<li><p>浮点数 : DECIMAL、 FLOAT 和 DOUBLE。</p>
</li>
<li><p>字符串: CHAR、 VARCHAR、 BINARY、 VARBINARY、 BLOB、 TEXT、 ENUM 和 SET。</p>
</li>
<li><p>Spatial 数据类型，更多详细信息请参阅 <a href="https://dev.mysql.com/doc/refman/8.0/en/spatial-extensions.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/8.0/en/spatial-extensions.html</a> 。</p>
</li>
<li><p>JSON 数据类型，将在后面单独讨论。</p>
</li>
</ol>
<p>你可以在一个数据库中创建多张表 。</p>
<h4 id="建表，并且建立两个字段"><a href="#建表，并且建立两个字段" class="headerlink" title="建表，并且建立两个字段"></a><strong>建表，并且建立两个字段</strong></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; create table test(</span><br><span class="line">       id int(4) not null,</span><br><span class="line">       name char(20) not null</span><br><span class="line">       );</span><br></pre></td></tr></table></figure>

<h4 id="另一种方式"><a href="#另一种方式" class="headerlink" title="另一种方式"></a>另一种方式</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; create table if not exists test_gbk.customers(</span><br><span class="line">       id int unsigned AUTO_INCREMENT PRIMARY KEY,</span><br><span class="line">       first_name varchar(20),</span><br><span class="line">       last_name varchar(20),</span><br><span class="line">       country varchar(20)</span><br><span class="line">       ) engine&#x3D;InnoDB;</span><br></pre></td></tr></table></figure>

<p>其中的选项解释如下 。</p>
<p>• 句点符号: 表可以使用 database.table 引用。 如果已经连接到数据库， 则可 以简单地使用 customers 而不是 company . customers。</p>
<p>• IF NOT EXISTS :如果存在一个具有相同名字的表 ， 并且你指定了这个子句， MySQL 只会抛出一个警告，告知表已经存在 。 否则 ， MySQL 将抛出 一个错误 。</p>
<p>• id:它被声明为一个整型数，因为它只包含整型数。除此之外，还有两个关键字， AUTO_INCREMENT 和 PRIMARY KEY 。</p>
<p>• AUTO INCREMENT: 自动生成线性递增序列，因此不必担心为每一行的 id分配 值。</p>
<p>• PRIMARY KEY: 每行都Fl’!一个非空的UNIQUE列标识。 只有一列应该在表中定 义。 如果一个表包含 AUTO INCREMENT列， 则它会被视为 PRIMARY KEY。</p>
<p>• first_name、 last_name 和country: 它们包含字符串 ， 因此它们被定义为 varchar 。</p>
<p>• Engine:与列定义一起，还应该指定存储引擎。一些类型的存储引擎包括 InnoDB、 MyISAM、FEDERATED、BLACKHOLE、CSV和MEMORY。在所有引擎中， InnoDB 是唯一的事务引擎， 也是默认引擎。</p>
<h4 id="查看表"><a href="#查看表" class="headerlink" title="查看表"></a>查看表</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure>

<h4 id="查看表结构"><a href="#查看表结构" class="headerlink" title="查看表结构"></a><strong>查看表结构</strong></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">desc test;</span><br></pre></td></tr></table></figure>

<h4 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a><strong>删除表</strong></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">drop table test;</span><br></pre></td></tr></table></figure>

<h4 id="查看建表"><a href="#查看建表" class="headerlink" title="查看建表"></a><strong>查看建表</strong></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show create table test1\G</span><br></pre></td></tr></table></figure>

<h4 id="克隆表结构"><a href="#克隆表结构" class="headerlink" title="克隆表结构"></a>克隆表结构</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create table new_customers like customers;</span><br></pre></td></tr></table></figure>

<h3 id="插入、更新和删除行"><a href="#插入、更新和删除行" class="headerlink" title="插入、更新和删除行"></a>插入、更新和删除行</h3><h4 id="INSERT-语句用于在表中创建新记录"><a href="#INSERT-语句用于在表中创建新记录" class="headerlink" title="INSERT 语句用于在表中创建新记录"></a>INSERT 语句用于在表中创建新记录</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; insert ignore into customers</span><br><span class="line">       (first_name, last_name, country)</span><br><span class="line">       values</span><br><span class="line">       (&#39;Mike&#39;, &#39;Galler&#39;, &#39;USA&#39;),</span><br><span class="line">       (&#39;Andy&#39;, &#39;Hollands&#39;, &#39;Australia&#39;),</span><br><span class="line">       (&#39;Ravi&#39;, &#39;Vadantam&#39;, &#39;India&#39;),</span><br><span class="line">       (&#39;Rajiv&#39;, &#39;Perera&#39;, &#39;Sri Lanka&#39;);</span><br></pre></td></tr></table></figure>

<p>或者可以明确地写出 id列，如果你想插入特定的 id:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; insert ignore into customers</span><br><span class="line">       (id, first_name, last_name, country)</span><br><span class="line">       values</span><br><span class="line">       (1, &#39;Mike&#39;, &#39;Galler&#39;, &#39;USA&#39;),</span><br><span class="line">       (2, &#39;Andy&#39;, &#39;Hollands&#39;, &#39;Australia&#39;),</span><br><span class="line">       (3, &#39;Ravi&#39;, &#39;Vadantam&#39;, &#39;India&#39;),</span><br><span class="line">       (4, &#39;Rajiv&#39;, &#39;Perera&#39;, &#39;Sri Lanka&#39;);</span><br></pre></td></tr></table></figure>

<p>IGNORE:如果该行已经存在，并给出了 IGNORE子句，则新数据将被忽略， INSERT 语句仍然会执行成功，同时生成一个警告和重复数据的数目。 反之，如果未给出 IGNORE 子句，则 INSERT 语句会生成一条错误信息 。 行的唯一性由主键标识。</p>
<h4 id="UPDATE-语句用于修改表中的现有记录"><a href="#UPDATE-语句用于修改表中的现有记录" class="headerlink" title="UPDATE 语句用于修改表中的现有记录"></a>UPDATE 语句用于修改表中的现有记录</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">update customer set first_name&#x3D;&#39;Rajiv&#39;, country&#x3D;&#39;UK&#39; where id&#x3D;4;</span><br></pre></td></tr></table></figure>

<p>WHERE : 这是用于过滤的子句 。 在 WHERE 子句后指定的任何条件都会用于过滤，被筛选出来的行都会被更新 。</p>
<h4 id="DELETE-语句用于删除表中记录"><a href="#DELETE-语句用于删除表中记录" class="headerlink" title="DELETE 语句用于删除表中记录"></a>DELETE 语句用于删除表中记录</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">delete from customers where id&#x3D;5 and first_name&#x3D;&#39;Mike&#39;;</span><br></pre></td></tr></table></figure>

<h4 id="REPLACE-、INSERT-、ON-DUPLICATE-KEY-UPDATE"><a href="#REPLACE-、INSERT-、ON-DUPLICATE-KEY-UPDATE" class="headerlink" title="REPLACE 、INSERT 、ON DUPLICATE KEY UPDATE"></a>REPLACE 、INSERT 、ON DUPLICATE KEY UPDATE</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">replace into customers values (1, &#39;Mike&#39;, &#39;Galler&#39;, &#39;America&#39;);</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">insert into payments values (&#39;Mike Galler&#39;, 200) on duplicate key update payment&#x3D;payment+values(payment);</span><br></pre></td></tr></table></figure>

<p>在很多情况下，我们需要处理重复项 。行的唯一性由主键标识 。如果行已经存在，则 REPLACE 会简单地删除行并插入新行;如果行不存在，则 REPLACE 等同于 INSERT。</p>
<p>如果你想在行已经存在的情况下处理重复项，则需要使用 ON DUPLICATE KEY UPDATE。 如果指定了 ON DUPLICATE KEY UPDATE 选项，并且 INSERT 语句在 PRIMARY KEY中引发了重复值， 则MySQL会用新值更新已有行。</p>
<p>区别：</p>
<p>（1）在没有主键或者唯一索引重复时，replace与insert .. on deplicate udpate相同。</p>
<p>（2）在主键或者唯一索引重复时，<strong>replace是delete老记录，而录入新的记录，所以原有的所有记录会被清除，这个时候，如果replace语句的字段不全的话，有些原有的比如c字段的值会被自动填充为默认值。</strong>而insert .. duplicate update则只执行update标记之后的sql，从表象上来看相当于一个简单的update语句。它保留了所有字段的旧值，只更新update后面的语句，而replace没有保留旧值，直接删除再insert新值。<br>从底层执行效率上来讲，replace要比insert .. on duplicate update效率要高，但是在写replace的时候，字段要写全，防止老的字段数据被删除。</p>
<h4 id="TRUNCATING-TABLE"><a href="#TRUNCATING-TABLE" class="headerlink" title="TRUNCATING TABLE"></a>TRUNCATING TABLE</h4><p>删除整个表需要很长时间，因为 MySQL 需要逐行执行操作。 删除表的所有行(保留 表结构)的最快方法是使用TRUNCATE TABLE语句。</p>
<p>TRUNCATING TABLE 是 MySQL 中的 DDL 操作，也就是说一旦数据被清空 ，就不能被回滚。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">truncate table test1;</span><br></pre></td></tr></table></figure>

<h3 id="加载示例数据"><a href="#加载示例数据" class="headerlink" title="加载示例数据"></a>加载示例数据</h3><h4 id="下载压缩文件"><a href="#下载压缩文件" class="headerlink" title="下载压缩文件"></a>下载压缩文件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget <span class="string">'https://codeload.github.com/datacharmer/test_db/zip/master'</span> -O master.zip</span><br></pre></td></tr></table></figure>

<h4 id="解斥缩文件"><a href="#解斥缩文件" class="headerlink" title="解斥缩文件"></a>解斥缩文件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">unzip master.zip</span><br></pre></td></tr></table></figure>

<h4 id="加载数据"><a href="#加载数据" class="headerlink" title="加载数据"></a>加载数据</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> test_db-master</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -u root -p &lt; employees.sql</span><br></pre></td></tr></table></figure>

<h4 id="验证数据"><a href="#验证数据" class="headerlink" title="验证数据"></a>验证数据</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -u root -p employees -A</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; show tables;</span><br><span class="line">+----------------------+</span><br><span class="line">| Tables_in_employees  |</span><br><span class="line">+----------------------+</span><br><span class="line">| current_dept_emp     |</span><br><span class="line">| departments          |</span><br><span class="line">| dept_emp             |</span><br><span class="line">| dept_emp_latest_date |</span><br><span class="line">| dept_manager         |</span><br><span class="line">| employees            |</span><br><span class="line">| salaries             |</span><br><span class="line">| titles               |</span><br><span class="line">+----------------------+</span><br><span class="line">8 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; desc employees\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">  Field: emp_no</span><br><span class="line">   Type: int(11)</span><br><span class="line">   Null: NO</span><br><span class="line">    Key: PRI</span><br><span class="line">Default: NULL</span><br><span class="line">  Extra:</span><br><span class="line">*************************** 2. row ***************************</span><br><span class="line">  Field: birth_date</span><br><span class="line">   Type: date</span><br><span class="line">   Null: NO</span><br><span class="line">    Key:</span><br><span class="line">Default: NULL</span><br><span class="line">  Extra:</span><br><span class="line">*************************** 3. row ***************************</span><br><span class="line">  Field: first_name</span><br><span class="line">   Type: varchar(14)</span><br><span class="line">   Null: NO</span><br><span class="line">    Key:</span><br><span class="line">Default: NULL</span><br><span class="line">  Extra:</span><br><span class="line">*************************** 4. row ***************************</span><br><span class="line">  Field: last_name</span><br><span class="line">   Type: varchar(16)</span><br><span class="line">   Null: NO</span><br><span class="line">    Key:</span><br><span class="line">Default: NULL</span><br><span class="line">  Extra:</span><br><span class="line">*************************** 5. row ***************************</span><br><span class="line">  Field: gender</span><br><span class="line">   Type: enum(&#39;M&#39;,&#39;F&#39;)</span><br><span class="line">   Null: NO</span><br><span class="line">    Key:</span><br><span class="line">Default: NULL</span><br><span class="line">  Extra:</span><br><span class="line">*************************** 6. row ***************************</span><br><span class="line">  Field: hire_date</span><br><span class="line">   Type: date</span><br><span class="line">   Null: NO</span><br><span class="line">    Key:</span><br><span class="line">Default: NULL</span><br><span class="line">  Extra:</span><br><span class="line">6 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<h3 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h3><h4 id="查询所有列"><a href="#查询所有列" class="headerlink" title="查询所有列"></a>查询所有列</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from departments;</span><br></pre></td></tr></table></figure>

<h4 id="选择列"><a href="#选择列" class="headerlink" title="选择列"></a>选择列</h4><p>选择 dept_manager 的 emp_no 和 dept_no 列：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select emp_no,dept_no from dept_manager;</span><br></pre></td></tr></table></figure>

<h4 id="计数"><a href="#计数" class="headerlink" title="计数"></a>计数</h4><p>从 employees表中查找员工的数量</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select count(*) from employees;</span><br></pre></td></tr></table></figure>

<h4 id="条件过滤"><a href="#条件过滤" class="headerlink" title="条件过滤"></a>条件过滤</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select emp_no from employees where first_name&#x3D;&#39;Georgi&#39; and last_name&#x3D;&#39;Facello&#39;;</span><br></pre></td></tr></table></figure>

<h4 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h4><ul>
<li><p>IN: 检查一个值是存在一组值中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select count(*) from employees where last_name in (&#39;Christ&#39;, &#39;Lamba&#39;, &#39;Baba&#39;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>BETWEEN …AND:检查一个值是否在一个范围内</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select count(*) from employees where hire_date between &#39;1986-12-01&#39; and &#39;1986-12-31&#39;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>NOT 你可以简单地用 NOT 运算符来否定结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select count(*) from employees where hire_date not between &#39;1986-12-01&#39; and &#39;1986-12-31&#39;;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="简单模式匹配"><a href="#简单模式匹配" class="headerlink" title="简单模式匹配"></a>简单模式匹配</h4><p>可以使用 LIKE 运算符来实现简单模式匹配。 使用下画线( _ )来精准匹配一个字符，使用( % ) 来匹配任意数量的字符 。</p>
<ul>
<li><p>找出名字以 Christ开头的所有员工的人数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select count(*) from employees where first_name like &#39;christ%&#39;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>找出名字以 Christ开头并以 ed结尾的所有员工的人数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select count(*) from employees where first_name like &#39;christ%ed&#39;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>找出名字中包含 sri的所有员工的人数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select count(*) from employees where first_name like &#39;%sri%&#39;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>找到名字以 er 结尾的所有员工的人数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select count(*) from employees where first_name like &#39;%er&#39;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>找出名字以任意两个字符开头、后面跟随 ka、再后面跟随任意数量字符的所有员工的人数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select count(*) from employees where first_name like &#39;__ka%&#39;;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h4><p>你可以利用 RLIKE 或 REGEXP 运算符在 WHERE 子句中使用正则表达式</p>
<ul>
<li><p>找出名字以 Christ开头的所有员工的人数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select count(*) from employees where first_name rlike &#39;^christ&#39;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>找出姓氏以 ba结尾的所有员工的人数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select count(*) from employees where last_name regexp &#39;ba$&#39;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>查找姓氏不包含元音 (a、 e、 i、 o和u)的所有员工的人数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select count(*) from employees where last_name not regexp &#39;[aeiou]&#39;;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="限定结果"><a href="#限定结果" class="headerlink" title="限定结果"></a>限定结果</h4><p>查询hire date在1986年之前的任何10名员工的姓名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select first_name, last_name from employees where hire_date &lt; &#39;1986-01-01&#39; limit 10;</span><br></pre></td></tr></table></figure>

<h4 id="使用表别名"><a href="#使用表别名" class="headerlink" title="使用表别名"></a>使用表别名</h4><p>使用自别名来更改 COUNT (*)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; select count(*) as count from employees where hire_date between &#39;1986-12-01&#39; and &#39;1986-12-31&#39;;</span><br><span class="line">+-------+</span><br><span class="line">| count |</span><br><span class="line">+-------+</span><br><span class="line">|  3081 |</span><br><span class="line">+-------+</span><br><span class="line">1 row in set (0.09 sec)</span><br></pre></td></tr></table></figure>

<h3 id="对结果排序"><a href="#对结果排序" class="headerlink" title="对结果排序"></a>对结果排序</h3><p>查找薪水最高的前 5名员工的员工编号</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select emp_no, salary from salaries order by salary desc limit 5;</span><br></pre></td></tr></table></figure>

<p>你可以在 SELECT 语句中提及列的位置，而不是指定列名称</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select emp_no, salary from salaries order by 2 desc limit 5;</span><br></pre></td></tr></table></figure>

<h3 id="对结果分组-聚合函数"><a href="#对结果分组-聚合函数" class="headerlink" title="对结果分组(聚合函数)"></a>对结果分组(聚合函数)</h3><h4 id="COUNT"><a href="#COUNT" class="headerlink" title="COUNT"></a>COUNT</h4><ul>
<li><p>分别找出男性和女性员工的人数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select gender, count(*) as count from employees group by gender;</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果你希望查找员工名字中最常见的10个名字，可以使用 GROUP BY first_name 对所有名字分组，然后使用COUNT(first_name)在各组内计数，最后使用ORDER BY计数对结果进行排序 并将返回结果行数限制为前 10行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select first_name,count(first_name) as count from employees group by first_name order by count desc limit 10;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="SUM"><a href="#SUM" class="headerlink" title="SUM"></a>SUM</h4><p>查找每年给予员工的薪水总额并按薪水高低对结果进行排序。 YEAR ()函数将返回给定日期所在的年份</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select year(from_date) as date, sum(salary) as sum from salaries group by date order by sum desc;</span><br></pre></td></tr></table></figure>

<h4 id="AVERAGE"><a href="#AVERAGE" class="headerlink" title="AVERAGE"></a>AVERAGE</h4><p>查找平均工资最高的10名员工</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select emp_no, avg(salary) as avg from salaries group by emp_no order by avg desc limit 10;</span><br></pre></td></tr></table></figure>

<h4 id="DISTINCT"><a href="#DISTINCT" class="headerlink" title="DISTINCT"></a>DISTINCT</h4><p>可以使用 DISTINCT 子句过滤出表中的不同条目</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select distinct title from titles;</span><br></pre></td></tr></table></figure>

<h4 id="使用-HAVING-过滤"><a href="#使用-HAVING-过滤" class="headerlink" title="使用 HAVING 过滤"></a>使用 HAVING 过滤</h4><p>可以通过添加HAVING子句来过滤GROUP BY子句的结果。 例如，找到平均工资超过 140,000美元的员工</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select emp_no,avg(salary) as avg from salaries group by emp_no having avg &gt; 140000 order by avg desc;</span><br></pre></td></tr></table></figure>

<h3 id="查询数据并保存到文件和表中"><a href="#查询数据并保存到文件和表中" class="headerlink" title="查询数据并保存到文件和表中"></a>查询数据并保存到文件和表中</h3><p>我们可以使用 SELECT INTO OUTFILE 语句将输出保存到文件中。</p>
<p>可以指定列和行分隔符，然后可以将数据导入其他数据平台 。</p>
<h4 id="另存为文件"><a href="#另存为文件" class="headerlink" title="另存为文件"></a>另存为文件</h4><ul>
<li>要将输出结果保存到文件中，你需要拥有 FILE权限</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create user user_to_file identified by &#39;123&#39;;</span><br><span class="line">grant select on employees.* to user_to_file;</span><br><span class="line">grant file on *.* to user_to_file;</span><br></pre></td></tr></table></figure>

<ul>
<li>在Ubuntu系统中， 默认情况下， MySQL不允许写人文件。 你应该在配置文件中 设置secure_file_priv并重新启动MySQL，配置方法如下</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在 my.cnf配置文件中添加如下信息 /usr/local/mysql/support-files/my.cnf</span></span><br><span class="line">[mysqld]</span><br><span class="line">secure-file-priv=<span class="string">"/tmp"</span></span><br></pre></td></tr></table></figure>

<p>​        如果没有配置文件 my.cnf 需手动创建</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/my.cnf</span><br></pre></td></tr></table></figure>

<p>​        然后在文件中太监如下信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[client]</span><br><span class="line">default-character-set=utf8</span><br><span class="line">[mysqld]</span><br><span class="line">character-set-server=utf8</span><br><span class="line"></span><br><span class="line"><span class="comment">#sql_mode='NO_AUTO_VALUE_ON_ZERO,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION,PIPES_AS_CONCAT,ANSI_QUOTES'</span></span><br><span class="line"></span><br><span class="line">sql_mode=<span class="string">'STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION'</span></span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure>

<p>​        最后重启mysql服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo /usr/<span class="built_in">local</span>/mysql/support-files/mysql.server restart</span><br></pre></td></tr></table></figure>

<p>​        进入mysql查看配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; show variables like &#39;%secure%&#39;;</span><br><span class="line">+--------------------------+---------------+</span><br><span class="line">| Variable_name            | Value         |</span><br><span class="line">+--------------------------+---------------+</span><br><span class="line">| require_secure_transport | OFF           |</span><br><span class="line">| secure_file_priv         | &#x2F;private&#x2F;tmp&#x2F; |</span><br><span class="line">+--------------------------+---------------+</span><br><span class="line">2 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure>

<p>以下语句会将输出结果保存为 csv 格式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select first_name, last_name into outfile &#39;&#x2F;tmp&#x2F;result.csv&#39; fields terminated by &#39;,&#39; optionally enclosed by &#39;&quot;&#39; lines terminated by  &#39;\n&#39; from employees where hire_date&lt;&#39;1986-01-01&#39; limit 10;</span><br></pre></td></tr></table></figure>

<h4 id="另存为表"><a href="#另存为表" class="headerlink" title="另存为表"></a>另存为表</h4><p>我们也可以将 SELECT 语句的结果保存到表中 。 即使表不存在， 也可以使用 CREATE 和 SELECT 来创建表并加载数据 。 如果表己存在，则可以使用 INSERT 和 SELECT 加载数据。</p>
<p>可以将标题保存到新的 titles_only 表中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create table titles_only as select distinct title from titles;</span><br></pre></td></tr></table></figure>

<p>如果表已经存在，则可以使用 INSERT INTO SELECT 语句</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">insert into select distinct title from titles;</span><br></pre></td></tr></table></figure>

<h3 id="将数据加载到表中"><a href="#将数据加载到表中" class="headerlink" title="将数据加载到表中"></a>将数据加载到表中</h3><p>创建一个表来保存数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; create table emplyee_names (</span><br><span class="line">       first_name varchar(14) not null,</span><br><span class="line">       last_name varchar(16) not null</span><br><span class="line">       ) engine&#x3D;innodb;</span><br></pre></td></tr></table></figure>

<p>确保文件存在</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ls -lhtr /tmp/result.csv</span><br></pre></td></tr></table></figure>

<p>使用 LOAD DATA INFILE 语句加载数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; load data infile &#39;&#x2F;tmp&#x2F;result.csv&#39; into table emplyee_names</span><br><span class="line">       fields terminated by &#39;,&#39;</span><br><span class="line">       optionally enclosed by &#39;&quot;&#39;</span><br><span class="line">       lines terminated by &#39;\n&#39;;</span><br></pre></td></tr></table></figure>

<p>该文件可以以完整路径名的形式给出，以指定其确切位置 。 如果以相对路径名的形式给出，则相对路径名将被解析为相对于客户机程序启动的目录 。</p>
<ul>
<li>如果文件开头包含一些你想忽略的行，可以用 IGNORE n Lines 指定</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; load data infile &#39;&#x2F;tmp&#x2F;result.csv&#39; into table emplyee_names</span><br><span class="line">       fields terminated by &#39;,&#39;</span><br><span class="line">       optionally enclosed by &#39;&quot;&#39;</span><br><span class="line">       lines terminated by &#39;\n&#39;</span><br><span class="line">       ignore 1 lines;</span><br></pre></td></tr></table></figure>

<ul>
<li>可以用 REPLACE或者 IGNORE来处理重复的行</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; load data infile &#39;&#x2F;tmp&#x2F;result.csv&#39; replace into table emplyee_names</span><br><span class="line">       fields terminated by &#39;,&#39;</span><br><span class="line">       optionally enclosed by &#39;&quot;&#39;</span><br><span class="line">       lines terminated by &#39;\n&#39;</span><br><span class="line">       ignore 1 lines;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; load data infile &#39;&#x2F;tmp&#x2F;result.csv&#39; ignore into table emplyee_names</span><br><span class="line">       fields terminated by &#39;,&#39;</span><br><span class="line">       optionally enclosed by &#39;&quot;&#39;</span><br><span class="line">       lines terminated by &#39;\n&#39;</span><br><span class="line">       ignore 1 lines;</span><br></pre></td></tr></table></figure>

<h3 id="表关联"><a href="#表关联" class="headerlink" title="表关联"></a>表关联</h3><p>假设你想用 emp_no: 110022 找到员工的姓名和部门号码:</p>
<ul>
<li>部门编号和名称存储在 departments表中</li>
<li>员工编号和其他详细信息(例如 first_name 和 last_name )存储在 employees 表中 </li>
<li>员工和部门的映射关系存储在 dept_manager表中</li>
</ul>
<p>如果你不想使用 JOIN，可以这样做</p>
<ol>
<li><p>从 employee 表中查找 emp_no 为 110022 的员工姓名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select emp.emp_no, emp.first_name, emp.last_name from employees as emp where emp.emp_no&#x3D;110022;</span><br></pre></td></tr></table></figure>
</li>
<li><p>从 dept_manager 表中查找部门编号</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select dept_no from dept_manager where emp_no&#x3D;&#39;110022&#39;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>从 departments 表中查找部门名称</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select dept_name from departments dept where dept.dept_no&#x3D;&#39;d001&#39;;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h4 id="使用join操作"><a href="#使用join操作" class="headerlink" title="使用join操作"></a>使用join操作</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; select emp.emp_no, emp.first_name, emp.last_name, dept.dept_name from employees emp</span><br><span class="line">       join dept_manager dept_mgr</span><br><span class="line">           on emp.emp_no&#x3D;dept_mgr.emp_no and emp.emp_no&#x3D;110022</span><br><span class="line">       join departments dept</span><br><span class="line">           on dept_mgr.dept_no&#x3D;dept.dept_no;</span><br></pre></td></tr></table></figure>

<p>假设计、想了解每个部门的平均工资，你可以使用 AVG 函数并按照dept_no进行分组。要找出部门名称，可以将结果与departments 表通过dept_no 列进行关联</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select dept_name, avg(salary) as avg_salary</span><br><span class="line">from</span><br><span class="line">    salaries</span><br><span class="line">join dept_emp</span><br><span class="line">    on salaries.emp_no&#x3D;dept_emp.emp_no</span><br><span class="line">join departments as dept</span><br><span class="line">    on dept_emp.dept_no&#x3D;dept.dept_no</span><br><span class="line">group by</span><br><span class="line">    dept_emp.dept_no</span><br><span class="line">order by </span><br><span class="line">	avg_salary </span><br><span class="line">desc</span><br><span class="line">;</span><br></pre></td></tr></table></figure>

<h4 id="通过与自己关联来识别重复项"><a href="#通过与自己关联来识别重复项" class="headerlink" title="通过与自己关联来识别重复项"></a>通过与自己关联来识别重复项</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select empl1.*</span><br><span class="line">from</span><br><span class="line">    employees as empl1</span><br><span class="line">join employees empl2</span><br><span class="line">    on empl1.first_name&#x3D;empl2.first_name</span><br><span class="line">    and empl1.last_name&#x3D;empl2.last_name</span><br><span class="line">    and empl1.gender&#x3D;empl2.gender</span><br><span class="line">    and empl1.hire_date&#x3D;empl2.hire_date</span><br><span class="line">    and empl1.emp_no!&#x3D;empl2.emp_no</span><br><span class="line">order by</span><br><span class="line">    first_name, last_name;</span><br></pre></td></tr></table></figure>

<h4 id="使用子查询"><a href="#使用子查询" class="headerlink" title="使用子查询"></a>使用子查询</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select</span><br><span class="line">    first_name, last_name</span><br><span class="line">from </span><br><span class="line">    employees</span><br><span class="line">where</span><br><span class="line">    emp_no</span><br><span class="line">in</span><br><span class="line">    (</span><br><span class="line">        select </span><br><span class="line">            emp_no </span><br><span class="line">        from </span><br><span class="line">            titles</span><br><span class="line">        where</span><br><span class="line">            title&#x3D;&quot;Senior Engineer&quot; and from_date&#x3D;&quot;1986-06-26&quot;</span><br><span class="line">    )</span><br><span class="line">;</span><br></pre></td></tr></table></figure>

<p>找到工资最高的员工</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select</span><br><span class="line">    emp_no</span><br><span class="line">from </span><br><span class="line">    salaries</span><br><span class="line">where </span><br><span class="line">    salary&#x3D;(</span><br><span class="line">        select </span><br><span class="line">            max(salary) </span><br><span class="line">        from </span><br><span class="line">            salaries</span><br><span class="line">    )</span><br><span class="line">;</span><br></pre></td></tr></table></figure>

<h4 id="查找表之间不匹配的行"><a href="#查找表之间不匹配的行" class="headerlink" title="查找表之间不匹配的行"></a>查找表之间不匹配的行</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create table employees_list1 as select * from employees where first_name like &#39;aa%&#39;;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create table employees_list2 as select * from employees where emp_no between 400000 and 500000 and gender&#x3D;&#39;F&#39;;</span><br></pre></td></tr></table></figure>

<p>我们已经知道如何找到两个列表中都存在的员工了 ，代码如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select</span><br><span class="line">    l1.*</span><br><span class="line">from </span><br><span class="line">    employees_list1 l1</span><br><span class="line">join employees_list2 l2</span><br><span class="line">    on l1.emp_no&#x3D;l2.emp_no</span><br><span class="line">;</span><br></pre></td></tr></table></figure>

<p>现在要找出存在于 employees_listl 但不存在于 employees_list2 中的员工</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select </span><br><span class="line">    *</span><br><span class="line">from </span><br><span class="line">    employees_list1 l1</span><br><span class="line">where </span><br><span class="line">    l1.emp_no </span><br><span class="line">not in </span><br><span class="line">    (</span><br><span class="line">        select</span><br><span class="line">            l2.emp_no</span><br><span class="line">        from </span><br><span class="line">            employees_list2 l2</span><br><span class="line">    )</span><br><span class="line">;</span><br></pre></td></tr></table></figure>

<p>或者也可以使用 OUTER JOIN</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select</span><br><span class="line">    l1.*</span><br><span class="line">from </span><br><span class="line">    employees_list1 l1</span><br><span class="line">left outer join employees_list2 l2</span><br><span class="line">    on l1.emp_no&#x3D;l2.emp_no</span><br><span class="line">where</span><br><span class="line">    l2.emp_no is null</span><br><span class="line">;</span><br></pre></td></tr></table></figure>

<p>outer join为第二个表中所有与第一个表中的行不匹配的行创建 NULL列。 如果使 用 RIGHT JOIN，则为第一个表中所有与第二个表中的行不匹配的行创建 NULL 列。</p>
<p>你也可以使用 OUTER JOIN 来查找民自己的行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select</span><br><span class="line">    l1.*</span><br><span class="line">from </span><br><span class="line">    employees_list1 l1</span><br><span class="line">left outer join employees_list2 l2</span><br><span class="line">    on l1.emp_no&#x3D;l2.emp_no</span><br><span class="line">where </span><br><span class="line">    l2.emp_no is not null</span><br><span class="line">;</span><br></pre></td></tr></table></figure>











]]></content>
      <categories>
        <category>技术</category>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>JS逆向学习-*博登陆加密参数</title>
    <url>/2020/06/02/article-8/</url>
    <content><![CDATA[<p>aHR0cHM6Ly93d3cud2VpYm8uY29tL2xvZ2luLnBocA==</p>
<h3 id="分析请求"><a href="#分析请求" class="headerlink" title="分析请求"></a>分析请求</h3><p>打开网页进入 Chrome 调试模式下并输入错误的用户名和密码发现有两个login请求</p>
<p><img src="/2020/06/02/article-8/WX20200602-150346.png" alt></p>
<p><img src="/2020/06/02/article-8/WX20200602-150642.png" alt></p>
<p>先对这两个请求进行模拟，分别需要对 <strong><em>su</em></strong> 和 <strong><em>sp</em></strong> 参数进行逆向</p>
<p>全局搜索 <strong><em>”su=“</em></strong> 定位到了下图中标记的位置，且 <strong><em>sp</em></strong> 的加密方式也定位到了</p>
<p><img src="/2020/06/02/article-8/WX20200602-151611.png" alt></p>
<h3 id="逆向"><a href="#逆向" class="headerlink" title="逆向"></a>逆向</h3><p>通过上面的分析流程定位到了加密位置，且发现 <strong><em>su</em></strong> 其实是通过base64进行了编码</p>
<p>接下来我们通过断点查看 <strong><em>sp</em></strong> 的处理方式</p>
<p><img src="/2020/06/02/article-8/WX20200602-152501.png" alt></p>
<p>这里可以看到加密需要的参数为 <strong><em>rsaPubkey</em></strong>、 <strong><em>servertime</em></strong>、 <strong><em>nonce</em></strong> 和 <strong><em>密码</em></strong>，接下来我们再看下面的截图</p>
<p><img src="/2020/06/02/article-8/WX20200602-152949.png" alt></p>
<p>到这里已经找到加密需要的全部参数了，最后就是扣代码</p>
<p>将 <strong><em>sp</em></strong> 加密的代码复制到webstorm中并运行报错“sinaSSOEncoder is not defined”</p>
<p>找到sinaSSOEncoder的定义部分</p>
<p><img src="/2020/06/02/article-8/WX20200602-155623.png" alt></p>
<p><img src="/2020/06/02/article-8/WX20200602-155709.png" alt></p>
<p>1048 ～ 1981行都是sinaSSOEncoder的定义代码</p>
<p>然后再运行</p>
<p><img src="/2020/06/02/article-8/WX20200602-155858@2x.png" alt></p>
<p>搞定</p>
<p>最后要注意的是后续的登陆流程是根据 <strong><em>sp</em></strong> 参数所属请求响应的 <strong><em>retcode</em></strong> 判断的，如下图：</p>
<p><img src="/2020/06/02/article-8/WX20200602-160244.png" alt></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>其实参数加密没什么难度，完善后续登陆操作需要对验证码识别做优化</p>
]]></content>
      <categories>
        <category>技术</category>
        <category>JS逆向</category>
      </categories>
      <tags>
        <tag>JS逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>JS逆向学习-某某快药登陆参数</title>
    <url>/2020/06/03/article-9/</url>
    <content><![CDATA[<p>aHR0cDovL3d3dy5kZGt5LmNvbS9wZXJDZW50ZXIuaHRtbD9kZGt5Y2FjaGU9OTJkODJmYmI2MjkxNWQ1MzU3OWQ1YTg3YzY1MTVjOTM</p>
<h3 id="分析请求"><a href="#分析请求" class="headerlink" title="分析请求"></a>分析请求</h3><p>先来看登陆操作，输入错误的用户名密码，查看请求</p>
<p><img src="/2020/06/03/article-9/WX20200603-155433.png" alt></p>
<p>发现登陆需要两个加密参数 <strong><em>sign</em></strong> 和 <strong><em>password</em></strong> ，经验丰富的已经发现是md5加密的了，因为有一个md5.js文件</p>
<p>继续查看该请求的initiator，有一个名为 <strong><em>“denglu”</em></strong> 的记录，定位该位置并查看</p>
<p><img src="/2020/06/03/article-9/WX20200603-160112.png" alt></p>
<p><img src="/2020/06/03/article-9/WX20200603-160158.png" alt></p>
<p>然后进行断点调试</p>
<p><img src="/2020/06/03/article-9/WX20200603-160809.png" alt></p>
<p>确定这里就是我们要找的东西，其中 <strong><em>passwod</em></strong> 通过 <strong><em>MD5</em></strong> 进行加密，<strong><em>getRequestURL</em></strong> 构建了登陆url，参数为固定字符串 <strong><em>“$$.urls.url_user”</em></strong> 和一个 <strong><em>s</em></strong> 对象</p>
<h3 id="逆向"><a href="#逆向" class="headerlink" title="逆向"></a>逆向</h3><p>和平常一样缺什么补什么，就不细讲了</p>
<h4 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> MD5 = <span class="function"><span class="keyword">function</span>(<span class="params">r</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params">r, n</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> r &lt;&lt; n | r &gt;&gt;&gt; <span class="number">32</span> - n</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">t</span>(<span class="params">r, n</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> t, o, e, u, f;</span><br><span class="line">        <span class="keyword">return</span> e = <span class="number">2147483648</span> &amp; r,</span><br><span class="line">            u = <span class="number">2147483648</span> &amp; n,</span><br><span class="line">            t = <span class="number">1073741824</span> &amp; r,</span><br><span class="line">            o = <span class="number">1073741824</span> &amp; n,</span><br><span class="line">            f = (<span class="number">1073741823</span> &amp; r) + (<span class="number">1073741823</span> &amp; n),</span><br><span class="line">            t &amp; o ? <span class="number">2147483648</span> ^ f ^ e ^ u : t | o ? <span class="number">1073741824</span> &amp; f ? <span class="number">3221225472</span> ^ f ^ e ^ u : <span class="number">1073741824</span> ^ f ^ e ^ u : f ^ e ^ u</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params">r, n, t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> r &amp; n | ~r &amp; t</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">e</span>(<span class="params">r, n, t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> r &amp; t | n &amp; ~t</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">u</span>(<span class="params">r, n, t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> r ^ n ^ t</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">r, n, t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> n ^ (r | ~t)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">r, e, u, f, i, a, c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> r = t(r, t(t(o(e, u, f), i), c)),</span><br><span class="line">            t(n(r, a), e)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">r, o, u, f, i, a, c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> r = t(r, t(t(e(o, u, f), i), c)),</span><br><span class="line">            t(n(r, a), o)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">r, o, e, f, i, a, c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> r = t(r, t(t(u(o, e, f), i), c)),</span><br><span class="line">            t(n(r, a), o)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">C</span>(<span class="params">r, o, e, u, i, a, c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> r = t(r, t(t(f(o, e, u), i), c)),</span><br><span class="line">            t(n(r, a), o)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">g</span>(<span class="params">r</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> n, t, o = <span class="string">""</span>, e = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> (t = <span class="number">0</span>; t &lt;= <span class="number">3</span>; t++)</span><br><span class="line">            n = r &gt;&gt;&gt; <span class="number">8</span> * t &amp; <span class="number">255</span>,</span><br><span class="line">                e = <span class="string">"0"</span> + n.toString(<span class="number">16</span>),</span><br><span class="line">                o += e.substr(e.length - <span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> o</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> h, d, v, S, m, l, A, p, s, y = <span class="built_in">Array</span>();</span><br><span class="line">    <span class="keyword">for</span> (r = <span class="function"><span class="keyword">function</span>(<span class="params">r</span>) </span>&#123;</span><br><span class="line">        r = r.replace(<span class="regexp">/\r\n/g</span>, <span class="string">"\n"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="string">""</span>, t = <span class="number">0</span>; t &lt; r.length; t++) &#123;</span><br><span class="line">            <span class="keyword">var</span> o = r.charCodeAt(t);</span><br><span class="line">            o &lt; <span class="number">128</span> ? n += <span class="built_in">String</span>.fromCharCode(o) : o &gt; <span class="number">127</span> &amp;&amp; o &lt; <span class="number">2048</span> ? (n += <span class="built_in">String</span>.fromCharCode(o &gt;&gt; <span class="number">6</span> | <span class="number">192</span>),</span><br><span class="line">                n += <span class="built_in">String</span>.fromCharCode(<span class="number">63</span> &amp; o | <span class="number">128</span>)) : (n += <span class="built_in">String</span>.fromCharCode(o &gt;&gt; <span class="number">12</span> | <span class="number">224</span>),</span><br><span class="line">                n += <span class="built_in">String</span>.fromCharCode(o &gt;&gt; <span class="number">6</span> &amp; <span class="number">63</span> | <span class="number">128</span>),</span><br><span class="line">                n += <span class="built_in">String</span>.fromCharCode(<span class="number">63</span> &amp; o | <span class="number">128</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line">    &#125;(r),</span><br><span class="line">             y = <span class="function"><span class="keyword">function</span>(<span class="params">r</span>) </span>&#123;</span><br><span class="line">                 <span class="keyword">for</span> (<span class="keyword">var</span> n, t = r.length, o = t + <span class="number">8</span>, e = (o - o % <span class="number">64</span>) / <span class="number">64</span>, u = <span class="number">16</span> * (e + <span class="number">1</span>), f = <span class="built_in">Array</span>(u - <span class="number">1</span>), i = <span class="number">0</span>, a = <span class="number">0</span>; a &lt; t; )</span><br><span class="line">                     n = (a - a % <span class="number">4</span>) / <span class="number">4</span>,</span><br><span class="line">                         i = a % <span class="number">4</span> * <span class="number">8</span>,</span><br><span class="line">                         f[n] = f[n] | r.charCodeAt(a) &lt;&lt; i,</span><br><span class="line">                         a++;</span><br><span class="line">                 <span class="keyword">return</span> n = (a - a % <span class="number">4</span>) / <span class="number">4</span>,</span><br><span class="line">                     i = a % <span class="number">4</span> * <span class="number">8</span>,</span><br><span class="line">                     f[n] = f[n] | <span class="number">128</span> &lt;&lt; i,</span><br><span class="line">                     f[u - <span class="number">2</span>] = t &lt;&lt; <span class="number">3</span>,</span><br><span class="line">                     f[u - <span class="number">1</span>] = t &gt;&gt;&gt; <span class="number">29</span>,</span><br><span class="line">                     f</span><br><span class="line">             &#125;(r),</span><br><span class="line">             l = <span class="number">1732584193</span>,</span><br><span class="line">             A = <span class="number">4023233417</span>,</span><br><span class="line">             p = <span class="number">2562383102</span>,</span><br><span class="line">             s = <span class="number">271733878</span>,</span><br><span class="line">             h = <span class="number">0</span>; h &lt; y.length; h += <span class="number">16</span>)</span><br><span class="line">        d = l,</span><br><span class="line">            v = A,</span><br><span class="line">            S = p,</span><br><span class="line">            m = s,</span><br><span class="line">            l = i(l, A, p, s, y[h + <span class="number">0</span>], <span class="number">7</span>, <span class="number">3614090360</span>),</span><br><span class="line">            s = i(s, l, A, p, y[h + <span class="number">1</span>], <span class="number">12</span>, <span class="number">3905402710</span>),</span><br><span class="line">            p = i(p, s, l, A, y[h + <span class="number">2</span>], <span class="number">17</span>, <span class="number">606105819</span>),</span><br><span class="line">            A = i(A, p, s, l, y[h + <span class="number">3</span>], <span class="number">22</span>, <span class="number">3250441966</span>),</span><br><span class="line">            l = i(l, A, p, s, y[h + <span class="number">4</span>], <span class="number">7</span>, <span class="number">4118548399</span>),</span><br><span class="line">            s = i(s, l, A, p, y[h + <span class="number">5</span>], <span class="number">12</span>, <span class="number">1200080426</span>),</span><br><span class="line">            p = i(p, s, l, A, y[h + <span class="number">6</span>], <span class="number">17</span>, <span class="number">2821735955</span>),</span><br><span class="line">            A = i(A, p, s, l, y[h + <span class="number">7</span>], <span class="number">22</span>, <span class="number">4249261313</span>),</span><br><span class="line">            l = i(l, A, p, s, y[h + <span class="number">8</span>], <span class="number">7</span>, <span class="number">1770035416</span>),</span><br><span class="line">            s = i(s, l, A, p, y[h + <span class="number">9</span>], <span class="number">12</span>, <span class="number">2336552879</span>),</span><br><span class="line">            p = i(p, s, l, A, y[h + <span class="number">10</span>], <span class="number">17</span>, <span class="number">4294925233</span>),</span><br><span class="line">            A = i(A, p, s, l, y[h + <span class="number">11</span>], <span class="number">22</span>, <span class="number">2304563134</span>),</span><br><span class="line">            l = i(l, A, p, s, y[h + <span class="number">12</span>], <span class="number">7</span>, <span class="number">1804603682</span>),</span><br><span class="line">            s = i(s, l, A, p, y[h + <span class="number">13</span>], <span class="number">12</span>, <span class="number">4254626195</span>),</span><br><span class="line">            p = i(p, s, l, A, y[h + <span class="number">14</span>], <span class="number">17</span>, <span class="number">2792965006</span>),</span><br><span class="line">            A = i(A, p, s, l, y[h + <span class="number">15</span>], <span class="number">22</span>, <span class="number">1236535329</span>),</span><br><span class="line">            l = a(l, A, p, s, y[h + <span class="number">1</span>], <span class="number">5</span>, <span class="number">4129170786</span>),</span><br><span class="line">            s = a(s, l, A, p, y[h + <span class="number">6</span>], <span class="number">9</span>, <span class="number">3225465664</span>),</span><br><span class="line">            p = a(p, s, l, A, y[h + <span class="number">11</span>], <span class="number">14</span>, <span class="number">643717713</span>),</span><br><span class="line">            A = a(A, p, s, l, y[h + <span class="number">0</span>], <span class="number">20</span>, <span class="number">3921069994</span>),</span><br><span class="line">            l = a(l, A, p, s, y[h + <span class="number">5</span>], <span class="number">5</span>, <span class="number">3593408605</span>),</span><br><span class="line">            s = a(s, l, A, p, y[h + <span class="number">10</span>], <span class="number">9</span>, <span class="number">38016083</span>),</span><br><span class="line">            p = a(p, s, l, A, y[h + <span class="number">15</span>], <span class="number">14</span>, <span class="number">3634488961</span>),</span><br><span class="line">            A = a(A, p, s, l, y[h + <span class="number">4</span>], <span class="number">20</span>, <span class="number">3889429448</span>),</span><br><span class="line">            l = a(l, A, p, s, y[h + <span class="number">9</span>], <span class="number">5</span>, <span class="number">568446438</span>),</span><br><span class="line">            s = a(s, l, A, p, y[h + <span class="number">14</span>], <span class="number">9</span>, <span class="number">3275163606</span>),</span><br><span class="line">            p = a(p, s, l, A, y[h + <span class="number">3</span>], <span class="number">14</span>, <span class="number">4107603335</span>),</span><br><span class="line">            A = a(A, p, s, l, y[h + <span class="number">8</span>], <span class="number">20</span>, <span class="number">1163531501</span>),</span><br><span class="line">            l = a(l, A, p, s, y[h + <span class="number">13</span>], <span class="number">5</span>, <span class="number">2850285829</span>),</span><br><span class="line">            s = a(s, l, A, p, y[h + <span class="number">2</span>], <span class="number">9</span>, <span class="number">4243563512</span>),</span><br><span class="line">            p = a(p, s, l, A, y[h + <span class="number">7</span>], <span class="number">14</span>, <span class="number">1735328473</span>),</span><br><span class="line">            A = a(A, p, s, l, y[h + <span class="number">12</span>], <span class="number">20</span>, <span class="number">2368359562</span>),</span><br><span class="line">            l = c(l, A, p, s, y[h + <span class="number">5</span>], <span class="number">4</span>, <span class="number">4294588738</span>),</span><br><span class="line">            s = c(s, l, A, p, y[h + <span class="number">8</span>], <span class="number">11</span>, <span class="number">2272392833</span>),</span><br><span class="line">            p = c(p, s, l, A, y[h + <span class="number">11</span>], <span class="number">16</span>, <span class="number">1839030562</span>),</span><br><span class="line">            A = c(A, p, s, l, y[h + <span class="number">14</span>], <span class="number">23</span>, <span class="number">4259657740</span>),</span><br><span class="line">            l = c(l, A, p, s, y[h + <span class="number">1</span>], <span class="number">4</span>, <span class="number">2763975236</span>),</span><br><span class="line">            s = c(s, l, A, p, y[h + <span class="number">4</span>], <span class="number">11</span>, <span class="number">1272893353</span>),</span><br><span class="line">            p = c(p, s, l, A, y[h + <span class="number">7</span>], <span class="number">16</span>, <span class="number">4139469664</span>),</span><br><span class="line">            A = c(A, p, s, l, y[h + <span class="number">10</span>], <span class="number">23</span>, <span class="number">3200236656</span>),</span><br><span class="line">            l = c(l, A, p, s, y[h + <span class="number">13</span>], <span class="number">4</span>, <span class="number">681279174</span>),</span><br><span class="line">            s = c(s, l, A, p, y[h + <span class="number">0</span>], <span class="number">11</span>, <span class="number">3936430074</span>),</span><br><span class="line">            p = c(p, s, l, A, y[h + <span class="number">3</span>], <span class="number">16</span>, <span class="number">3572445317</span>),</span><br><span class="line">            A = c(A, p, s, l, y[h + <span class="number">6</span>], <span class="number">23</span>, <span class="number">76029189</span>),</span><br><span class="line">            l = c(l, A, p, s, y[h + <span class="number">9</span>], <span class="number">4</span>, <span class="number">3654602809</span>),</span><br><span class="line">            s = c(s, l, A, p, y[h + <span class="number">12</span>], <span class="number">11</span>, <span class="number">3873151461</span>),</span><br><span class="line">            p = c(p, s, l, A, y[h + <span class="number">15</span>], <span class="number">16</span>, <span class="number">530742520</span>),</span><br><span class="line">            A = c(A, p, s, l, y[h + <span class="number">2</span>], <span class="number">23</span>, <span class="number">3299628645</span>),</span><br><span class="line">            l = C(l, A, p, s, y[h + <span class="number">0</span>], <span class="number">6</span>, <span class="number">4096336452</span>),</span><br><span class="line">            s = C(s, l, A, p, y[h + <span class="number">7</span>], <span class="number">10</span>, <span class="number">1126891415</span>),</span><br><span class="line">            p = C(p, s, l, A, y[h + <span class="number">14</span>], <span class="number">15</span>, <span class="number">2878612391</span>),</span><br><span class="line">            A = C(A, p, s, l, y[h + <span class="number">5</span>], <span class="number">21</span>, <span class="number">4237533241</span>),</span><br><span class="line">            l = C(l, A, p, s, y[h + <span class="number">12</span>], <span class="number">6</span>, <span class="number">1700485571</span>),</span><br><span class="line">            s = C(s, l, A, p, y[h + <span class="number">3</span>], <span class="number">10</span>, <span class="number">2399980690</span>),</span><br><span class="line">            p = C(p, s, l, A, y[h + <span class="number">10</span>], <span class="number">15</span>, <span class="number">4293915773</span>),</span><br><span class="line">            A = C(A, p, s, l, y[h + <span class="number">1</span>], <span class="number">21</span>, <span class="number">2240044497</span>),</span><br><span class="line">            l = C(l, A, p, s, y[h + <span class="number">8</span>], <span class="number">6</span>, <span class="number">1873313359</span>),</span><br><span class="line">            s = C(s, l, A, p, y[h + <span class="number">15</span>], <span class="number">10</span>, <span class="number">4264355552</span>),</span><br><span class="line">            p = C(p, s, l, A, y[h + <span class="number">6</span>], <span class="number">15</span>, <span class="number">2734768916</span>),</span><br><span class="line">            A = C(A, p, s, l, y[h + <span class="number">13</span>], <span class="number">21</span>, <span class="number">1309151649</span>),</span><br><span class="line">            l = C(l, A, p, s, y[h + <span class="number">4</span>], <span class="number">6</span>, <span class="number">4149444226</span>),</span><br><span class="line">            s = C(s, l, A, p, y[h + <span class="number">11</span>], <span class="number">10</span>, <span class="number">3174756917</span>),</span><br><span class="line">            p = C(p, s, l, A, y[h + <span class="number">2</span>], <span class="number">15</span>, <span class="number">718787259</span>),</span><br><span class="line">            A = C(A, p, s, l, y[h + <span class="number">9</span>], <span class="number">21</span>, <span class="number">3951481745</span>),</span><br><span class="line">            l = t(l, d),</span><br><span class="line">            A = t(A, v),</span><br><span class="line">            p = t(p, S),</span><br><span class="line">            s = t(s, m);</span><br><span class="line">    <span class="keyword">return</span> (g(l) + g(A) + g(p) + g(s)).toUpperCase()</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> DMap = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.data = &#123;&#125;,</span><br><span class="line">        <span class="keyword">this</span>.len = <span class="number">0</span>,</span><br><span class="line">        <span class="keyword">this</span>.size = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.len</span><br><span class="line">        &#125;</span><br><span class="line">        ,</span><br><span class="line">        <span class="keyword">this</span>.isEmpty = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.len &lt; <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        ,</span><br><span class="line">        <span class="keyword">this</span>.clear = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.data = &#123;&#125;,</span><br><span class="line">                <span class="keyword">this</span>.len = <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        ,</span><br><span class="line">        <span class="keyword">this</span>.put = <span class="function"><span class="keyword">function</span>(<span class="params">e, t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.data[e] = <span class="keyword">void</span> <span class="number">0</span> == t || <span class="string">"null"</span> == t || <span class="string">""</span> == t ? <span class="string">""</span> : t,</span><br><span class="line">                <span class="keyword">this</span>.len++</span><br><span class="line">        &#125;</span><br><span class="line">        ,</span><br><span class="line">        <span class="keyword">this</span>.remove = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.data[e] = <span class="literal">null</span>,</span><br><span class="line">                <span class="keyword">this</span>.len--,</span><br><span class="line">                !<span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        ,</span><br><span class="line">        <span class="keyword">this</span>.get = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.data[e]</span><br><span class="line">        &#125;</span><br><span class="line">        ,</span><br><span class="line">        <span class="keyword">this</span>.containsKey = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> !!<span class="keyword">this</span>.data[e]</span><br><span class="line">        &#125;</span><br><span class="line">        ,</span><br><span class="line">        <span class="keyword">this</span>.containsValue = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> t <span class="keyword">in</span> <span class="keyword">this</span>.data)</span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">this</span>.data[t] == e)</span><br><span class="line">                        <span class="keyword">return</span> !<span class="number">0</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                <span class="keyword">return</span> !<span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> !<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        ,</span><br><span class="line">        <span class="keyword">this</span>.values = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> e = <span class="keyword">new</span> <span class="built_in">Array</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> t <span class="keyword">in</span> <span class="keyword">this</span>.data)</span><br><span class="line">                e.push(<span class="keyword">this</span>.data[t]);</span><br><span class="line">            <span class="keyword">return</span> e</span><br><span class="line">        &#125;</span><br><span class="line">        ,</span><br><span class="line">        <span class="keyword">this</span>.keys = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> e = <span class="keyword">new</span> <span class="built_in">Array</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> t <span class="keyword">in</span> <span class="keyword">this</span>.data)</span><br><span class="line">                e.push(t);</span><br><span class="line">            <span class="keyword">return</span> e</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> getRequestURL = <span class="function"><span class="keyword">function</span>(<span class="params">e, t, i</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i &amp;&amp; <span class="number">1</span> == i)</span><br><span class="line">        <span class="keyword">var</span> r = <span class="string">"V8E26BD7FN76D08C349A43D6D3M51A1B"</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">var</span> r = <span class="string">"6C57AB91A1308E26B797F4CD382AC79D"</span>;</span><br><span class="line">    _this = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="keyword">new</span> <span class="built_in">Date</span></span><br><span class="line">        , n = s.getFullYear()</span><br><span class="line">        , o = s.getMonth() + <span class="number">1</span></span><br><span class="line">        , a = s.getDate()</span><br><span class="line">        , c = s.getHours()</span><br><span class="line">        , h = s.getMinutes()</span><br><span class="line">        , d = s.getSeconds()</span><br><span class="line">        , u = n + <span class="string">"-"</span> + o + <span class="string">"-"</span> + a + <span class="string">" "</span> + c + <span class="string">":"</span> + h + <span class="string">":"</span> + d;</span><br><span class="line">    t.put(<span class="string">"t"</span>, u),</span><br><span class="line">        t.put(<span class="string">"v"</span>, <span class="string">"1.0"</span>),</span><br><span class="line">    t.containsKey(<span class="string">"versionName"</span>) || t.put(<span class="string">"versionName"</span>, <span class="string">"4.6.0"</span>),</span><br><span class="line">        t.put(<span class="string">"plat"</span>, <span class="string">"H5"</span>),</span><br><span class="line">        t.put(<span class="string">"platform"</span>, <span class="string">"H5"</span>);</span><br><span class="line">    <span class="comment">//     !t.containsKey("userId") || t.containsKey("loginToken") || t.containsKey("uDate") ? t.containsKey("userId") || _this.getUserId() &amp;&amp; (t.put("loginToken", _this.getLoginToken()),</span></span><br><span class="line">    <span class="comment">//         t.put("uDate", _this.getUDate()),</span></span><br><span class="line">    <span class="comment">//         t.put("userId", _this.getUserId())) : (t.put("loginToken", _this.getLoginToken()),</span></span><br><span class="line">    <span class="comment">//         t.put("uDate", _this.getUDate()));</span></span><br><span class="line">    <span class="keyword">var</span> l = t.keys().sort()</span><br><span class="line">        , p = <span class="string">""</span>;</span><br><span class="line">    l.length;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> g <span class="keyword">in</span> l) &#123;</span><br><span class="line">        <span class="keyword">var</span> m = l[g];</span><br><span class="line">        p += m + t.get(m)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> f = t.get(<span class="string">"method"</span>) + p + r, y = MD5(f), v = e + <span class="string">"?sign="</span> + y, k = <span class="number">0</span>; k &lt; l.length; k++)</span><br><span class="line">        (t.get(l[k]) + <span class="string">""</span>).indexOf(<span class="string">"+"</span>) &gt;= <span class="number">0</span> || <span class="number">-1</span> != (t.get(l[k]) + <span class="string">""</span>).indexOf(<span class="string">"&amp;"</span>) ? v += <span class="string">"&amp;"</span> + l[k] + <span class="string">"="</span> + <span class="built_in">encodeURIComponent</span>(t.get(l[k])) : <span class="string">"pageUrl"</span> == l[k] ? v += <span class="string">"&amp;"</span> + l[k] + <span class="string">"="</span> + <span class="built_in">encodeURIComponent</span>(t.get(l[k])) : v += <span class="string">"&amp;"</span> + l[k] + <span class="string">"="</span> + t.get(l[k]);</span><br><span class="line">    <span class="keyword">return</span> v</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> codes = [<span class="string">"010101,010104"</span>, <span class="string">"010502,010503,010504,010505,010506,010507"</span>, <span class="string">"010401,010402,010403,010404,010406,010407"</span>, <span class="string">"010801,010802,010803,010804,010901,010902,010807"</span>, <span class="string">"011303,010609"</span>, <span class="string">"011501,011502,011503,011504,011505,010301,010302,0…,010706,010707,010709,010710,010711,011101,011106"</span>, <span class="string">"020101,020103,020105,020201,020202,020203"</span>, <span class="string">"020403,020404,020406,020409,020414"</span>, <span class="string">"030101,030102,030103,030107,030108,030109,030110,030111,030113"</span>, <span class="string">"030201,030202,030204"</span>, <span class="string">"040101,040501,040502,040404,040201,040204"</span>, <span class="string">"060901,061103,060603,060604,060607,060609,060610,0…,060804,060805,060402,060403,060201,060701,060702"</span>, <span class="string">"060104"</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">denglu</span>(<span class="params">username, password</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> e = username</span><br><span class="line">    <span class="keyword">var</span> s = <span class="keyword">new</span> DMap;</span><br><span class="line">    <span class="keyword">var</span> url_user = <span class="string">"http://wxapi.ddky.com/user/rest.htm"</span></span><br><span class="line">    s.put(<span class="string">"userName"</span>, e),</span><br><span class="line">        s.put(<span class="string">"password"</span>, MD5(password).toLowerCase()),</span><br><span class="line">        s.put(<span class="string">"method"</span>, <span class="string">"ddsy.user.reg.login"</span>);</span><br><span class="line">    <span class="keyword">var</span> a = getRequestURL(url_user, s);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadProduct</span>(<span class="params">index</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _url = <span class="number">1</span> ? <span class="string">'http://product.ddky.com/product/queryOrgcodeProductListForB2C.htm'</span> : <span class="string">'http://192.168.89.38/product/queryOrgcodeProductListForB2C.htm'</span>;</span><br><span class="line">    <span class="keyword">var</span> params = <span class="keyword">new</span> DMap();</span><br><span class="line">    params.put(<span class="string">'orgcode'</span>, codes[index]);</span><br><span class="line">    params.put(<span class="string">'orderTypeId'</span>, <span class="string">'0'</span>);</span><br><span class="line">    params.put(<span class="string">'shopId'</span>, <span class="string">"-1"</span>);</span><br><span class="line">    params.put(<span class="string">'pageNo'</span>, <span class="string">'1'</span>);</span><br><span class="line">    params.put(<span class="string">'pageSize'</span>, <span class="string">'100'</span>);</span><br><span class="line">    params.put(<span class="string">'otcMark'</span>, <span class="string">'1,2,99'</span>);</span><br><span class="line">    params.put(<span class="string">'method'</span>, <span class="string">'ddsy.product.query.orgcode.product.list.b2c'</span>);</span><br><span class="line">    params.put(<span class="string">'versionName'</span>, <span class="string">'3.2.0'</span>);</span><br><span class="line">    <span class="keyword">var</span> req = getRequestURL(_url, params);</span><br><span class="line">    <span class="keyword">return</span> req</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>真的没什么难度，只是需要注意不添加请求中的 <strong><em>callback</em></strong> 参数会直接返回可以使用JSON解析的数据格式。</p>
]]></content>
      <categories>
        <category>技术</category>
        <category>JS逆向</category>
      </categories>
      <tags>
        <tag>JS逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>JS逆向学习-某8登陆参数</title>
    <url>/2020/06/04/article-10/</url>
    <content><![CDATA[<p>aHR0cHM6Ly9wYXNzcG9ydC41OC5jb20vbG9naW4vP3BhdGg9aHR0cHMlM0EvL2Z6LjU4LmNvbS8mUEdUSUQ9MGQxMDAwMDAtMDAxMy0wMjk0LTFjZWItYjU3NTBiZDIwNmU5JkNsaWNrSUQ9Mg</p>
<h3 id="分析请求"><a href="#分析请求" class="headerlink" title="分析请求"></a>分析请求</h3><p><img src="/2020/06/04/article-10/WX20200604-142559.png" alt></p>
<p>登陆请求操作中需要对上述标记的四个参数进行分析</p>
<p>首先看 <strong><em>token</em></strong>，全局搜索一下发现是一个请求返回的</p>
<p><img src="/2020/06/04/article-10/WX20200604-142857.png" alt></p>
<p><img src="/2020/06/04/article-10/WX20200604-143121.png" alt></p>
<p>该请求的参数貌似是定值，再全局搜索，发现是登陆页返回的</p>
<p><img src="/2020/06/04/article-10/WX20200604-143415.png" alt></p>
<p>接下来定位 <strong><em>password</em></strong> ，继续全局搜索</p>
<p><img src="/2020/06/04/article-10/WX20200604-143742.png" alt></p>
<p>在这里打断点，然后进行调试，发现了加密位置</p>
<p><img src="/2020/06/04/article-10/WX20200604-143933.png" alt></p>
<p><img src="/2020/06/04/article-10/WX20200604-144158.png" alt></p>
<p>还需要两个参数，然后万能的全局查询安排</p>
<p><img src="/2020/06/04/article-10/WX20200604-144432.png" alt></p>
<p>好了，这个也搞定了，然后找其他的</p>
<p>全局搜索 <strong><em>fingerprint</em></strong> ，发现是在cookie中获取的</p>
<p><img src="/2020/06/04/article-10/WX20200604-165705.png" alt></p>
<p><img src="/2020/06/04/article-10/WX20200604-165848.png" alt></p>
<p>顺势定位 <strong><em>finger2</em></strong> 参数</p>
<p><img src="/2020/06/04/article-10/WX20200604-170312.png" alt></p>
<p><img src="/2020/06/04/article-10/WX20200604-170435.png" alt></p>
<p>这里就是指纹加密的地方</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>需要注意的是浏览器指纹信息的构建，但总体来说不难</p>
]]></content>
      <categories>
        <category>技术</category>
        <category>JS逆向</category>
      </categories>
      <tags>
        <tag>JS逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>JS逆向学习-某某之星登陆</title>
    <url>/2020/06/05/article-11/</url>
    <content><![CDATA[<p>aHR0cHM6Ly9ob3RlbC5iZXN0d2Vob3RlbC5jb20vTmV3TG9naW4vP2dvPWh0dHBzJTNBJTJGJTJGaG90ZWwuYmVzdHdlaG90ZWwuY29tJTJG</p>
<h3 id="分析请求"><a href="#分析请求" class="headerlink" title="分析请求"></a>分析请求</h3><p><img src="/2020/06/05/article-11/WX20200605-163518.png" alt></p>
<p>需要解决的是这两个参数</p>
<p>先来看 <strong><em>password</em></strong>， 通过全局搜索定位到如下位置</p>
<p><img src="/2020/06/05/article-11/WX20200605-164302.png" alt></p>
<p>追进去查看这个加密方法</p>
<p><img src="/2020/06/05/article-11/WX20200605-164501.png" alt></p>
<p>这里就是最终的aes加密方法</p>
<p>接下来重点看 <strong><em>black_box</em></strong>，全局搜索一下</p>
<p><img src="/2020/06/05/article-11/WX20200605-164713.png" alt></p>
<p>发现是通过 <strong><em>_fmOpt.getinfo()</em></strong> 获取的，再来看下 <strong><em>_fmOpt</em></strong> 定义位置</p>
<p><img src="/2020/06/05/article-11/WX20200605-165922.png" alt></p>
<p>我们找到了定义的位置，但是发现这并不是我们需要的结果，接下来我们直接在控制台输出这个函数</p>
<p><img src="/2020/06/05/article-11/WX20200605-170642.png" alt></p>
<p>最后发现这段函数是在一个文件中定义的，然后通过 <strong><em>reres</em></strong> 工具替换这个文件并打上断点便于调试</p>
<p><img src="/2020/06/05/article-11/WX20200605-171024.png" alt></p>
<p><img src="/2020/06/05/article-11/WX20200605-171115.png" alt></p>
<p>最后发现是对一个对象进行了base64操作，看下这个对象</p>
<p><img src="/2020/06/05/article-11/WX20200605-171319.png" alt></p>
<p>其中 <strong><em>it</em></strong> 是两个时间戳的差值，<strong><em>v</em></strong> 是版本信息，属于定值，<strong><em>t</em></strong>是浏览器信息</p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>注意 <strong><em>eval</em></strong> 和混淆代码的处理及调试</p>
]]></content>
      <categories>
        <category>技术</category>
        <category>JS逆向</category>
      </categories>
      <tags>
        <tag>JS逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>JS逆向学习-某某猫企业信息查询参数分析</title>
    <url>/2020/06/10/article-12/</url>
    <content><![CDATA[<p>aHR0cHM6Ly93d3cucWljaGFtYW8uY29tLw==</p>
<h3 id="分析请求"><a href="#分析请求" class="headerlink" title="分析请求"></a>分析请求</h3><p><img src="/2020/06/10/article-12/WX20200610-153511.png" alt></p>
<p>这个就是结果的响应页面，其中只有一个参数 <strong><em>mfccode</em></strong> ,全局搜索定位到了这里</p>
<p><img src="/2020/06/10/article-12/WX20200610-153913.png" alt></p>
<p>在这里打上断点，继续调试</p>
<p><img src="/2020/06/10/article-12/WX20200610-154318.png" alt></p>
<p>发现成功断上了，然后继续跟进调试</p>
<p><img src="/2020/06/10/article-12/WX20200610-154503.png" alt></p>
<p><strong><em>window.__qzmcf</em></strong> 是 <strong><em>dc</em></strong> 函数，另外是否发现标注的这个url很眼熟，我们回头看下第一张图片</p>
<p><img src="/2020/06/10/article-12/WX20200610-154839.png" alt></p>
<p>chrome无法显示内容，新建窗口打开看下</p>
<p><img src="/2020/06/10/article-12/WX20200610-155001.png" alt></p>
<p>格式化后查看</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">w</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!a) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> al = a.length,</span><br><span class="line">                ret = <span class="keyword">new</span> <span class="built_in">Array</span>(al),</span><br><span class="line">                i = <span class="number">0</span>,</span><br><span class="line">                j = i;</span><br><span class="line">            <span class="keyword">while</span> (al--) &#123;</span><br><span class="line">                ret[j++] = <span class="built_in">String</span>.fromCharCode(a[i++])</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> ret.join(<span class="string">''</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        ex = <span class="function"><span class="keyword">function</span> (<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (n <span class="keyword">in</span> y) &#123;</span><br><span class="line">                x[n] = y[n]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        ck = <span class="function"><span class="keyword">function</span> (<span class="params">sn</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> ac = w.document[s([<span class="number">99</span>, <span class="number">111</span>, <span class="number">111</span>, <span class="number">107</span>, <span class="number">105</span>, <span class="number">101</span>])].split(<span class="string">'; '</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; ac.length; i++) &#123;</span><br><span class="line">                <span class="keyword">var</span> aCrumb = ac[i].split(<span class="string">'='</span>);</span><br><span class="line">                <span class="keyword">if</span> (sn == aCrumb[<span class="number">0</span>]) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (aCrumb[<span class="number">1</span>] != <span class="literal">null</span> &amp;&amp; aCrumb[<span class="number">1</span>] != <span class="keyword">typeof</span> <span class="literal">undefined</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="built_in">unescape</span>(aCrumb[<span class="number">1</span>]);</span><br><span class="line">                    &#125;;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">typeof</span> <span class="literal">undefined</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        le = s([<span class="number">108</span>, <span class="number">101</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">116</span>, <span class="number">104</span>]),</span><br><span class="line">        pc = s([<span class="number">99</span>, <span class="number">104</span>, <span class="number">97</span>, <span class="number">114</span>, <span class="number">67</span>, <span class="number">111</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">65</span>, <span class="number">116</span>]),</span><br><span class="line">        id = ck(s([<span class="number">113</span>, <span class="number">122</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">119</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">46</span>, <span class="number">117</span>, <span class="number">105</span>, <span class="number">100</span>])),</span><br><span class="line">        mov = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> dyt1 = <span class="function"><span class="keyword">function</span> (<span class="params">d5, y4</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> d5 &gt;&gt; y4</span><br><span class="line">                &#125;,</span><br><span class="line">                kac5 = <span class="function"><span class="keyword">function</span> (<span class="params">k7, a4</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> k7 &lt;&lt; a4</span><br><span class="line">                &#125;,</span><br><span class="line">                vau2 = <span class="function"><span class="keyword">function</span> (<span class="params">v8, a6</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> v8 - a6</span><br><span class="line">                &#125;,</span><br><span class="line">                fwc3 = <span class="function"><span class="keyword">function</span> (<span class="params">f4, w0</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> f4 + w0</span><br><span class="line">                &#125;,</span><br><span class="line">                ymx2 = <span class="function"><span class="keyword">function</span> (<span class="params">y1, m8</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> y1 | m8</span><br><span class="line">                &#125;,</span><br><span class="line">                kdf8 = <span class="function"><span class="keyword">function</span> (<span class="params">k0, d0</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> k0 &amp; d0</span><br><span class="line">                &#125;,</span><br><span class="line">                moh1 = <span class="function"><span class="keyword">function</span> (<span class="params">m4, o2</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> m4 * o2</span><br><span class="line">                &#125;,</span><br><span class="line">                __x = <span class="number">178</span>;</span><br><span class="line">            <span class="keyword">return</span> kac5(fwc3(moh1(vau2(kac5(fwc3(ymx2(kac5(kdf8(vau2(vau2(kac5(kac5(fwc3(fwc3(kac5(kdf8(dyt1(kdf8(kac5(fwc3(kac5(moh1(dyt1(moh1(dyt1(fwc3(kac5(dyt1(fwc3(vau2(vau2(kac5(dyt1(kdf8(moh1(kdf8(moh1(kac5(moh1(dyt1(kac5(dyt1(kdf8(kdf8(fwc3(dyt1(ymx2(kdf8(ymx2(moh1(dyt1(kdf8(kac5(kac5(kac5(ymx2(kac5(kac5(kac5(kdf8(vau2(ymx2(kac5(kac5(dyt1(kac5(fwc3(fwc3(vau2(ymx2(kdf8(ymx2(kac5(kac5(vau2(dyt1(dyt1(kdf8(fwc3(moh1(ymx2(moh1(vau2(dyt1(moh1(vau2(moh1(kac5(fwc3(dyt1(vau2(kac5(ymx2(ymx2(ymx2(kac5(kdf8(moh1(moh1(dyt1(fwc3(fwc3(kdf8(dyt1(dyt1(kdf8(kac5(ymx2(kac5(ymx2(moh1(kac5(vau2(moh1(kac5(dyt1(kac5(fwc3(dyt1(dyt1(vau2(vau2(fwc3(kac5(moh1(fwc3(ymx2(kdf8(dyt1(kac5(dyt1(ymx2(dyt1(fwc3(dyt1(kdf8(dyt1(dyt1(kdf8(dyt1(kac5(fwc3(ymx2(kdf8(dyt1(kac5(vau2(ymx2(kac5(kdf8(vau2(vau2(kac5(dyt1(vau2(kdf8(ymx2(vau2(dyt1(ymx2(ymx2(dyt1(kac5(vau2(ymx2(fwc3(dyt1(fwc3(kdf8(fwc3(kac5(ymx2(kac5(vau2(moh1(dyt1(ymx2(moh1(vau2(dyt1(fwc3(kdf8(kac5(kac5(kdf8(ymx2(kac5(ymx2(dyt1(kdf8(kac5(moh1(dyt1(kdf8(vau2(ymx2(dyt1(ymx2(moh1(ymx2(kac5(dyt1(kdf8(ymx2(vau2(fwc3(kac5(kdf8(moh1(moh1(dyt1(dyt1(moh1(moh1(kdf8(dyt1(ymx2(kdf8(moh1(vau2(vau2(ymx2(vau2(kdf8(kac5(moh1(kdf8(kac5(kdf8(dyt1(kac5(ymx2(ymx2(dyt1(dyt1(fwc3(vau2(vau2(moh1(kdf8(dyt1(kdf8(kdf8(fwc3(vau2(kac5(ymx2(vau2(fwc3(moh1(fwc3(moh1(moh1(ymx2(kac5(kac5(dyt1(kac5(kac5(dyt1(dyt1(kac5(kac5(dyt1(ymx2(dyt1(dyt1(ymx2(moh1(vau2(moh1(ymx2(ymx2(fwc3(vau2(fwc3(moh1(dyt1(fwc3(kac5(moh1(kac5(vau2(moh1(kac5(kac5(kac5(moh1(vau2(vau2(vau2(dyt1(ymx2(kac5(moh1(vau2(ymx2(dyt1(ymx2(moh1(dyt1(ymx2(kdf8(vau2(kdf8(kdf8(fwc3(kdf8(dyt1(moh1(kdf8(moh1(fwc3(vau2(dyt1(dyt1(ymx2(moh1(moh1(moh1(kdf8(moh1(fwc3(kac5(fwc3(ymx2(moh1(moh1(kac5(dyt1(vau2(vau2(kac5(ymx2(moh1(dyt1(fwc3(kdf8(moh1(ymx2(kdf8(ymx2(kac5(kdf8(ymx2(moh1(moh1(kac5(ymx2(vau2(moh1(vau2(kdf8(moh1(moh1(vau2(vau2(kdf8(ymx2(dyt1(dyt1(dyt1(ymx2(fwc3(dyt1(vau2(dyt1(fwc3(moh1(ymx2(dyt1(fwc3(fwc3(kdf8(fwc3(vau2(fwc3(dyt1(ymx2(fwc3(moh1(moh1(ymx2(ymx2(dyt1(vau2(kdf8(vau2(kdf8(kac5(dyt1(dyt1(ymx2(dyt1(ymx2(kac5(fwc3(dyt1(kac5(vau2(vau2(fwc3(vau2(kdf8(kdf8(ymx2(kac5(kdf8(vau2(ymx2(kdf8(vau2(kac5(ymx2(vau2(vau2(vau2(kdf8(dyt1(kdf8(kdf8(moh1(vau2(ymx2(fwc3(moh1(fwc3(vau2(ymx2(vau2(fwc3(moh1(fwc3(kdf8(moh1(vau2(moh1(dyt1(kdf8(vau2(dyt1(kac5(moh1(fwc3(kdf8(vau2(kdf8(fwc3(kac5(ymx2(kac5(dyt1(kdf8(moh1(ymx2(dyt1(kac5(ymx2(moh1(dyt1(vau2(vau2(vau2(kdf8(moh1(fwc3(ymx2(kdf8(moh1(vau2(vau2(kac5(moh1(ymx2(kac5(dyt1(moh1(fwc3(kac5(ymx2(vau2(dyt1(fwc3(vau2(kdf8(fwc3(dyt1(fwc3(dyt1(ymx2(kdf8(moh1(vau2(ymx2(dyt1(fwc3(ymx2(moh1(kdf8(ymx2(vau2(ymx2(dyt1(dyt1(vau2(kdf8(kac5(ymx2(kac5(kdf8(fwc3(__x, <span class="number">1406</span>), <span class="number">21212</span>), <span class="number">1</span>), <span class="number">1185</span>), <span class="number">2</span>), <span class="number">42417</span>), <span class="number">1564</span>), <span class="number">3</span>), <span class="number">2</span>), <span class="number">1683</span>), <span class="number">1406</span>), <span class="number">3335</span>), <span class="number">21459</span>), <span class="number">3</span>), <span class="number">3846</span>), <span class="number">598</span>), <span class="number">4</span>), <span class="number">882</span>), <span class="number">-102</span>), <span class="number">1</span>), <span class="number">55540</span>), <span class="number">2275</span>), <span class="number">2</span>), <span class="number">153</span>), <span class="number">2</span>), <span class="number">-3991</span>), <span class="number">61019</span>), <span class="number">-258</span>), <span class="number">-3883</span>), <span class="number">1</span>), <span class="number">3411</span>), <span class="number">1614</span>), <span class="number">1</span>), <span class="number">-1238</span>), <span class="number">2</span>), <span class="number">4</span>), <span class="number">3</span>), <span class="number">1895</span>), <span class="number">1</span>), <span class="number">2</span>), <span class="number">-643</span>), <span class="number">-2185</span>), <span class="number">1</span>), <span class="number">42090</span>), <span class="number">1191</span>), <span class="number">-2914</span>), <span class="number">4</span>), <span class="number">58000</span>), <span class="number">-1195</span>), <span class="number">-1979</span>), <span class="number">2367</span>), <span class="number">1</span>), <span class="number">1</span>), <span class="number">710</span>), <span class="number">4</span>), <span class="number">1</span>), <span class="number">951</span>), <span class="number">3</span>), <span class="number">27051</span>), <span class="number">1</span>), <span class="number">2</span>), <span class="number">3079</span>), <span class="number">2</span>), <span class="number">948</span>), <span class="number">47143</span>), <span class="number">898</span>), <span class="number">10855</span>), <span class="number">-1182</span>), <span class="number">1</span>), <span class="number">3</span>), <span class="number">3</span>), <span class="number">2618</span>), <span class="number">4782</span>), <span class="number">3</span>), <span class="number">1</span>), <span class="number">2922</span>), <span class="number">1</span>), <span class="number">53151</span>), <span class="number">2494</span>), <span class="number">3</span>), <span class="number">4017</span>), <span class="number">1211</span>), <span class="number">3693</span>), <span class="number">389</span>), <span class="number">592</span>), <span class="number">3</span>), <span class="number">2065</span>), <span class="number">3200</span>), <span class="number">3039</span>), <span class="number">2</span>), <span class="number">21493</span>), <span class="number">49244</span>), <span class="number">2</span>), <span class="number">51499</span>), <span class="number">-1454</span>), <span class="number">-3464</span>), <span class="number">1221</span>), <span class="number">2217</span>), <span class="number">3</span>), <span class="number">2815</span>), <span class="number">61805</span>), <span class="number">1372</span>), <span class="number">-156</span>), <span class="number">10772</span>), <span class="number">1</span>), <span class="number">1128</span>), <span class="number">39679</span>), <span class="number">53694</span>), <span class="number">328</span>), <span class="number">-1620</span>), <span class="number">-282</span>), <span class="number">1944</span>), <span class="number">4</span>), <span class="number">2</span>), <span class="number">-2659</span>), <span class="number">3</span>), <span class="number">842</span>), <span class="number">4</span>), <span class="number">2030</span>), <span class="number">1</span>), <span class="number">3</span>), <span class="number">1</span>), <span class="number">5956</span>), <span class="number">690</span>), <span class="number">55923</span>), <span class="number">2700</span>), <span class="number">4</span>), <span class="number">1440</span>), <span class="number">3897</span>), <span class="number">2</span>), <span class="number">2</span>), <span class="number">-2604</span>), <span class="number">407</span>), <span class="number">3</span>), <span class="number">3520</span>), <span class="number">2257</span>), <span class="number">-3658</span>), <span class="number">35189</span>), <span class="number">-3268</span>), <span class="number">-1766</span>), <span class="number">4</span>), <span class="number">1245</span>), <span class="number">3</span>), <span class="number">2606</span>), <span class="number">1</span>), <span class="number">1221</span>), <span class="number">1</span>), <span class="number">-2134</span>), <span class="number">1145</span>), <span class="number">3</span>), <span class="number">3</span>), <span class="number">4</span>), <span class="number">2166</span>), <span class="number">32254</span>), <span class="number">-2529</span>), <span class="number">440</span>), <span class="number">3</span>), <span class="number">1</span>), <span class="number">50152</span>), <span class="number">-3151</span>), <span class="number">3</span>), <span class="number">2917</span>), <span class="number">2408</span>), <span class="number">1</span>), <span class="number">2</span>), <span class="number">4</span>), <span class="number">1589</span>), <span class="number">59244</span>), <span class="number">3</span>), <span class="number">1810</span>), <span class="number">40854</span>), <span class="number">1269</span>), <span class="number">3</span>), <span class="number">52930</span>), <span class="number">-3553</span>), <span class="number">4</span>), <span class="number">2</span>), <span class="number">3255</span>), <span class="number">3</span>), <span class="number">-3498</span>), <span class="number">1891</span>), <span class="number">3</span>), <span class="number">2</span>), <span class="number">3</span>), <span class="number">1</span>), <span class="number">372</span>), <span class="number">3071</span>), <span class="number">2</span>), <span class="number">3572</span>), <span class="number">1</span>), <span class="number">34481</span>), <span class="number">4</span>), <span class="number">4</span>), <span class="number">1</span>), <span class="number">282</span>), <span class="number">3</span>), <span class="number">3</span>), <span class="number">-3580</span>), <span class="number">-3905</span>), <span class="number">3</span>), <span class="number">13000</span>), <span class="number">4</span>), <span class="number">2</span>), <span class="number">8826</span>), <span class="number">-1575</span>), <span class="number">33443</span>), <span class="number">15121</span>), <span class="number">1749</span>), <span class="number">41336</span>), <span class="number">1515</span>), <span class="number">3</span>), <span class="number">4</span>), <span class="number">3580</span>), <span class="number">3</span>), <span class="number">1248</span>), <span class="number">-3954</span>), <span class="number">2</span>), <span class="number">3</span>), <span class="number">4076</span>), <span class="number">2</span>), <span class="number">2384</span>), <span class="number">-1252</span>), <span class="number">-4046</span>), <span class="number">2</span>), <span class="number">2</span>), <span class="number">2</span>), <span class="number">3</span>), <span class="number">4</span>), <span class="number">4054</span>), <span class="number">3</span>), <span class="number">1</span>), <span class="number">4</span>), <span class="number">1826</span>), <span class="number">2</span>), <span class="number">3</span>), <span class="number">2031</span>), <span class="number">-2693</span>), <span class="number">2272</span>), <span class="number">2468</span>), <span class="number">2450</span>), <span class="number">1</span>), <span class="number">-2497</span>), <span class="number">4</span>), <span class="number">1686</span>), <span class="number">2</span>), <span class="number">3</span>), <span class="number">3539</span>), <span class="number">1</span>), <span class="number">2</span>), <span class="number">3</span>), <span class="number">3</span>), <span class="number">4</span>), <span class="number">3</span>), <span class="number">1</span>), <span class="number">1</span>), <span class="number">3</span>), <span class="number">4</span>), <span class="number">3016</span>), <span class="number">1</span>), <span class="number">1</span>), <span class="number">-3156</span>), <span class="number">3</span>), <span class="number">18</span>), <span class="number">-1557</span>), <span class="number">432</span>), <span class="number">1</span>), <span class="number">-3388</span>), <span class="number">-2011</span>), <span class="number">34081</span>), <span class="number">26569</span>), <span class="number">2</span>), <span class="number">21141</span>), <span class="number">4</span>), <span class="number">1925</span>), <span class="number">2762</span>), <span class="number">-2549</span>), <span class="number">1</span>), <span class="number">2</span>), <span class="number">3628</span>), <span class="number">3597</span>), <span class="number">1</span>), <span class="number">2</span>), <span class="number">14065</span>), <span class="number">2</span>), <span class="number">32077</span>), <span class="number">2</span>), <span class="number">3</span>), <span class="number">39399</span>), <span class="number">1187</span>), <span class="number">1204</span>), <span class="number">-544</span>), <span class="number">2278</span>), <span class="number">1</span>), <span class="number">13726</span>), <span class="number">2747</span>), <span class="number">4</span>), <span class="number">62605</span>), <span class="number">2</span>), <span class="number">2</span>), <span class="number">4</span>), <span class="number">4</span>), <span class="number">3</span>), <span class="number">3</span>), <span class="number">64237</span>), <span class="number">4</span>), <span class="number">-3653</span>), <span class="number">-392</span>), <span class="number">3980</span>), <span class="number">52493</span>), <span class="number">3</span>), <span class="number">1</span>), <span class="number">804</span>), <span class="number">1</span>), <span class="number">1901</span>), <span class="number">2</span>), <span class="number">3674</span>), <span class="number">3154</span>), <span class="number">22167</span>), <span class="number">2</span>), <span class="number">1</span>), <span class="number">4</span>), <span class="number">46515</span>), <span class="number">3</span>), <span class="number">1549</span>), <span class="number">4</span>), <span class="number">755</span>), <span class="number">59834</span>), <span class="number">1</span>), <span class="number">4</span>), <span class="number">58435</span>), <span class="number">-989</span>), <span class="number">1</span>), <span class="number">-2055</span>), <span class="number">2</span>), <span class="number">1473</span>), <span class="number">2</span>), <span class="number">2</span>), <span class="number">1029</span>), <span class="number">4</span>), <span class="number">1786</span>), <span class="number">2</span>), <span class="number">385</span>), <span class="number">36470</span>), <span class="number">-2102</span>), <span class="number">3</span>), <span class="number">1551</span>), <span class="number">4048</span>), <span class="number">-4024</span>), <span class="number">4</span>), <span class="number">2</span>), <span class="number">1481</span>), <span class="number">347</span>), <span class="number">1</span>), <span class="number">-95</span>), <span class="number">3041</span>), <span class="number">22582</span>), <span class="number">-894</span>), <span class="number">3</span>), <span class="number">4</span>), <span class="number">1858</span>), <span class="number">1310</span>), <span class="number">5151</span>), <span class="number">4</span>), <span class="number">3819</span>), <span class="number">-2540</span>), <span class="number">3</span>), <span class="number">2</span>), <span class="number">5996</span>), <span class="number">500</span>), <span class="number">85</span>), <span class="number">3</span>), <span class="number">4</span>), <span class="number">47445</span>), <span class="number">2</span>), <span class="number">2</span>), <span class="number">31521</span>), <span class="number">3</span>), <span class="number">3587</span>), <span class="number">3</span>), <span class="number">3026</span>), <span class="number">2</span>), <span class="number">3</span>), <span class="number">1</span>), <span class="number">52848</span>), <span class="number">2189</span>), <span class="number">-2227</span>), <span class="number">4</span>), <span class="number">3</span>), <span class="number">-4016</span>), <span class="number">861</span>), <span class="number">-852</span>), <span class="number">3</span>), <span class="number">4</span>), <span class="number">2789</span>), <span class="number">4</span>), <span class="number">4</span>), <span class="number">2</span>), <span class="number">1</span>), <span class="number">-3959</span>), <span class="number">3</span>), <span class="number">3</span>), <span class="number">3902</span>), <span class="number">2</span>), <span class="number">3190</span>), <span class="number">2</span>), <span class="number">34242</span>), <span class="number">1</span>), <span class="number">1</span>), <span class="number">43598</span>), <span class="number">808</span>), <span class="number">3359</span>), <span class="number">3</span>), <span class="number">1</span>), <span class="number">3</span>), <span class="number">27918</span>), <span class="number">1</span>), <span class="number">2346</span>), <span class="number">2327</span>), <span class="number">2272</span>), <span class="number">4</span>), <span class="number">-1725</span>), <span class="number">4</span>), <span class="number">-3771</span>), <span class="number">1</span>), <span class="number">4</span>), <span class="number">812</span>), <span class="number">4</span>), <span class="number">1</span>), <span class="number">3909</span>), <span class="number">1</span>), <span class="number">425</span>), <span class="number">4</span>), <span class="number">1680</span>), <span class="number">62779</span>), <span class="number">4</span>), <span class="number">2</span>), <span class="number">-3592</span>), <span class="number">4</span>), <span class="number">3</span>), <span class="number">3840</span>), <span class="number">43141</span>), <span class="number">3825</span>), <span class="number">2051</span>), <span class="number">3021</span>), <span class="number">864</span>), <span class="number">3</span>), <span class="number">2</span>), <span class="number">1</span>), <span class="number">3</span>), <span class="number">1578</span>), <span class="number">-222</span>), <span class="number">62225</span>), <span class="number">4</span>), <span class="number">4</span>), <span class="number">3</span>), <span class="number">2247</span>), <span class="number">1</span>), <span class="number">4</span>), <span class="number">1</span>), <span class="number">28192</span>), <span class="number">4</span>), <span class="number">4</span>), <span class="number">3034</span>), <span class="number">4560</span>), <span class="number">792</span>), <span class="number">3</span>), <span class="number">-1362</span>), <span class="number">22378</span>), <span class="number">49452</span>), <span class="number">1</span>), <span class="number">1</span>), <span class="number">2</span>), <span class="number">4</span>), <span class="number">3</span>), <span class="number">2</span>), <span class="number">20282</span>), <span class="number">2</span>), <span class="number">16828</span>), <span class="number">4</span>), <span class="number">3</span>), <span class="number">-1414</span>), <span class="number">-1766</span>), <span class="number">3703</span>), <span class="number">4</span>), <span class="number">1</span>), <span class="number">996</span>), <span class="number">2</span>), <span class="number">2</span>), <span class="number">3</span>), <span class="number">4</span>), <span class="number">1</span>), <span class="number">-1706</span>), <span class="number">2</span>), <span class="number">52552</span>), <span class="number">3</span>), <span class="number">60561</span>), <span class="number">4</span>), <span class="number">-3376</span>), <span class="number">-2784</span>), <span class="number">4</span>), <span class="number">2</span>), <span class="number">2875</span>), <span class="number">-2245</span>), <span class="number">29289</span>), <span class="number">2</span>), <span class="number">487</span>), <span class="number">347</span>), <span class="number">4</span>), <span class="number">3513</span>), <span class="number">4</span>), <span class="number">1463</span>), <span class="number">4</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        sk = [<span class="number">-34</span>, <span class="number">-82</span>, <span class="number">-80</span>, <span class="number">79</span>, <span class="number">-23</span>, <span class="number">100</span>, <span class="number">77</span>, <span class="number">-39</span>, <span class="number">76</span>, <span class="number">-45</span>, <span class="number">89</span>, <span class="number">93</span>, <span class="number">0</span>, <span class="number">-59</span>, <span class="number">85</span>, <span class="number">-35</span>, <span class="number">65</span>, <span class="number">120</span>, <span class="number">-89</span>, <span class="number">110</span>, <span class="number">83</span>, <span class="number">-12</span>, <span class="number">-7</span>, <span class="number">-42</span>, <span class="number">63</span>, <span class="number">52</span>, <span class="number">120</span>, <span class="number">-72</span>, <span class="number">41</span>, <span class="number">-52</span>, <span class="number">103</span>, <span class="number">-16</span>, <span class="number">-18</span>, <span class="number">-17</span>, <span class="number">70</span>, <span class="number">-76</span>, <span class="number">-101</span>, <span class="number">-17</span>, <span class="number">-114</span>, <span class="number">-36</span>, <span class="number">91</span>, <span class="number">66</span>, <span class="number">24</span>, <span class="number">76</span>, <span class="number">-68</span>, <span class="number">123</span>, <span class="number">85</span>, <span class="number">94</span>, <span class="number">61</span>, <span class="number">-28</span>, <span class="number">46</span>, <span class="number">-76</span>, <span class="number">16</span>, <span class="number">31</span>, <span class="number">100</span>, <span class="number">-37</span>, <span class="number">70</span>, <span class="number">130</span>, <span class="number">124</span>, <span class="number">114</span>, <span class="number">-12</span>, <span class="number">-63</span>, <span class="number">-69</span>, <span class="number">-106</span>, <span class="number">-92</span>, <span class="number">-42</span>, <span class="number">14</span>, <span class="number">29</span>, <span class="number">-68</span>, <span class="number">72</span>, <span class="number">127</span>, <span class="number">-32</span>, <span class="number">62</span>, <span class="number">16</span>, <span class="number">-34</span>, <span class="number">15</span>, <span class="number">-48</span>, <span class="number">-58</span>, <span class="number">91</span>, <span class="number">-115</span>, <span class="number">54</span>, <span class="number">11</span>, <span class="number">123</span>, <span class="number">68</span>, <span class="number">58</span>, <span class="number">85</span>, <span class="number">65</span>, <span class="number">-41</span>, <span class="number">44</span>, <span class="number">-61</span>, <span class="number">91</span>, <span class="number">-90</span>, <span class="number">33</span>, <span class="number">-98</span>, <span class="number">48</span>, <span class="number">60</span>, <span class="number">73</span>, <span class="number">106</span>, <span class="number">-93</span>, <span class="number">-86</span>, <span class="number">-7</span>, <span class="number">61</span>, <span class="number">88</span>, <span class="number">-44</span>, <span class="number">76</span>, <span class="number">2</span>, <span class="number">-56</span>, <span class="number">116</span>, <span class="number">28</span>, <span class="number">149</span>, <span class="number">-6</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">142</span>, <span class="number">-14</span>, <span class="number">-54</span>, <span class="number">-108</span>, <span class="number">122</span>, <span class="number">1</span>, <span class="number">-44</span>, <span class="number">32</span>, <span class="number">119</span>, <span class="number">28</span>, <span class="number">0</span>, <span class="number">-63</span>, <span class="number">52</span>, <span class="number">-63</span>, <span class="number">-95</span>, <span class="number">121</span>, <span class="number">-104</span>, <span class="number">-32</span>, <span class="number">-64</span>, <span class="number">-93</span>, <span class="number">41</span>, <span class="number">10</span>, <span class="number">-34</span>, <span class="number">77</span>, <span class="number">-50</span>, <span class="number">151</span>, <span class="number">-81</span>, <span class="number">44</span>, <span class="number">-76</span>, <span class="number">-57</span>, <span class="number">91</span>, <span class="number">37</span>, <span class="number">23</span>, <span class="number">47</span>, <span class="number">-106</span>, <span class="number">7</span>, <span class="number">-1</span>, <span class="number">-16</span>, <span class="number">-43</span>, <span class="number">31</span>, <span class="number">68</span>, <span class="number">12</span>, <span class="number">-41</span>, <span class="number">79</span>, <span class="number">-11</span>, <span class="number">-97</span>, <span class="number">-76</span>, <span class="number">87</span>, <span class="number">59</span>, <span class="number">50</span>, <span class="number">-55</span>, <span class="number">3</span>, <span class="number">114</span>, <span class="number">-100</span>, <span class="number">-37</span>, <span class="number">93</span>, <span class="number">16</span>, <span class="number">19</span>, <span class="number">-62</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">16</span>, <span class="number">106</span>, <span class="number">106</span>, <span class="number">69</span>, <span class="number">-2</span>, <span class="number">-86</span>, <span class="number">-108</span>, <span class="number">4</span>, <span class="number">101</span>, <span class="number">-32</span>, <span class="number">59</span>, <span class="number">127</span>, <span class="number">-62</span>, <span class="number">25</span>, <span class="number">-23</span>, <span class="number">104</span>, <span class="number">-96</span>, <span class="number">93</span>, <span class="number">-8</span>, <span class="number">133</span>, <span class="number">145</span>, <span class="number">-43</span>, <span class="number">83</span>, <span class="number">17</span>, <span class="number">64</span>, <span class="number">-39</span>, <span class="number">43</span>, <span class="number">2</span>, <span class="number">-64</span>, <span class="number">40</span>, <span class="number">64</span>, <span class="number">9</span>, <span class="number">-40</span>, <span class="number">-17</span>, <span class="number">107</span>, <span class="number">-83</span>, <span class="number">22</span>, <span class="number">55</span>, <span class="number">77</span>, <span class="number">110</span>, <span class="number">29</span>, <span class="number">-44</span>, <span class="number">87</span>, <span class="number">-16</span>, <span class="number">55</span>, <span class="number">-42</span>, <span class="number">28</span>, <span class="number">87</span>, <span class="number">-31</span>, <span class="number">14</span>, <span class="number">63</span>, <span class="number">14</span>, <span class="number">-39</span>, <span class="number">-1</span>, <span class="number">41</span>, <span class="number">-86</span>, <span class="number">-83</span>, <span class="number">-38</span>, <span class="number">40</span>, <span class="number">52</span>, <span class="number">135</span>, <span class="number">23</span>, <span class="number">-86</span>, <span class="number">127</span>, <span class="number">111</span>, <span class="number">-107</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">122</span>, <span class="number">145</span>, <span class="number">118</span>, <span class="number">132</span>, <span class="number">-9</span>, <span class="number">-37</span>, <span class="number">47</span>, <span class="number">-106</span>, <span class="number">92</span>, <span class="number">-77</span>, <span class="number">137</span>, <span class="number">13</span>, <span class="number">22</span>, <span class="number">5</span>, <span class="number">60</span>, <span class="number">74</span>, <span class="number">-100</span>, <span class="number">107</span>, <span class="number">56</span>, <span class="number">37</span>, <span class="number">67</span>, <span class="number">-31</span>, <span class="number">94</span>, <span class="number">-21</span>, <span class="number">-66</span>, <span class="number">-14</span>, <span class="number">-45</span>, <span class="number">114</span>, <span class="number">-72</span>, <span class="number">56</span>, <span class="number">54</span>, <span class="number">34</span>, <span class="number">72</span>, <span class="number">-44</span>, <span class="number">118</span>, <span class="number">131</span>, <span class="number">-96</span>, <span class="number">-46</span>, <span class="number">36</span>, <span class="number">114</span>, <span class="number">0</span>, <span class="number">86</span>, <span class="number">-45</span>, <span class="number">113</span>, <span class="number">138</span>, <span class="number">20</span>, <span class="number">93</span>, <span class="number">25</span>, <span class="number">-73</span>, <span class="number">-30</span>, <span class="number">-26</span>, <span class="number">-48</span>, <span class="number">97</span>, <span class="number">-35</span>, <span class="number">73</span>, <span class="number">11</span>, <span class="number">-55</span>, <span class="number">-94</span>, <span class="number">11</span>, <span class="number">135</span>, <span class="number">104</span>, <span class="number">91</span>, <span class="number">-96</span>, <span class="number">-84</span>, <span class="number">137</span>, <span class="number">142</span>, <span class="number">-65</span>, <span class="number">66</span>, <span class="number">-115</span>, <span class="number">-35</span>, <span class="number">40</span>, <span class="number">-75</span>, <span class="number">-8</span>, <span class="number">24</span>, <span class="number">39</span>, <span class="number">-39</span>, <span class="number">69</span>, <span class="number">40</span>, <span class="number">29</span>, <span class="number">25</span>, <span class="number">32</span>, <span class="number">-19</span>, <span class="number">114</span>, <span class="number">119</span>, <span class="number">-16</span>, <span class="number">-43</span>, <span class="number">52</span>, <span class="number">85</span>, <span class="number">112</span>, <span class="number">50</span>, <span class="number">52</span>, <span class="number">87</span>, <span class="number">106</span>, <span class="number">17</span>, <span class="number">96</span>, <span class="number">64</span>, <span class="number">-10</span>, <span class="number">100</span>, <span class="number">21</span>, <span class="number">84</span>, <span class="number">-93</span>, <span class="number">-35</span>, <span class="number">85</span>, <span class="number">8</span>, <span class="number">-2</span>, <span class="number">-27</span>, <span class="number">19</span>, <span class="number">144</span>, <span class="number">62</span>, <span class="number">-29</span>, <span class="number">85</span>, <span class="number">64</span>, <span class="number">-39</span>, <span class="number">-74</span>, <span class="number">101</span>, <span class="number">121</span>, <span class="number">108</span>, <span class="number">-31</span>, <span class="number">70</span>, <span class="number">-73</span>, <span class="number">109</span>, <span class="number">111</span>, <span class="number">111</span>, <span class="number">109</span>, <span class="number">63</span>, <span class="number">35</span>, <span class="number">105</span>, <span class="number">29</span>, <span class="number">-25</span>, <span class="number">84</span>, <span class="number">89</span>, <span class="number">-21</span>, <span class="number">-20</span>, <span class="number">-46</span>, <span class="number">77</span>, <span class="number">-67</span>, <span class="number">-23</span>, <span class="number">35</span>, <span class="number">-11</span>, <span class="number">-80</span>, <span class="number">-82</span>, <span class="number">-82</span>, <span class="number">10</span>, <span class="number">-70</span>, <span class="number">-108</span>, <span class="number">0</span>, <span class="number">-46</span>, <span class="number">145</span>, <span class="number">-23</span>, <span class="number">-33</span>, <span class="number">73</span>, <span class="number">-94</span>, <span class="number">-60</span>, <span class="number">-25</span>, <span class="number">118</span>, <span class="number">-42</span>, <span class="number">76</span>, <span class="number">-65</span>, <span class="number">98</span>, <span class="number">-17</span>, <span class="number">93</span>, <span class="number">98</span>, <span class="number">40</span>, <span class="number">130</span>, <span class="number">114</span>, <span class="number">-41</span>, <span class="number">49</span>, <span class="number">17</span>, <span class="number">4</span>, <span class="number">-38</span>, <span class="number">0</span>, <span class="number">-58</span>, <span class="number">-48</span>, <span class="number">132</span>, <span class="number">57</span>, <span class="number">0</span>, <span class="number">96</span>, <span class="number">-38</span>, <span class="number">122</span>, <span class="number">-89</span>, <span class="number">51</span>, <span class="number">-45</span>, <span class="number">60</span>, <span class="number">-11</span>, <span class="number">-63</span>, <span class="number">-75</span>, <span class="number">74</span>, <span class="number">13</span>, <span class="number">128</span>, <span class="number">-9</span>, <span class="number">26</span>, <span class="number">-34</span>, <span class="number">-71</span>, <span class="number">38</span>, <span class="number">81</span>, <span class="number">-108</span>, <span class="number">135</span>, <span class="number">-46</span>, <span class="number">60</span>, <span class="number">63</span>, <span class="number">-37</span>, <span class="number">-13</span>, <span class="number">-43</span>, <span class="number">-9</span>, <span class="number">91</span>, <span class="number">-11</span>, <span class="number">-74</span>, <span class="number">83</span>, <span class="number">47</span>, <span class="number">36</span>, <span class="number">104</span>, <span class="number">-81</span>, <span class="number">92</span>, <span class="number">-35</span>, <span class="number">41</span>, <span class="number">91</span>, <span class="number">112</span>, <span class="number">-104</span>, <span class="number">-45</span>, <span class="number">-46</span>, <span class="number">-106</span>, <span class="number">-65</span>, <span class="number">68</span>, <span class="number">70</span>, <span class="number">-66</span>, <span class="number">-79</span>, <span class="number">-57</span>, <span class="number">134</span>, <span class="number">-115</span>, <span class="number">-43</span>, <span class="number">41</span>, <span class="number">-111</span>, <span class="number">118</span>, <span class="number">-90</span>, <span class="number">-56</span>, <span class="number">-34</span>, <span class="number">133</span>, <span class="number">-104</span>, <span class="number">141</span>, <span class="number">42</span>, <span class="number">6</span>, <span class="number">96</span>, <span class="number">36</span>, <span class="number">56</span>, <span class="number">123</span>, <span class="number">-31</span>, <span class="number">77</span>, <span class="number">80</span>, <span class="number">37</span>, <span class="number">8</span>, <span class="number">59</span>, <span class="number">-54</span>, <span class="number">-1</span>, <span class="number">104</span>, <span class="number">126</span>, <span class="number">-12</span>, <span class="number">113</span>, <span class="number">-14</span>, <span class="number">-97</span>, <span class="number">-107</span>, <span class="number">-18</span>, <span class="number">-46</span>, <span class="number">81</span>, <span class="number">55</span>, <span class="number">153</span>, <span class="number">-84</span>, <span class="number">19</span>, <span class="number">100</span>, <span class="number">-104</span>, <span class="number">124</span>, <span class="number">19</span>],</span><br><span class="line">        m = <span class="function"><span class="keyword">function</span> (<span class="params">a, k, i</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (a + k[pc](k[le] % i))</span><br><span class="line">        &#125;,</span><br><span class="line">        dc = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> sl = sk[le] - <span class="number">1</span>,</span><br><span class="line">                av = sk[sl],</span><br><span class="line">                i = <span class="number">0</span>,</span><br><span class="line">                j = i,</span><br><span class="line">                ret = i,</span><br><span class="line">                a, b;</span><br><span class="line">            <span class="keyword">while</span> (sl--) &#123;</span><br><span class="line">                i = j;</span><br><span class="line">                b = m(sk[j++], id, (j &gt; <span class="number">0</span> &amp;&amp; j % <span class="number">0x10</span> == <span class="number">0</span>) ? <span class="number">0x10</span> : j % <span class="number">0x10</span>);</span><br><span class="line">                <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    ret -= (b * (i % <span class="number">3</span>) - av)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    ret += (b + <span class="number">87</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> ret | mov(<span class="number">1</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">    w[s([<span class="number">95</span>, <span class="number">95</span>, <span class="number">113</span>, <span class="number">122</span>, <span class="number">109</span>, <span class="number">99</span>, <span class="number">102</span>])] = dc</span><br><span class="line">&#125;)(<span class="built_in">window</span>);</span><br></pre></td></tr></table></figure>

<p><img src="/2020/06/10/article-12/WX20200610-160618.png" alt></p>
<p>现在已经确定这就是加密的代码块了，扣下来在webstorm中执行老样子缺什么补什么，最后发现了这样一个错误</p>
<p><img src="/2020/06/10/article-12/WX20200610-160918@2x.png" alt></p>
<p>提示我们 <strong><em>cookie</em></strong> 没有定义，在控制台看下</p>
<p><img src="/2020/06/10/article-12/WX20200610-161200.png" alt></p>
<p>再结合代码得知这里是将 <strong><em>qznewsite.uid</em></strong> 做了处理</p>
<p>所以我们在js中增加如下定义，再执行代码就发现成功了</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="built_in">window</span> = &#123;<span class="attr">document</span>: &#123;<span class="attr">cookie</span>: <span class="string">"qznewsite.uid=nzaxo1a4zrhqc34sn214bbyz"</span>&#125;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="逆向"><a href="#逆向" class="headerlink" title="逆向"></a>逆向</h3><p>前面已经修改好了js代码，然后使用python调用并请求后发现会跳到登陆页，这是因为该js是动态返回的，对比下两次得到的js</p>
<p><img src="/2020/06/10/article-12/WX20200610-161952.png" alt></p>
<p>所以就需要动态获取了，上代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> execjs</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line">headers = &#123;&#125;</span><br><span class="line">headers[<span class="string">"User-Agent"</span>] = <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36"</span></span><br><span class="line">headers[<span class="string">"Referer"</span>] = <span class="string">"https://www.qichamao.com/"</span></span><br><span class="line"></span><br><span class="line">js_url = <span class="string">f"https://www.qichamao.com/home/GetJsVerfyCode?t=<span class="subst">&#123;random.random()&#125;</span>&amp;_=<span class="subst">&#123;int(time.time())&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">js_result = requests.get(js_url, verify=<span class="literal">False</span>, proxies=proxies, headers=headers)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取</span></span><br><span class="line">uid = js_result.headers.get(<span class="string">"Set-Cookie"</span>, <span class="string">""</span>).split(<span class="string">";"</span>)[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># 设置uid</span></span><br><span class="line">cookies = uid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新cookie</span></span><br><span class="line">headers[<span class="string">"Cookie"</span>] = cookies</span><br><span class="line"></span><br><span class="line">js_code = js_result.text</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建可执行的 js</span></span><br><span class="line">_js_code = <span class="string">'var window = &#123;document: &#123;cookie: "%s"&#125;&#125;;!'</span> %cookies + js_code</span><br><span class="line"></span><br><span class="line">ctx = execjs.compile(_js_code)</span><br><span class="line">mfccode = ctx.eval(<span class="string">"window.__qzmcf()"</span>)</span><br><span class="line"></span><br><span class="line">url = <span class="string">f'https://www.qichamao.com/search/all/<span class="subst">&#123;quote(<span class="string">"小米"</span>)&#125;</span>?mfccode=<span class="subst">&#123;mfccode&#125;</span>'</span></span><br><span class="line"></span><br><span class="line">result = requests.get(url, headers=headers, proxies=proxies, verify=<span class="literal">False</span>)</span><br><span class="line">print(result.text)</span><br></pre></td></tr></table></figure>

<p><img src="/2020/06/10/article-12/WX20200610-162446@2x.png" alt></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>一个很好的使用动态js调试案例，没什么难度，之前没接触过这类情况，需要耐心。</p>
]]></content>
      <categories>
        <category>技术</category>
        <category>JS逆向</category>
      </categories>
      <tags>
        <tag>JS逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>JS逆向学习-某汽车交易网站数据抓取</title>
    <url>/2020/06/10/article-13/</url>
    <content><![CDATA[<p>aHR0cHM6Ly93d3cuZ3VhemkuY29tLw==</p>
<h3 id="分析请求"><a href="#分析请求" class="headerlink" title="分析请求"></a>分析请求</h3><p>打开首页，查看获取 <strong><em>热卖车型</em></strong> 的请求</p>
<p><img src="/2020/06/10/article-13/WX20200610-183244.png" alt></p>
<p>发现就是一个很简单的 <strong><em>get</em></strong> 请求，也没有什么加密参数，但是当直接访问时就发现并没有返回想要的结果，而是跳转到了首页，说明需要对header做分析了，调了一圈发现是 <strong><em>antipas</em></strong> 这个cookie 的问题</p>
<p><img src="/2020/06/10/article-13/WX20200610-183845.png" alt></p>
<p>全局搜索后也没有发现设置的请求，那就从第一个请求找起，结果发现从第二个请求就开始有这个cookie了，但是第一个203请求在chrome中看不到响应内容，所以使用fiddler抓包分析，果然看到了内容</p>
<p><img src="/2020/06/10/article-13/WX20200610-184701.png" alt></p>
<p>发现这是一段eval执行的js代码，在浏览器新建一个窗口，把粘贴到控制台</p>
<p><img src="/2020/06/10/article-13/WX20200610-185028.png" alt></p>
<p>发现 <strong><em>value</em></strong> 就是我们要找的结果，是通过 <strong><em>anti</em></strong> 这个函数调用返回的，看下这个函数</p>
<p><img src="/2020/06/10/article-13/WX20200610-185202.png" alt></p>
<p>好了，把还原后的代码在本地执行，缺什么补什么，最后结果是这样的</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span> = &#123;<span class="attr">location</span>: &#123;&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safeAdd</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> lsw = (x &amp; <span class="number">0xFFFF</span>) + (y &amp; <span class="number">0xFFFF</span>);</span><br><span class="line">    <span class="keyword">var</span> msw = (x &gt;&gt; <span class="number">16</span>) + (y &gt;&gt; <span class="number">16</span>) + (lsw &gt;&gt; <span class="number">16</span>);</span><br><span class="line">    <span class="keyword">return</span> (msw &lt;&lt; <span class="number">16</span>) | (lsw &amp; <span class="number">0xFFFF</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bitRotateLeft</span>(<span class="params">num, cnt</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (num &lt;&lt; cnt) | (num &gt;&gt;&gt; (<span class="number">32</span> - cnt))</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cmn</span>(<span class="params">q, a, b, x, s, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ff</span>(<span class="params">a, b, c, d, x, s, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> cmn((b &amp; c) | ((~b) &amp; d), a, b, x, s, t)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gg</span>(<span class="params">a, b, c, d, x, s, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> cmn((b &amp; d) | (c &amp; (~d)), a, b, x, s, t)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hh</span>(<span class="params">a, b, c, d, x, s, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> cmn(b ^ c ^ d, a, b, x, s, t)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ii</span>(<span class="params">a, b, c, d, x, s, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> cmn(c ^ (b | (~d)), a, b, x, s, t)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">binl</span>(<span class="params">x, len</span>) </span>&#123;</span><br><span class="line">    x[len &gt;&gt; <span class="number">5</span>] |= <span class="number">0x80</span> &lt;&lt; (len % <span class="number">32</span>);</span><br><span class="line">    x[(((len + <span class="number">64</span>) &gt;&gt;&gt; <span class="number">9</span>) &lt;&lt; <span class="number">4</span>) + <span class="number">14</span>] = len;</span><br><span class="line">    <span class="keyword">var</span> i;</span><br><span class="line">    <span class="keyword">var</span> olda;</span><br><span class="line">    <span class="keyword">var</span> oldb;</span><br><span class="line">    <span class="keyword">var</span> oldc;</span><br><span class="line">    <span class="keyword">var</span> oldd;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">1732584193</span>;</span><br><span class="line">    <span class="keyword">var</span> b = <span class="number">-271733879</span>;</span><br><span class="line">    <span class="keyword">var</span> c = <span class="number">-1732584194</span>;</span><br><span class="line">    <span class="keyword">var</span> d = <span class="number">271733878</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; x.length; i += <span class="number">16</span>) &#123;</span><br><span class="line">        olda = a;</span><br><span class="line">        oldb = b;</span><br><span class="line">        oldc = c;</span><br><span class="line">        oldd = d;</span><br><span class="line">        a = ff(a, b, c, d, x[i], <span class="number">7</span>, <span class="number">-680876936</span>);</span><br><span class="line">        d = ff(d, a, b, c, x[i + <span class="number">1</span>], <span class="number">12</span>, <span class="number">-389564586</span>);</span><br><span class="line">        c = ff(c, d, a, b, x[i + <span class="number">2</span>], <span class="number">17</span>, <span class="number">606105819</span>);</span><br><span class="line">        b = ff(b, c, d, a, x[i + <span class="number">3</span>], <span class="number">22</span>, <span class="number">-1044525330</span>);</span><br><span class="line">        a = ff(a, b, c, d, x[i + <span class="number">4</span>], <span class="number">7</span>, <span class="number">-176418897</span>);</span><br><span class="line">        d = ff(d, a, b, c, x[i + <span class="number">5</span>], <span class="number">12</span>, <span class="number">1200080426</span>);</span><br><span class="line">        c = ff(c, d, a, b, x[i + <span class="number">6</span>], <span class="number">17</span>, <span class="number">-1473231341</span>);</span><br><span class="line">        b = ff(b, c, d, a, x[i + <span class="number">7</span>], <span class="number">22</span>, <span class="number">-45705983</span>);</span><br><span class="line">        a = ff(a, b, c, d, x[i + <span class="number">8</span>], <span class="number">7</span>, <span class="number">1770035416</span>);</span><br><span class="line">        d = ff(d, a, b, c, x[i + <span class="number">9</span>], <span class="number">12</span>, <span class="number">-1958414417</span>);</span><br><span class="line">        c = ff(c, d, a, b, x[i + <span class="number">10</span>], <span class="number">17</span>, <span class="number">-42063</span>);</span><br><span class="line">        b = ff(b, c, d, a, x[i + <span class="number">11</span>], <span class="number">22</span>, <span class="number">-1990404162</span>);</span><br><span class="line">        a = ff(a, b, c, d, x[i + <span class="number">12</span>], <span class="number">7</span>, <span class="number">1804603682</span>);</span><br><span class="line">        d = ff(d, a, b, c, x[i + <span class="number">13</span>], <span class="number">12</span>, <span class="number">-40341101</span>);</span><br><span class="line">        c = ff(c, d, a, b, x[i + <span class="number">14</span>], <span class="number">17</span>, <span class="number">-1502002290</span>);</span><br><span class="line">        b = ff(b, c, d, a, x[i + <span class="number">15</span>], <span class="number">22</span>, <span class="number">1236535329</span>);</span><br><span class="line">        a = gg(a, b, c, d, x[i + <span class="number">1</span>], <span class="number">5</span>, <span class="number">-165796510</span>);</span><br><span class="line">        d = gg(d, a, b, c, x[i + <span class="number">6</span>], <span class="number">9</span>, <span class="number">-1069501632</span>);</span><br><span class="line">        c = gg(c, d, a, b, x[i + <span class="number">11</span>], <span class="number">14</span>, <span class="number">643717713</span>);</span><br><span class="line">        b = gg(b, c, d, a, x[i], <span class="number">20</span>, <span class="number">-373897302</span>);</span><br><span class="line">        a = gg(a, b, c, d, x[i + <span class="number">5</span>], <span class="number">5</span>, <span class="number">-701558691</span>);</span><br><span class="line">        d = gg(d, a, b, c, x[i + <span class="number">10</span>], <span class="number">9</span>, <span class="number">38016083</span>);</span><br><span class="line">        c = gg(c, d, a, b, x[i + <span class="number">15</span>], <span class="number">14</span>, <span class="number">-660478335</span>);</span><br><span class="line">        b = gg(b, c, d, a, x[i + <span class="number">4</span>], <span class="number">20</span>, <span class="number">-405537848</span>);</span><br><span class="line">        a = gg(a, b, c, d, x[i + <span class="number">9</span>], <span class="number">5</span>, <span class="number">568446438</span>);</span><br><span class="line">        d = gg(d, a, b, c, x[i + <span class="number">14</span>], <span class="number">9</span>, <span class="number">-1019803690</span>);</span><br><span class="line">        c = gg(c, d, a, b, x[i + <span class="number">3</span>], <span class="number">14</span>, <span class="number">-187363961</span>);</span><br><span class="line">        b = gg(b, c, d, a, x[i + <span class="number">8</span>], <span class="number">20</span>, <span class="number">1163531501</span>);</span><br><span class="line">        a = gg(a, b, c, d, x[i + <span class="number">13</span>], <span class="number">5</span>, <span class="number">-1444681467</span>);</span><br><span class="line">        d = gg(d, a, b, c, x[i + <span class="number">2</span>], <span class="number">9</span>, <span class="number">-51403784</span>);</span><br><span class="line">        c = gg(c, d, a, b, x[i + <span class="number">7</span>], <span class="number">14</span>, <span class="number">1735328473</span>);</span><br><span class="line">        b = gg(b, c, d, a, x[i + <span class="number">12</span>], <span class="number">20</span>, <span class="number">-1926607734</span>);</span><br><span class="line">        a = hh(a, b, c, d, x[i + <span class="number">5</span>], <span class="number">4</span>, <span class="number">-378558</span>);</span><br><span class="line">        d = hh(d, a, b, c, x[i + <span class="number">8</span>], <span class="number">11</span>, <span class="number">-2022574463</span>);</span><br><span class="line">        c = hh(c, d, a, b, x[i + <span class="number">11</span>], <span class="number">16</span>, <span class="number">1839030562</span>);</span><br><span class="line">        b = hh(b, c, d, a, x[i + <span class="number">14</span>], <span class="number">23</span>, <span class="number">-35309556</span>);</span><br><span class="line">        a = hh(a, b, c, d, x[i + <span class="number">1</span>], <span class="number">4</span>, <span class="number">-1530992060</span>);</span><br><span class="line">        d = hh(d, a, b, c, x[i + <span class="number">4</span>], <span class="number">11</span>, <span class="number">1272893353</span>);</span><br><span class="line">        c = hh(c, d, a, b, x[i + <span class="number">7</span>], <span class="number">16</span>, <span class="number">-155497632</span>);</span><br><span class="line">        b = hh(b, c, d, a, x[i + <span class="number">10</span>], <span class="number">23</span>, <span class="number">-1094730640</span>);</span><br><span class="line">        a = hh(a, b, c, d, x[i + <span class="number">13</span>], <span class="number">4</span>, <span class="number">681279174</span>);</span><br><span class="line">        d = hh(d, a, b, c, x[i], <span class="number">11</span>, <span class="number">-358537222</span>);</span><br><span class="line">        c = hh(c, d, a, b, x[i + <span class="number">3</span>], <span class="number">16</span>, <span class="number">-722521979</span>);</span><br><span class="line">        b = hh(b, c, d, a, x[i + <span class="number">6</span>], <span class="number">23</span>, <span class="number">76029189</span>);</span><br><span class="line">        a = hh(a, b, c, d, x[i + <span class="number">9</span>], <span class="number">4</span>, <span class="number">-640364487</span>);</span><br><span class="line">        d = hh(d, a, b, c, x[i + <span class="number">12</span>], <span class="number">11</span>, <span class="number">-421815835</span>);</span><br><span class="line">        c = hh(c, d, a, b, x[i + <span class="number">15</span>], <span class="number">16</span>, <span class="number">530742520</span>);</span><br><span class="line">        b = hh(b, c, d, a, x[i + <span class="number">2</span>], <span class="number">23</span>, <span class="number">-995338651</span>);</span><br><span class="line">        a = ii(a, b, c, d, x[i], <span class="number">6</span>, <span class="number">-198630844</span>);</span><br><span class="line">        d = ii(d, a, b, c, x[i + <span class="number">7</span>], <span class="number">10</span>, <span class="number">1126891415</span>);</span><br><span class="line">        c = ii(c, d, a, b, x[i + <span class="number">14</span>], <span class="number">15</span>, <span class="number">-1416354905</span>);</span><br><span class="line">        b = ii(b, c, d, a, x[i + <span class="number">5</span>], <span class="number">21</span>, <span class="number">-57434055</span>);</span><br><span class="line">        a = ii(a, b, c, d, x[i + <span class="number">12</span>], <span class="number">6</span>, <span class="number">1700485571</span>);</span><br><span class="line">        d = ii(d, a, b, c, x[i + <span class="number">3</span>], <span class="number">10</span>, <span class="number">-1894986606</span>);</span><br><span class="line">        c = ii(c, d, a, b, x[i + <span class="number">10</span>], <span class="number">15</span>, <span class="number">-1051523</span>);</span><br><span class="line">        b = ii(b, c, d, a, x[i + <span class="number">1</span>], <span class="number">21</span>, <span class="number">-2054922799</span>);</span><br><span class="line">        a = ii(a, b, c, d, x[i + <span class="number">8</span>], <span class="number">6</span>, <span class="number">1873313359</span>);</span><br><span class="line">        d = ii(d, a, b, c, x[i + <span class="number">15</span>], <span class="number">10</span>, <span class="number">-30611744</span>);</span><br><span class="line">        c = ii(c, d, a, b, x[i + <span class="number">6</span>], <span class="number">15</span>, <span class="number">-1560198380</span>);</span><br><span class="line">        b = ii(b, c, d, a, x[i + <span class="number">13</span>], <span class="number">21</span>, <span class="number">1309151649</span>);</span><br><span class="line">        a = ii(a, b, c, d, x[i + <span class="number">4</span>], <span class="number">6</span>, <span class="number">-145523070</span>);</span><br><span class="line">        d = ii(d, a, b, c, x[i + <span class="number">11</span>], <span class="number">10</span>, <span class="number">-1120210379</span>);</span><br><span class="line">        c = ii(c, d, a, b, x[i + <span class="number">2</span>], <span class="number">15</span>, <span class="number">718787259</span>);</span><br><span class="line">        b = ii(b, c, d, a, x[i + <span class="number">9</span>], <span class="number">21</span>, <span class="number">-343485551</span>);</span><br><span class="line">        a = safeAdd(a, olda);</span><br><span class="line">        b = safeAdd(b, oldb);</span><br><span class="line">        c = safeAdd(c, oldc);</span><br><span class="line">        d = safeAdd(d, oldd)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [a, b, c, d]</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">binl2rstr</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i;</span><br><span class="line">    <span class="keyword">var</span> output = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> length32 = input.length * <span class="number">32</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length32; i += <span class="number">8</span>) &#123;</span><br><span class="line">        output += <span class="built_in">String</span>.fromCharCode((input[i &gt;&gt; <span class="number">5</span>] &gt;&gt;&gt; (i % <span class="number">32</span>)) &amp; <span class="number">0xFF</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> output</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rstr2binl</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i;</span><br><span class="line">    <span class="keyword">var</span> output = [];</span><br><span class="line">    output[(input.length &gt;&gt; <span class="number">2</span>) - <span class="number">1</span>] = <span class="literal">undefined</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; output.length; i += <span class="number">1</span>) &#123;</span><br><span class="line">        output[i] = <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> length8 = input.length * <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length8; i += <span class="number">8</span>) &#123;</span><br><span class="line">        output[i &gt;&gt; <span class="number">5</span>] |= (input.charCodeAt(i / <span class="number">8</span>) &amp; <span class="number">0xFF</span>) &lt;&lt; (i % <span class="number">32</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> output</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rstr</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> binl2rstr(binl(rstr2binl(s), s.length * <span class="number">8</span>))</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rstrHMAC</span>(<span class="params">key, data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i;</span><br><span class="line">    <span class="keyword">var</span> bkey = rstr2binl(key);</span><br><span class="line">    <span class="keyword">var</span> ipad = [];</span><br><span class="line">    <span class="keyword">var</span> opad = [];</span><br><span class="line">    <span class="keyword">var</span> hash;</span><br><span class="line">    ipad[<span class="number">15</span>] = opad[<span class="number">15</span>] = <span class="literal">undefined</span>;</span><br><span class="line">    <span class="keyword">if</span> (bkey.length &gt; <span class="number">16</span>) &#123;</span><br><span class="line">        bkey = binl(bkey, key.length * <span class="number">8</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i += <span class="number">1</span>) &#123;</span><br><span class="line">        ipad[i] = bkey[i] ^ <span class="number">0x36363636</span>;</span><br><span class="line">        opad[i] = bkey[i] ^ <span class="number">0x5C5C5C5C</span></span><br><span class="line">    &#125;</span><br><span class="line">    hash = binl(ipad.concat(rstr2binl(data)), <span class="number">512</span> + data.length * <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">return</span> binl2rstr(binl(opad.concat(hash), <span class="number">512</span> + <span class="number">128</span>))</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rstr2hex</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> hexTab = <span class="string">'0123456789abcdef'</span>;</span><br><span class="line">    <span class="keyword">var</span> output = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> x;</span><br><span class="line">    <span class="keyword">var</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; input.length; i += <span class="number">1</span>) &#123;</span><br><span class="line">        x = input.charCodeAt(i);</span><br><span class="line">        output += hexTab.charAt((x &gt;&gt;&gt; <span class="number">4</span>) &amp; <span class="number">0x0F</span>) + hexTab.charAt(x &amp; <span class="number">0x0F</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> output</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">str2rstrUTF8</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">unescape</span>(<span class="built_in">encodeURIComponent</span>(input))</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">raw</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> rstr(str2rstrUTF8(s))</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hex</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> rstr2hex(raw(s))</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uid</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> text = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">var</span> possible = <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"</span>;</span><br><span class="line">    <span class="keyword">var</span> len = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        text += possible.charAt(<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * possible.length))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> text</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">charRun</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">    s = s.replace(<span class="regexp">/[a-zA-Z]/g</span>, <span class="string">'#'</span>);</span><br><span class="line">    <span class="keyword">var</span> arr = s.split(<span class="string">''</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[i] == <span class="string">'#'</span>) &#123;</span><br><span class="line">            arr[i] = uid()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr.join(<span class="string">''</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">anti</span>(<span class="params">string, key</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> estring = hex(string);</span><br><span class="line">    <span class="keyword">return</span> charRun(estring)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">xredirect</span>(<span class="params">name, value, url</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    date.setTime(date.getTime() + <span class="number">2592000000</span>);</span><br><span class="line">    <span class="keyword">var</span> expires = <span class="string">"; expires="</span> + date.toUTCString();</span><br><span class="line">    <span class="built_in">document</span>.cookie = name + <span class="string">"="</span> + value + expires + <span class="string">"; path=/"</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.cookie.indexOf(name) === <span class="number">-1</span> &amp;&amp; navigator.cookieEnabled) &#123;</span><br><span class="line">        alert(<span class="string">'请修改浏览器设置,允许cookie缓存'</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (url == <span class="string">''</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> url = location.href;</span><br><span class="line">            <span class="keyword">if</span> (location.protocol != <span class="string">'https:'</span>) &#123;</span><br><span class="line">                url = <span class="string">'https:'</span> + <span class="built_in">window</span>.location.href.substring(<span class="built_in">window</span>.location.protocol.length)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (location.protocol != <span class="string">'https:'</span>) &#123;</span><br><span class="line">                url = <span class="string">'https:'</span> + url</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> ulen = url.indexOf(<span class="string">'#'</span>);</span><br><span class="line">        <span class="keyword">if</span> (ulen !== <span class="number">-1</span>) &#123;</span><br><span class="line">            url = url.substring(<span class="number">0</span>, ulen)</span><br><span class="line">        &#125;</span><br><span class="line">        location.replace(url)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(anti(<span class="string">'1AFJO04hvED0DuQk0vfc9VPPITrFcbOJ7EOP9opjc4k='</span>, <span class="string">'691898463814653675'</span>))</span><br></pre></td></tr></table></figure>

<p>至此，<strong><em>antipas</em></strong> 的值我们就获取到了</p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>没什么难度，就是要对eval还原，另外chrome看不到响应时就试着用其他抓包工具或者接口测试工具调试下</p>
]]></content>
      <categories>
        <category>技术</category>
        <category>JS逆向</category>
      </categories>
      <tags>
        <tag>JS逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>JS逆向学习-某游戏网站登陆</title>
    <url>/2020/06/11/article-14/</url>
    <content><![CDATA[<p>aHR0cDovLzk5NzE4aC5jb20vY24vcmVnaXN0ZXI=</p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p><img src="/2020/06/11/article-14/WX20200611-181630.png" alt></p>
<p>登陆时对密码进行了加密处理，打一个xhr断点，定位到了这里</p>
<p><img src="/2020/06/11/article-14/WX20200611-181835.png" alt></p>
<p>跟进 <strong><em>cryptStr</em></strong> 这个函数查看</p>
<p><img src="/2020/06/11/article-14/WX20200611-182047.png" alt></p>
<p>这里的处理是在DOM中增加了一个button，触发click后再将其删掉，通过事件监听发现了加密代码</p>
<p><img src="/2020/06/11/article-14/WX20200611-182300.png" alt></p>
<p><img src="/2020/06/11/article-14/WX20200611-182430.png" alt></p>
<p><img src="/2020/06/11/article-14/WX20200611-182544.png" alt></p>
<p>到这里就已经明确加密流程了，最外层是一个 <strong><em>AES</em></strong> 加密模式使用 <strong><em>ECB</em></strong> ，加密的 <strong><em>key</em></strong> 是 <strong><em>cookie</em></strong> 中的 <strong><em>web</em></strong> 和 <strong><em>randomYes</em></strong> 字符串拼接后使用 <strong><em>sdc</em></strong> 函数处理后的结果，经分析其实就是个 <strong><em>MD5</em></strong> 操作，最后将 <strong><em>AES</em></strong> 和结果和 <strong><em>randomYes</em></strong> 拼接返回。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>yysy很简单，值得注意的点是dom的事件监听。</p>
]]></content>
      <categories>
        <category>技术</category>
        <category>JS逆向</category>
      </categories>
      <tags>
        <tag>JS逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>AST学习资料收集</title>
    <url>/2020/06/16/article-15/</url>
    <content><![CDATA[<p>本系列为AST个人学习笔记，完整知识内容请关注知识星球 <a href="https://wx.zsxq.com/" target="_blank" rel="noopener">AST入门与实战</a> 和公众号 <a href>菜鸟学Python编程</a></p>
<p>1、AST在线解析网站</p>
<p><a href="https://astexplorer.net/" target="_blank" rel="noopener">原版</a>  <a href="https://blogz.gitee.io/ast/" target="_blank" rel="noopener">国内镜像</a></p>
<p>2、babel库官方文档</p>
<p><a href="https://babeljs.io/docs/en/" target="_blank" rel="noopener">官方学习文档</a></p>
<p>3、babel库 github地址</p>
<p><a href="https://github.com/babel/babel" target="_blank" rel="noopener">babel</a></p>
<p>4、babel库插件开发手册</p>
<p><a href="https://blog.csdn.net/weixin_33826609/article/details/93164633#toc-visitors" target="_blank" rel="noopener">插件手册</a></p>
<p>5、JavaScript在线学习网站</p>
<p><a href="https://wangdoc.com/javascript/index.html" target="_blank" rel="noopener">入门</a></p>
<p><a href="https://es6.ruanyifeng.com/" target="_blank" rel="noopener">es6教程</a></p>
<p><strong>JavaScript高级程序设计（第3版）</strong></p>
<p>6、查看JavaStript代码流程</p>
<p><a href="https://bogdan-lyashenko.github.io/js-code-to-svg-flowchart/docs/live-editor/index.html" target="_blank" rel="noopener">代码流程</a></p>
<p><a href="https://github.com/Bogdan-Lyashenko/js-code-to-svg-flowchart" target="_blank" rel="noopener">Github地址</a></p>
<p>7、AST入门网站</p>
<p><a href="https://github.com/yacan8/blog/blob/master/posts/JavaScript抽象语法树AST.md" target="_blank" rel="noopener">JavaScript抽象语法树AST</a></p>
<p>8、其他的干货文章</p>
<p><a href="https://github.com/babel/babylon/blob/master/ast/spec.md" target="_blank" rel="noopener"><strong>AS各个节点解释</strong></a></p>
<p><a href="http://www.alloyteam.com/2017/04/analysis-of-babel-babel-overview/" target="_blank" rel="noopener"><strong>简单剖析babel</strong></a></p>
<p><a href="https://fed.taobao.org/blog/taofed/do71ct/babel-plugins/" target="_blank" rel="noopener"><strong>淘系前端团队写的babel库相关</strong></a></p>
<p><a href="http://www.alloyteam.com/2016/05/babel-code-into-a-bird-like/" target="_blank" rel="noopener"><strong>babel到底将代码转换成了什么鸟样</strong></a></p>
<p>9、将代码转换成图片的网站</p>
<p><a href="https://carbon.now.sh/" target="_blank" rel="noopener">漂亮代码图片在线生成</a></p>
<p>10、查看AST结构图</p>
<p><a href="https://resources.jointjs.com/demos/rappid/apps/Ast/index.html" target="_blank" rel="noopener">AST结构图</a></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>AST</category>
      </categories>
      <tags>
        <tag>AST</tag>
        <tag>资料</tag>
      </tags>
  </entry>
  <entry>
    <title>AST学习-认识AST结构</title>
    <url>/2020/06/16/article-16/</url>
    <content><![CDATA[<p>环境：Mac  Node.js  babel</p>
<h2 id="AST基本结构"><a href="#AST基本结构" class="headerlink" title="AST基本结构"></a>AST基本结构</h2><h3 id="变量声明-VariableDeclaration"><a href="#变量声明-VariableDeclaration" class="headerlink" title="变量声明 VariableDeclaration"></a>变量声明 VariableDeclaration</h3><p><img src="/2020/06/16/article-16/WX20200616-172515.png" alt></p>
<h4 id="declarations-基本说明"><a href="#declarations-基本说明" class="headerlink" title="declarations 基本说明"></a>declarations 基本说明</h4><p>type 表示节点类型，变量声明就是：VariableDeclaration</p>
<p>start end 表示节点的起始位置</p>
<p>kind 变量声明关键字 分为 var let const</p>
<p><strong><em>declarations</em></strong> 需要重点看下</p>
<p><img src="/2020/06/16/article-16/WX20200616-173414.png" alt></p>
<p>declarations 是一个数组结构，里边存放了变量的声明信息，声明了几个变量，就有几个 <strong><em>VariableDeclarator</em></strong>，注意只要声明了就会有这个节点，不管是否赋值</p>
<p><img src="/2020/06/16/article-16/WX20200616-173817.png" alt></p>
<h4 id="VariableDeclarator-说明"><a href="#VariableDeclarator-说明" class="headerlink" title="VariableDeclarator 说明"></a>VariableDeclarator 说明</h4><p><img src="/2020/06/16/article-16/WX20200616-175248.png" alt></p>
<p>除了前面提到过的节点，还出现了两个新节点 <strong><em>id</em></strong> <strong><em>init</em></strong> </p>
<p><strong><em>id</em></strong> : 对变量名的描述，包含类型、位置和名称</p>
<p><strong><em>init</em></strong> : 表示变量初始化的情况，包含类型、位置和value</p>
<h3 id="其他类型表示"><a href="#其他类型表示" class="headerlink" title="其他类型表示"></a>其他类型表示</h3><p>1+2，b+c 这种是 BinaryExpression<br>函数为 FunctionExpression<br>对象 ObjectExpression<br>new Object() 为 NewExpression<br>[] 数组为 ArrayExpression<br>Math.sin() 为 CallExpression</p>
<h3 id="使用babel库操作AST"><a href="#使用babel库操作AST" class="headerlink" title="使用babel库操作AST"></a>使用babel库操作AST</h3><h4 id="打印整个AST"><a href="#打印整个AST" class="headerlink" title="打印整个AST"></a>打印整个AST</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 下面的导入不一定会全用，但是要知道</span></span><br><span class="line"><span class="comment">// 将 JS 源码转换成语法树的函数</span></span><br><span class="line"><span class="keyword">const</span> parser = <span class="built_in">require</span>(<span class="string">"@babel/parser"</span>)</span><br><span class="line"><span class="comment">// 遍历 AST 的函数</span></span><br><span class="line"><span class="keyword">const</span> traverse = <span class="built_in">require</span>(<span class="string">"@babel/traverse"</span>).default</span><br><span class="line"><span class="comment">// 操作节点的函数</span></span><br><span class="line"><span class="keyword">const</span> t = <span class="built_in">require</span>(<span class="string">"@babel/types"</span>)</span><br><span class="line"><span class="comment">// 将语法书转换成源代码的函数</span></span><br><span class="line"><span class="keyword">const</span> generator = <span class="built_in">require</span>(<span class="string">"@babel/generator"</span>).default</span><br><span class="line"><span class="comment">// 操作文件的函数</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> jscode = <span class="string">"var a = 123;"</span>;</span><br><span class="line"><span class="keyword">let</span> ast = parser.parse(jscode);</span><br><span class="line"></span><br><span class="line">fs.writeFile(<span class="string">'ast.json'</span>, <span class="built_in">JSON</span>.stringify(ast, <span class="literal">null</span>, <span class="string">'\t'</span>), (err)=&gt;&#123;&#125;);</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	<span class="attr">"type"</span>: <span class="string">"File"</span>,</span><br><span class="line">	<span class="attr">"start"</span>: <span class="number">0</span>,</span><br><span class="line">	<span class="attr">"end"</span>: <span class="number">12</span>,</span><br><span class="line">	<span class="attr">"loc"</span>: &#123;</span><br><span class="line">		<span class="attr">"start"</span>: &#123;</span><br><span class="line">			<span class="attr">"line"</span>: <span class="number">1</span>,</span><br><span class="line">			<span class="attr">"column"</span>: <span class="number">0</span></span><br><span class="line">		&#125;,</span><br><span class="line">		<span class="attr">"end"</span>: &#123;</span><br><span class="line">			<span class="attr">"line"</span>: <span class="number">1</span>,</span><br><span class="line">			<span class="attr">"column"</span>: <span class="number">12</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">"errors"</span>: [],</span><br><span class="line">	<span class="attr">"program"</span>: &#123;</span><br><span class="line">		<span class="attr">"type"</span>: <span class="string">"Program"</span>,</span><br><span class="line">		<span class="attr">"start"</span>: <span class="number">0</span>,</span><br><span class="line">		<span class="attr">"end"</span>: <span class="number">12</span>,</span><br><span class="line">		<span class="attr">"loc"</span>: &#123;</span><br><span class="line">			<span class="attr">"start"</span>: &#123;</span><br><span class="line">				<span class="attr">"line"</span>: <span class="number">1</span>,</span><br><span class="line">				<span class="attr">"column"</span>: <span class="number">0</span></span><br><span class="line">			&#125;,</span><br><span class="line">			<span class="attr">"end"</span>: &#123;</span><br><span class="line">				<span class="attr">"line"</span>: <span class="number">1</span>,</span><br><span class="line">				<span class="attr">"column"</span>: <span class="number">12</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;,</span><br><span class="line">		<span class="attr">"sourceType"</span>: <span class="string">"script"</span>,</span><br><span class="line">		<span class="attr">"interpreter"</span>: <span class="literal">null</span>,</span><br><span class="line">		<span class="attr">"body"</span>: [</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="attr">"type"</span>: <span class="string">"VariableDeclaration"</span>,</span><br><span class="line">				<span class="attr">"start"</span>: <span class="number">0</span>,</span><br><span class="line">				<span class="attr">"end"</span>: <span class="number">12</span>,</span><br><span class="line">				<span class="attr">"loc"</span>: &#123;</span><br><span class="line">					<span class="attr">"start"</span>: &#123;</span><br><span class="line">						<span class="attr">"line"</span>: <span class="number">1</span>,</span><br><span class="line">						<span class="attr">"column"</span>: <span class="number">0</span></span><br><span class="line">					&#125;,</span><br><span class="line">					<span class="attr">"end"</span>: &#123;</span><br><span class="line">						<span class="attr">"line"</span>: <span class="number">1</span>,</span><br><span class="line">						<span class="attr">"column"</span>: <span class="number">12</span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;,</span><br><span class="line">				<span class="attr">"declarations"</span>: [</span><br><span class="line">					&#123;</span><br><span class="line">						<span class="attr">"type"</span>: <span class="string">"VariableDeclarator"</span>,</span><br><span class="line">						<span class="attr">"start"</span>: <span class="number">4</span>,</span><br><span class="line">						<span class="attr">"end"</span>: <span class="number">11</span>,</span><br><span class="line">						<span class="attr">"loc"</span>: &#123;</span><br><span class="line">							<span class="attr">"start"</span>: &#123;</span><br><span class="line">								<span class="attr">"line"</span>: <span class="number">1</span>,</span><br><span class="line">								<span class="attr">"column"</span>: <span class="number">4</span></span><br><span class="line">							&#125;,</span><br><span class="line">							<span class="attr">"end"</span>: &#123;</span><br><span class="line">								<span class="attr">"line"</span>: <span class="number">1</span>,</span><br><span class="line">								<span class="attr">"column"</span>: <span class="number">11</span></span><br><span class="line">							&#125;</span><br><span class="line">						&#125;,</span><br><span class="line">						<span class="attr">"id"</span>: &#123;</span><br><span class="line">							<span class="attr">"type"</span>: <span class="string">"Identifier"</span>,</span><br><span class="line">							<span class="attr">"start"</span>: <span class="number">4</span>,</span><br><span class="line">							<span class="attr">"end"</span>: <span class="number">5</span>,</span><br><span class="line">							<span class="attr">"loc"</span>: &#123;</span><br><span class="line">								<span class="attr">"start"</span>: &#123;</span><br><span class="line">									<span class="attr">"line"</span>: <span class="number">1</span>,</span><br><span class="line">									<span class="attr">"column"</span>: <span class="number">4</span></span><br><span class="line">								&#125;,</span><br><span class="line">								<span class="attr">"end"</span>: &#123;</span><br><span class="line">									<span class="attr">"line"</span>: <span class="number">1</span>,</span><br><span class="line">									<span class="attr">"column"</span>: <span class="number">5</span></span><br><span class="line">								&#125;,</span><br><span class="line">								<span class="attr">"identifierName"</span>: <span class="string">"a"</span></span><br><span class="line">							&#125;,</span><br><span class="line">							<span class="attr">"name"</span>: <span class="string">"a"</span></span><br><span class="line">						&#125;,</span><br><span class="line">						<span class="attr">"init"</span>: &#123;</span><br><span class="line">							<span class="attr">"type"</span>: <span class="string">"NumericLiteral"</span>,</span><br><span class="line">							<span class="attr">"start"</span>: <span class="number">8</span>,</span><br><span class="line">							<span class="attr">"end"</span>: <span class="number">11</span>,</span><br><span class="line">							<span class="attr">"loc"</span>: &#123;</span><br><span class="line">								<span class="attr">"start"</span>: &#123;</span><br><span class="line">									<span class="attr">"line"</span>: <span class="number">1</span>,</span><br><span class="line">									<span class="attr">"column"</span>: <span class="number">8</span></span><br><span class="line">								&#125;,</span><br><span class="line">								<span class="attr">"end"</span>: &#123;</span><br><span class="line">									<span class="attr">"line"</span>: <span class="number">1</span>,</span><br><span class="line">									<span class="attr">"column"</span>: <span class="number">11</span></span><br><span class="line">								&#125;</span><br><span class="line">							&#125;,</span><br><span class="line">							<span class="attr">"extra"</span>: &#123;</span><br><span class="line">								<span class="attr">"rawValue"</span>: <span class="number">123</span>,</span><br><span class="line">								<span class="attr">"raw"</span>: <span class="string">"123"</span></span><br><span class="line">							&#125;,</span><br><span class="line">							<span class="attr">"value"</span>: <span class="number">123</span></span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				],</span><br><span class="line">				<span class="attr">"kind"</span>: <span class="string">"var"</span></span><br><span class="line">			&#125;</span><br><span class="line">		],</span><br><span class="line">		<span class="attr">"directives"</span>: []</span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">"comments"</span>: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="访问AST节点内容"><a href="#访问AST节点内容" class="headerlink" title="访问AST节点内容"></a>访问AST节点内容</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 访问编译后的ast结构</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> parser = <span class="built_in">require</span>(<span class="string">"@babel/parser"</span>);</span><br><span class="line"><span class="keyword">const</span> traverse = <span class="built_in">require</span>(<span class="string">"@babel/traverse"</span>).default;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> js_code = <span class="string">"var a = 123;function b()&#123;debugger;&#125;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// const vistor = &#123;</span></span><br><span class="line"><span class="comment">//     VariableDeclaration(path) &#123;</span></span><br><span class="line"><span class="comment">//         console.log(path.type);</span></span><br><span class="line"><span class="comment">//         console.log(path.toString());</span></span><br><span class="line"><span class="comment">//     &#125;,</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 多路径查看，使用 "|"</span></span><br><span class="line"><span class="keyword">const</span> vistor = &#123;</span><br><span class="line">    <span class="string">"VariableDeclaration|VariableDeclarator"</span>(path)&#123;</span><br><span class="line">    <span class="comment">// "FunctionDeclaration|BlockStatement"(path)&#123;</span></span><br><span class="line">        <span class="built_in">console</span>.log(path.type);</span><br><span class="line">        <span class="built_in">console</span>.log(path.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> ast = parser.parse(js_code);</span><br><span class="line"></span><br><span class="line">traverse(ast, vistor)</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>技术</category>
        <category>AST</category>
      </categories>
      <tags>
        <tag>AST</tag>
      </tags>
  </entry>
  <entry>
    <title>AST学习-认识path和node</title>
    <url>/2020/06/16/article-17/</url>
    <content><![CDATA[<h3 id="path-路径-常用操作"><a href="#path-路径-常用操作" class="headerlink" title="path(路径)常用操作"></a>path(路径)常用操作</h3><h4 id="获取当前路径所对应的源代码"><a href="#获取当前路径所对应的源代码" class="headerlink" title="获取当前路径所对应的源代码"></a>获取当前路径所对应的源代码</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用toString()</span></span><br><span class="line"><span class="keyword">const</span> vistor = &#123;</span><br><span class="line">        VariableDeclaration(path) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(path.toString())</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="判断path是什么type"><a href="#判断path是什么type" class="headerlink" title="判断path是什么type"></a>判断path是什么type</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用 path.isXXX()</span></span><br><span class="line"><span class="keyword">const</span> vistor = &#123;</span><br><span class="line">   VariableDeclarator(path)&#123;</span><br><span class="line">       <span class="built_in">console</span>.log(path.isVariableDeclarator())</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="获取path的上一级路径"><a href="#获取path的上一级路径" class="headerlink" title="获取path的上一级路径"></a>获取path的上一级路径</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> parent = path.parentPath;</span><br><span class="line"><span class="built_in">console</span>.log(parent.node)</span><br></pre></td></tr></table></figure>



<h4 id="获取path的子路径"><a href="#获取path的子路径" class="headerlink" title="获取path的子路径"></a>获取path的子路径</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用 get()</span></span><br><span class="line">path.get(<span class="string">'id'</span>);</span><br></pre></td></tr></table></figure>



<h4 id="删除path"><a href="#删除path" class="headerlink" title="删除path"></a>删除path</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// remove()</span></span><br><span class="line">path.remove()</span><br></pre></td></tr></table></figure>



<h4 id="替换path"><a href="#替换path" class="headerlink" title="替换path"></a>替换path</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> t = <span class="built_in">require</span>(<span class="string">"@babel/types"</span>)</span><br><span class="line"><span class="comment">// 单路径可以使用replaceWith方法，多路径则使用replaceWithMultiple方法</span></span><br><span class="line"><span class="keyword">const</span> vistor = &#123;</span><br><span class="line">    VariableDeclarator(path)&#123;</span><br><span class="line">        <span class="comment">// 替换时注意路径结构</span></span><br><span class="line">        path.get(<span class="string">'init'</span>).replaceWith(t.NumericLiteral(<span class="number">996</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="path源码"><a href="#path源码" class="headerlink" title="path源码"></a>path源码</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@babel\traverse\lib\path</span><br></pre></td></tr></table></figure>



<h3 id="node-节点-常用操作"><a href="#node-节点-常用操作" class="headerlink" title="node(节点)常用操作"></a>node(节点)常用操作</h3><h4 id="获取当前节点所对应的源代码"><a href="#获取当前节点所对应的源代码" class="headerlink" title="获取当前节点所对应的源代码"></a>获取当前节点所对应的源代码</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> generator = <span class="built_in">require</span>(<span class="string">"@babel/generator"</span>).default;</span><br><span class="line"><span class="keyword">let</span> &#123;code&#125; = generator(node);</span><br></pre></td></tr></table></figure>



<h4 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> path.node.init</span><br></pre></td></tr></table></figure>



<h4 id="访问子节点"><a href="#访问子节点" class="headerlink" title="访问子节点"></a>访问子节点</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> vistor = &#123;</span><br><span class="line">    VariableDeclarator(path)&#123;</span><br><span class="line">        <span class="comment">// 打印节点初始化的值</span></span><br><span class="line">        <span class="built_in">console</span>.log(path.node.init.value)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 与 JSON 之间转换</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(path.node))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ast = parser.parse(jscode);</span><br><span class="line">traverse(ast, vistor)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>技术</category>
        <category>AST</category>
      </categories>
      <tags>
        <tag>AST</tag>
      </tags>
  </entry>
  <entry>
    <title>AST学习-十六进制还原十进制</title>
    <url>/2020/06/17/article-18/</url>
    <content><![CDATA[<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">"\x48\x65\x6c\x6c\x6f\x2c\x4e\x69\x67\x68\x74\x54\x65\x61\x6d\x21"</span>;</span><br></pre></td></tr></table></figure>



<h4 id="AST-TREE分析"><a href="#AST-TREE分析" class="headerlink" title="AST-TREE分析"></a>AST-TREE分析</h4><p><img src="/2020/06/17/article-18/WX20200617-115051.png" alt></p>
<p>由上图可知影响结果的节点是 <strong><em>extra.raw</em></strong> ，接下来对这个节点进行操作</p>
<h4 id="方式一：遍历VariableDeclarator下init节点，符合条件后将extra-raw重新赋值。"><a href="#方式一：遍历VariableDeclarator下init节点，符合条件后将extra-raw重新赋值。" class="headerlink" title="方式一：遍历VariableDeclarator下init节点，符合条件后将extra.raw重新赋值。"></a>方式一：遍历VariableDeclarator下init节点，符合条件后将extra.raw重新赋值。</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> vistor = &#123;</span><br><span class="line">    VariableDeclarator(path)&#123;</span><br><span class="line">        <span class="keyword">const</span> init = path.get(<span class="string">'init'</span>);</span><br><span class="line">        <span class="keyword">if</span> (!init.isStringLiteral()) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">const</span> node = init.node;</span><br><span class="line">        <span class="keyword">let</span> &#123;value, extra&#125; = node;</span><br><span class="line">        extra.raw = <span class="string">'"'</span> + value + <span class="string">':)"'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="方式二：直接遍历type为StringLiteral的路径。"><a href="#方式二：直接遍历type为StringLiteral的路径。" class="headerlink" title="方式二：直接遍历type为StringLiteral的路径。"></a>方式二：直接遍历type为StringLiteral的路径。</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> vistor = &#123;</span><br><span class="line">    StringLiteral(path)&#123;</span><br><span class="line">        <span class="keyword">let</span> &#123;value, extra&#125; = path.node;</span><br><span class="line">        extra.raw = <span class="string">'"'</span> + value + <span class="string">':)"'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="方式三：使用新建节点替换"><a href="#方式三：使用新建节点替换" class="headerlink" title="方式三：使用新建节点替换"></a>方式三：使用新建节点替换</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> vistor = &#123;</span><br><span class="line">    StringLiteral(path)&#123;</span><br><span class="line">        <span class="keyword">let</span> &#123;value&#125; = path.node;</span><br><span class="line">        path.replaceWith(t.StringLiteral(value + <span class="string">":("</span>));</span><br><span class="line">        <span class="comment">// 因为新生成的节点类型也是StringLiteral，所以会一直遍历下去，最终导致栈溢出</span></span><br><span class="line">        <span class="comment">// 解决方案为使用path.stop()方法，让其遍历后立即停止。</span></span><br><span class="line">        path.stop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="方式四：删除raw节点"><a href="#方式四：删除raw节点" class="headerlink" title="方式四：删除raw节点"></a>方式四：删除raw节点</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> vistor = &#123;</span><br><span class="line">    StringLiteral(path)&#123;</span><br><span class="line">        <span class="keyword">let</span> &#123;extra&#125; = path.node;</span><br><span class="line">        <span class="keyword">delete</span> extra.raw;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="通用步骤-十六进制数值-字符串还原十进制"><a href="#通用步骤-十六进制数值-字符串还原十进制" class="headerlink" title="通用步骤 (十六进制数值/字符串还原十进制)"></a>通用步骤 (十六进制数值/字符串还原十进制)</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> vistor = &#123;</span><br><span class="line">    <span class="string">"StringLiteral|NumericLiteral"</span>(path)&#123;</span><br><span class="line">        <span class="comment">// 删除extra节点</span></span><br><span class="line">        <span class="keyword">delete</span> path.node.extra</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>技术</category>
        <category>AST</category>
      </categories>
      <tags>
        <tag>AST</tag>
      </tags>
  </entry>
  <entry>
    <title>AST学习-插入节点</title>
    <url>/2020/06/17/article-19/</url>
    <content><![CDATA[<h3 id="变量后面插入一个未被初始化的变量"><a href="#变量后面插入一个未被初始化的变量" class="headerlink" title="变量后面插入一个未被初始化的变量"></a>变量后面插入一个未被初始化的变量</h3><p>示例代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">996</span>;</span><br></pre></td></tr></table></figure>

<h4 id="新构造一个-Identifier-类型的节点，然后直接插入"><a href="#新构造一个-Identifier-类型的节点，然后直接插入" class="headerlink" title="新构造一个 Identifier 类型的节点，然后直接插入"></a>新构造一个 <strong>Identifier</strong> 类型的节点，然后直接插入</h4><p>遍历 <strong><em>VariableDeclarator</em></strong> 节点</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> vistor = &#123;</span><br><span class="line">    VariableDeclarator(path)&#123;</span><br><span class="line">        path.insertAfter(t.Identifier(<span class="string">'b'</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>查看输出结果</p>
<p><img src="/2020/06/17/article-19/WX20200617-144220.png" alt></p>
<h4 id="使用ExpressionStatement表达式语句"><a href="#使用ExpressionStatement表达式语句" class="headerlink" title="使用ExpressionStatement表达式语句"></a>使用ExpressionStatement表达式语句</h4><p>遍历 <strong><em>VariableDeclaration</em></strong> 节点</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// var a = 996;b = 250;</span></span><br><span class="line"><span class="keyword">const</span> vistor = &#123;</span><br><span class="line">    VariableDeclaration(path)&#123;</span><br><span class="line">        <span class="keyword">const</span> operator = <span class="string">"="</span>;</span><br><span class="line">        <span class="keyword">const</span> left = t.Identifier(<span class="string">'var b'</span>);</span><br><span class="line">        <span class="keyword">const</span> right = t.NumericLiteral(<span class="number">250</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> new_assign = t.AssignmentExpression(operator, left, right);</span><br><span class="line">        <span class="keyword">const</span> new_express = t.ExpressionStatement(new_assign);</span><br><span class="line"></span><br><span class="line">        path.insertAfter(new_express);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>查看结果</p>
<p><img src="/2020/06/17/article-19/WX20200617-153708.png" alt></p>
<h4 id="使用VariableDeclaration表达式语句"><a href="#使用VariableDeclaration表达式语句" class="headerlink" title="使用VariableDeclaration表达式语句"></a>使用VariableDeclaration表达式语句</h4><p>遍历 <strong><em>VariableDeclaration</em></strong> 节点</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// var a = 996;var b = 250;</span></span><br><span class="line"><span class="keyword">const</span> vistor = &#123;</span><br><span class="line">    VariableDeclaration(path)&#123;</span><br><span class="line">        <span class="keyword">const</span> id = t.Identifier(<span class="string">'b'</span>);</span><br><span class="line">        <span class="keyword">const</span> init = t.NumericLiteral(<span class="number">250</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> new_variable = t.VariableDeclarator(id, init)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> kind = <span class="string">'var'</span>;</span><br><span class="line">        <span class="keyword">const</span> new_variable_express = t.VariableDeclaration(kind, <span class="built_in">Array</span>(new_variable))</span><br><span class="line">        path.insertAfter(new_variable_express);</span><br><span class="line">        path.stop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>查看结果</p>
<p><img src="/2020/06/17/article-19/WX20200617-144713.png" alt></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>AST</category>
      </categories>
      <tags>
        <tag>AST</tag>
      </tags>
  </entry>
  <entry>
    <title>AST学习-拆分一个Literal类型的节点</title>
    <url>/2020/06/17/article-20/</url>
    <content><![CDATA[<h3 id="拆分NumericLiteral节点类型"><a href="#拆分NumericLiteral节点类型" class="headerlink" title="拆分NumericLiteral节点类型"></a>拆分NumericLiteral节点类型</h3><p>示例代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">12345678</span>;</span><br></pre></td></tr></table></figure>

<h4 id="了解异或操作"><a href="#了解异或操作" class="headerlink" title="了解异或操作"></a>了解异或操作</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># 生成随机八位负数</span><br><span class="line"><span class="keyword">const</span> first = <span class="number">0</span> - <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">10000000</span> + <span class="number">10000000</span>)</span><br><span class="line"># 与a做异或操作</span><br><span class="line"><span class="keyword">const</span> second = a ^ first;</span><br><span class="line"># 将first 与 second 进行异或操作</span><br><span class="line"><span class="keyword">const</span> res = first ^ second</span><br><span class="line">&gt;&gt;&gt;<span class="number">12345678</span></span><br></pre></td></tr></table></figure>

<p>可以发现输出结果为 <strong><em>12345678</em></strong>,  <strong><em>res = first ^ second = first ^ first ^ a = 0 ^ a = a</em></strong></p>
<p>了解了这个概念就可以在 AST 中实现了</p>
<h4 id="在-AST-中实现"><a href="#在-AST-中实现" class="headerlink" title="在 AST 中实现"></a>在 AST 中实现</h4><p><img src="/2020/06/17/article-20/WX20200617-164925.png" alt></p>
<p>通过 AST-TREE查看可知异或表达式属于 <strong><em>BinaryExpression</em></strong> 节点，所以我们需要构造这个节点</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> t = <span class="built_in">require</span>(<span class="string">"@babel/types"</span>)</span><br><span class="line">t.BinaryExpression(<span class="string">'^'</span>, t.NumericLiteral(first), t.NumericLiteral(second))</span><br></pre></td></tr></table></figure>

<p>然后使用该节点替换原来的 <strong><em>NumericLiteral</em></strong> 节点就好了，代码如下</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> vistor = &#123;</span><br><span class="line">    NumericLiteral(path)&#123;</span><br><span class="line">        <span class="keyword">const</span> node = path.node;</span><br><span class="line">        <span class="keyword">const</span> value = node.value;</span><br><span class="line">        <span class="keyword">const</span> first = <span class="number">0</span> - <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">10000000</span> + <span class="number">10000000</span>);</span><br><span class="line">        <span class="keyword">const</span> second = value ^ first;</span><br><span class="line"></span><br><span class="line">        path.replaceWith(t.BinaryExpression(<span class="string">'^'</span>, t.NumericLiteral(first), t.NumericLiteral(second)));</span><br><span class="line">        path.stop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>查看结果</p>
<p><img src="/2020/06/17/article-20/WX20200617-165333.png" alt></p>
]]></content>
      <categories>
        <category>技术</category>
        <category>AST</category>
      </categories>
      <tags>
        <tag>AST</tag>
      </tags>
  </entry>
</search>
